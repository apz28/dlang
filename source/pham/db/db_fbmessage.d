/*
 *
 * License: $(HTTP www.boost.org/LICENSE_1_0.txt, Boost License 1.0).
 * Authors: An Pham
 *
 * Copyright An Pham 2017 - xxxx.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
*/

module pham.db.db_fbmessage;

import pham.utl.utl_object : singleton;

nothrow @safe:

class FbMessages
{
nothrow @safe:

public:
    this() pure
    {
        initDefault();
    }

    final string getImpl(int id) const pure
    {
        if (auto e = id in messages)
            return *e;
        else
            return null;
    }

    static FbMessages instance() @trusted
    {
        return singleton(_instance, &createInstance);
    }

    static string get(int id)
    {
		return instance().getImpl(id);
    }

protected:
    static FbMessages createInstance() pure
    {
        return new FbMessages();
    }

    final void initDefault() pure
    {
        messages[335544321] = "arithmetic exception, numeric overflow, or string truncation"; /* arith_except */
        messages[335544322] = "invalid database key"; /* bad_dbkey */
        messages[335544323] = "file @1 is not a valid database"; /* bad_db_format */
        messages[335544324] = "invalid database handle (no active connection)"; /* bad_db_handle */
        messages[335544325] = "bad parameters on attach or create database"; /* bad_dpb_content */
        messages[335544326] = "unrecognized database parameter block"; /* bad_dpb_form */
        messages[335544327] = "invalid request handle"; /* bad_req_handle */
        messages[335544328] = "invalid BLOB handle"; /* bad_segstr_handle */
        messages[335544329] = "invalid BLOB ID"; /* bad_segstr_id */
        messages[335544330] = "invalid parameter in transaction parameter block"; /* bad_tpb_content */
        messages[335544331] = "invalid format for transaction parameter block"; /* bad_tpb_form */
        messages[335544332] = "invalid transaction handle (expecting explicit transaction start)"; /* bad_trans_handle */
        messages[335544333] = "internal Firebird consistency check (@1)"; /* bug_check */
        messages[335544334] = "conversion error from string \"@1\""; /* convert_error */
        messages[335544335] = "database file appears corrupt (@1)"; /* db_corrupt */
        messages[335544336] = "deadlock"; /* deadlock */
        messages[335544337] = "attempt to start more than @1 transactions"; /* excess_trans */
        messages[335544338] = "no match for first value expression"; /* from_no_match */
        messages[335544339] = "information type inappropriate for object specified"; /* infinap */
        messages[335544340] = "no information of this type available for object specified"; /* infona */
        messages[335544341] = "unknown information item"; /* infunk */
        messages[335544342] = "action cancelled by trigger (@1) to preserve data integrity"; /* integ_fail */
        messages[335544343] = "invalid request BLR at offset @1"; /* invalid_blr */
        messages[335544344] = "I/O error during \"@1\" operation for file \"@2\""; /* io_error */
        messages[335544345] = "lock conflict on no wait transaction"; /* lock_conflict */
        messages[335544346] = "corrupt system table"; /* metadata_corrupt */
        messages[335544347] = "validation error for column @1, value \"@2\""; /* not_valid */
        messages[335544348] = "no current record for fetch operation"; /* no_cur_rec */
        messages[335544349] = "attempt to store duplicate value (visible to active transactions) in unique index \"@1\""; /* no_dup */
        messages[335544350] = "program attempted to exit without finishing database"; /* no_finish */
        messages[335544351] = "unsuccessful metadata update"; /* no_meta_update */
        messages[335544352] = "no permission for @1 access to @2 @3"; /* no_priv */
        messages[335544353] = "transaction is not in limbo"; /* no_recon */
        messages[335544354] = "invalid database key"; /* no_record */
        messages[335544355] = "BLOB was not closed"; /* no_segstr_close */
        messages[335544356] = "metadata is obsolete"; /* obsolete_metadata */
        messages[335544357] = "cannot disconnect database with open transactions (@1 active)"; /* open_trans */
        messages[335544358] = "message length error (encountered @1, expected @2)"; /* port_len */
        messages[335544359] = "attempted update of read-only column @1"; /* read_only_field */
        messages[335544360] = "attempted update of read-only table"; /* read_only_rel */
        messages[335544361] = "attempted update during read-only transaction"; /* read_only_trans */
        messages[335544362] = "cannot update read-only view @1"; /* read_only_view */
        messages[335544363] = "no transaction for request"; /* req_no_trans */
        messages[335544364] = "request synchronization error"; /* req_sync */
        messages[335544365] = "request referenced an unavailable database"; /* req_wrong_db */
        messages[335544366] = "segment buffer length shorter than expected"; /* segment */
        messages[335544367] = "attempted retrieval of more segments than exist"; /* segstr_eof */
        messages[335544368] = "attempted invalid operation on a BLOB"; /* segstr_no_op */
        messages[335544369] = "attempted read of a new, open BLOB"; /* segstr_no_read */
        messages[335544370] = "attempted action on BLOB outside transaction"; /* segstr_no_trans */
        messages[335544371] = "attempted write to read-only BLOB"; /* segstr_no_write */
        messages[335544372] = "attempted reference to BLOB in unavailable database"; /* segstr_wrong_db */
        messages[335544373] = "operating system directive @1 failed"; /* sys_request */
        messages[335544374] = "attempt to fetch past the last record in a record stream"; /* stream_eof */
        messages[335544375] = "unavailable database"; /* unavailable */
        messages[335544376] = "table @1 was omitted from the transaction reserving list"; /* unres_rel */
        messages[335544377] = "request includes a DSRI extension not supported in this implementation"; /* uns_ext */
        messages[335544378] = "feature is not supported"; /* wish_list */
        messages[335544379] = "unsupported on-disk structure for file @1; found @2.@3, support @4.@5"; /* wrong_ods */
        messages[335544380] = "wrong number of arguments on call"; /* wronumarg */
        messages[335544381] = "Implementation limit exceeded"; /* imp_exc */
        messages[335544382] = "@1"; /* random */
        messages[335544383] = "unrecoverable conflict with limbo transaction @1"; /* fatal_conflict */
        messages[335544384] = "internal error"; /* badblk */
        messages[335544385] = "internal error"; /* invpoolcl */
        messages[335544386] = "too many requests"; /* nopoolids */
        messages[335544387] = "internal error"; /* relbadblk */
        messages[335544388] = "block size exceeds implementation restriction"; /* blktoobig */
        messages[335544389] = "buffer exhausted"; /* bufexh */
        messages[335544390] = "BLR syntax error: expected @1 at offset @2, encountered @3"; /* syntaxerr */
        messages[335544391] = "buffer in use"; /* bufinuse */
        messages[335544392] = "internal error"; /* bdbincon */
        messages[335544393] = "request in use"; /* reqinuse */
        messages[335544394] = "incompatible version of on-disk structure"; /* badodsver */
        messages[335544395] = "table @1 is not defined"; /* relnotdef */
        messages[335544396] = "column @1 is not defined in table @2"; /* fldnotdef */
        messages[335544397] = "internal error"; /* dirtypage */
        messages[335544398] = "internal error"; /* waifortra */
        messages[335544399] = "internal error"; /* doubleloc */
        messages[335544400] = "internal error"; /* nodnotfnd */
        messages[335544401] = "internal error"; /* dupnodfnd */
        messages[335544402] = "internal error"; /* locnotmar */
        messages[335544403] = "page @1 is of wrong type (expected @2, found @3)"; /* badpagtyp */
        messages[335544404] = "database corrupted"; /* corrupt */
        messages[335544405] = "checksum error on database page @1"; /* badpage */
        messages[335544406] = "index is broken"; /* badindex */
        messages[335544407] = "database handle not zero"; /* dbbnotzer */
        messages[335544408] = "transaction handle not zero"; /* tranotzer */
        messages[335544409] = "transaction--request mismatch (synchronization error)"; /* trareqmis */
        messages[335544410] = "bad handle count"; /* badhndcnt */
        messages[335544411] = "wrong version of transaction parameter block"; /* wrotpbver */
        messages[335544412] = "unsupported BLR version (expected @1, encountered @2)"; /* wroblrver */
        messages[335544413] = "wrong version of database parameter block"; /* wrodpbver */
        messages[335544414] = "BLOB and array data types are not supported for @1 operation"; /* blobnotsup */
        messages[335544415] = "database corrupted"; /* badrelation */
        messages[335544416] = "internal error"; /* nodetach */
        messages[335544417] = "internal error"; /* notremote */
        messages[335544418] = "transaction in limbo"; /* trainlim */
        messages[335544419] = "transaction not in limbo"; /* notinlim */
        messages[335544420] = "transaction outstanding"; /* traoutsta */
        messages[335544421] = "connection rejected by remote interface"; /* connect_reject */
        messages[335544422] = "internal error"; /* dbfile */
        messages[335544423] = "internal error"; /* orphan */
        messages[335544424] = "no lock manager available"; /* no_lock_mgr */
        messages[335544425] = "context already in use (BLR error)"; /* ctxinuse */
        messages[335544426] = "context not defined (BLR error)"; /* ctxnotdef */
        messages[335544427] = "data operation not supported"; /* datnotsup */
        messages[335544428] = "undefined message number"; /* badmsgnum */
        messages[335544429] = "undefined parameter number"; /* badparnum */
        messages[335544430] = "unable to allocate memory from operating system"; /* virmemexh */
        messages[335544431] = "blocking signal has been received"; /* blocking_signal */
        messages[335544432] = "lock manager error"; /* lockmanerr */
        messages[335544433] = "communication error with journal \"@1\""; /* journerr */
        messages[335544434] = "key size exceeds implementation restriction for index \"@1\""; /* keytoobig */
        messages[335544435] = "null segment of UNIQUE KEY"; /* nullsegkey */
        messages[335544436] = "SQL error code = @1"; /* sqlerr */
        messages[335544437] = "wrong DYN version"; /* wrodynver */
        messages[335544438] = "function @1 is not defined"; /* funnotdef */
        messages[335544439] = "function @1 could not be matched"; /* funmismat */
        messages[335544441] = "database detach completed with errors"; /* bad_detach */
        messages[335544442] = "database system cannot read argument @1"; /* noargacc_read */
        messages[335544443] = "database system cannot write argument @1"; /* noargacc_write */
        messages[335544444] = "operation not supported"; /* read_only */
        messages[335544445] = "@1 extension error"; /* ext_err */
        messages[335544446] = "not updatable"; /* non_updatable */
        messages[335544447] = "no rollback performed"; /* no_rollback */
        messages[335544450] = "@1"; /* misc_interpreted */
        messages[335544451] = "update conflicts with concurrent update"; /* update_conflict */
        messages[335544452] = "product @1 is not licensed"; /* unlicensed */
        messages[335544453] = "object @1 is in use"; /* obj_in_use */
        messages[335544454] = "filter not found to convert type @1 to type @2"; /* nofilter */
        messages[335544455] = "cannot attach active shadow file"; /* shadow_accessed */
        messages[335544456] = "invalid slice description language at offset @1"; /* invalid_sdl */
        messages[335544457] = "subscript out of bounds"; /* out_of_bounds */
        messages[335544458] = "column not array or invalid dimensions (expected @1, encountered @2)"; /* invalid_dimension */
        messages[335544459] = "record from transaction @1 is stuck in limbo"; /* rec_in_limbo */
        messages[335544460] = "a file in manual shadow @1 is unavailable"; /* shadow_missing */
        messages[335544461] = "secondary server attachments cannot validate databases"; /* cant_validate */
        messages[335544462] = "secondary server attachments cannot start journaling"; /* cant_start_journal */
        messages[335544463] = "generator @1 is not defined"; /* gennotdef */
        messages[335544464] = "secondary server attachments cannot start logging"; /* cant_start_logging */
        messages[335544465] = "invalid BLOB type for operation"; /* bad_segstr_type */
        messages[335544466] = "violation of FOREIGN KEY constraint \"@1\" on table \"@2\""; /* foreign_key */
        messages[335544467] = "minor version too high found @1 expected @2"; /* high_minor */
        messages[335544468] = "transaction @1 is @2"; /* tra_state */
        messages[335544469] = "transaction marked invalid and cannot be committed"; /* trans_invalid */
        messages[335544470] = "cache buffer for page @1 invalid"; /* buf_invalid */
        messages[335544471] = "there is no index in table @1 with id @2"; /* indexnotdefined */
        messages[335544472] = "Your user name and password are not defined. Ask your database administrator to set up a Firebird login."; /* login */
        messages[335544473] = "invalid bookmark handle"; /* invalid_bookmark */
        messages[335544474] = "invalid lock level @1"; /* bad_lock_level */
        messages[335544475] = "lock on table @1 conflicts with existing lock"; /* relation_lock */
        messages[335544476] = "requested record lock conflicts with existing lock"; /* record_lock */
        messages[335544477] = "maximum indexes per table (@1) exceeded"; /* max_idx */
        messages[335544478] = "enable journal for database before starting online dump"; /* jrn_enable */
        messages[335544479] = "online dump failure. Retry dump"; /* old_failure */
        messages[335544480] = "an online dump is already in progress"; /* old_in_progress */
        messages[335544481] = "no more disk/tape space.  Cannot continue online dump"; /* old_no_space */
        messages[335544482] = "journaling allowed only if database has Write-ahead Log"; /* no_wal_no_jrn */
        messages[335544483] = "maximum number of online dump files that can be specified is 16"; /* num_old_files */
        messages[335544484] = "error in opening Write-ahead Log file during recovery"; /* wal_file_open */
        messages[335544485] = "invalid statement handle"; /* bad_stmt_handle */
        messages[335544486] = "Write-ahead log subsystem failure"; /* wal_failure */
        messages[335544487] = "WAL Writer error"; /* walw_err */
        messages[335544488] = "Log file header of @1 too small"; /* logh_small */
        messages[335544489] = "Invalid version of log file @1"; /* logh_inv_version */
        messages[335544490] = "Log file @1 not latest in the chain but open flag still set"; /* logh_open_flag */
        messages[335544491] = "Log file @1 not closed properly; database recovery may be required"; /* logh_open_flag2 */
        messages[335544492] = "Database name in the log file @1 is different"; /* logh_diff_dbname */
        messages[335544493] = "Unexpected end of log file @1 at offset @2"; /* logf_unexpected_eof */
        messages[335544494] = "Incomplete log record at offset @1 in log file @2"; /* logr_incomplete */
        messages[335544495] = "Log record header too small at offset @1 in log file @2"; /* logr_header_small */
        messages[335544496] = "Log block too small at offset @1 in log file @2"; /* logb_small */
        messages[335544497] = "Illegal attempt to attach to an uninitialized WAL segment for @1"; /* wal_illegal_attach */
        messages[335544498] = "Invalid WAL parameter block option @1"; /* wal_invalid_wpb */
        messages[335544499] = "Cannot roll over to the next log file @1"; /* wal_err_rollover */
        messages[335544500] = "database does not use Write-ahead Log"; /* no_wal */
        messages[335544501] = "cannot drop log file when journaling is enabled"; /* drop_wal */
        messages[335544502] = "reference to invalid stream number"; /* stream_not_defined */
        messages[335544503] = "WAL subsystem encountered error"; /* wal_subsys_error */
        messages[335544504] = "WAL subsystem corrupted"; /* wal_subsys_corrupt */
        messages[335544505] = "must specify archive file when enabling long term journal for databases with round-robin log files"; /* no_archive */
        messages[335544506] = "database @1 shutdown in progress"; /* shutinprog */
        messages[335544507] = "refresh range number @1 already in use"; /* range_in_use */
        messages[335544508] = "refresh range number @1 not found"; /* range_not_found */
        messages[335544509] = "CHARACTER SET @1 is not defined"; /* charset_not_found */
        messages[335544510] = "lock time-out on wait transaction"; /* lock_timeout */
        messages[335544511] = "procedure @1 is not defined"; /* prcnotdef */
        messages[335544512] = "Input parameter mismatch for procedure @1"; /* prcmismat */
        messages[335544514] = "Could not expand the WAL segment for database @1"; /* wal_cant_expand */
        messages[335544515] = "status code @1 unknown"; /* codnotdef */
        messages[335544516] = "exception @1 not defined"; /* xcpnotdef */
        messages[335544517] = "exception @1"; /* except */
        messages[335544518] = "restart shared cache manager"; /* cache_restart */
        messages[335544519] = "invalid lock handle"; /* bad_lock_handle */
        messages[335544520] = "long-term journaling already enabled"; /* jrn_present */
        messages[335544521] = "Unable to roll over please see Firebird log."; /* wal_err_rollover2 */
        messages[335544522] = "WAL I/O error.  Please see Firebird log."; /* wal_err_logwrite */
        messages[335544523] = "WAL writer - Journal server communication error.  Please see Firebird log."; /* wal_err_jrn_comm */
        messages[335544524] = "WAL buffers cannot be increased.  Please see Firebird log."; /* wal_err_expansion */
        messages[335544525] = "WAL setup error.  Please see Firebird log."; /* wal_err_setup */
        messages[335544526] = "obsolete"; /* wal_err_ww_sync */
        messages[335544527] = "Cannot start WAL writer for the database @1"; /* wal_err_ww_start */
        messages[335544528] = "database @1 shutdown"; /* shutdown */
        messages[335544529] = "cannot modify an existing user privilege"; /* existing_priv_mod */
        messages[335544530] = "Cannot delete PRIMARY KEY being used in FOREIGN KEY definition."; /* primary_key_ref */
        messages[335544531] = "Column used in a PRIMARY constraint must be NOT NULL."; /* primary_key_notnull */
        messages[335544532] = "Name of Referential Constraint not defined in constraints table."; /* ref_cnstrnt_notfound */
        messages[335544533] = "Non-existent PRIMARY or UNIQUE KEY specified for FOREIGN KEY."; /* foreign_key_notfound */
        messages[335544534] = "Cannot update constraints (RDB$REF_CONSTRAINTS)."; /* ref_cnstrnt_update */
        messages[335544535] = "Cannot update constraints (RDB$CHECK_CONSTRAINTS)."; /* check_cnstrnt_update */
        messages[335544536] = "Cannot delete CHECK constraint entry (RDB$CHECK_CONSTRAINTS)"; /* check_cnstrnt_del */
        messages[335544537] = "Cannot delete index segment used by an Integrity Constraint"; /* integ_index_seg_del */
        messages[335544538] = "Cannot update index segment used by an Integrity Constraint"; /* integ_index_seg_mod */
        messages[335544539] = "Cannot delete index used by an Integrity Constraint"; /* integ_index_del */
        messages[335544540] = "Cannot modify index used by an Integrity Constraint"; /* integ_index_mod */
        messages[335544541] = "Cannot delete trigger used by a CHECK Constraint"; /* check_trig_del */
        messages[335544542] = "Cannot update trigger used by a CHECK Constraint"; /* check_trig_update */
        messages[335544543] = "Cannot delete column being used in an Integrity Constraint."; /* cnstrnt_fld_del */
        messages[335544544] = "Cannot rename column being used in an Integrity Constraint."; /* cnstrnt_fld_rename */
        messages[335544545] = "Cannot update constraints (RDB$RELATION_CONSTRAINTS)."; /* rel_cnstrnt_update */
        messages[335544546] = "Cannot define constraints on views"; /* constaint_on_view */
        messages[335544547] = "internal Firebird consistency check (invalid RDB$CONSTRAINT_TYPE)"; /* invld_cnstrnt_type */
        messages[335544548] = "Attempt to define a second PRIMARY KEY for the same table"; /* primary_key_exists */
        messages[335544549] = "cannot modify or erase a system trigger"; /* systrig_update */
        messages[335544550] = "only the owner of a table may reassign ownership"; /* not_rel_owner */
        messages[335544551] = "could not find object for GRANT"; /* grant_obj_notfound */
        messages[335544552] = "could not find column for GRANT"; /* grant_fld_notfound */
        messages[335544553] = "user does not have GRANT privileges for operation"; /* grant_nopriv */
        messages[335544554] = "object has non-SQL security class defined"; /* nonsql_security_rel */
        messages[335544555] = "column has non-SQL security class defined"; /* nonsql_security_fld */
        messages[335544556] = "Write-ahead Log without shared cache configuration not allowed"; /* wal_cache_err */
        messages[335544557] = "database shutdown unsuccessful"; /* shutfail */
        messages[335544558] = "Operation violates CHECK constraint @1 on view or table @2"; /* check_constraint */
        messages[335544559] = "invalid service handle"; /* bad_svc_handle */
        messages[335544560] = "database @1 shutdown in @2 seconds"; /* shutwarn */
        messages[335544561] = "wrong version of service parameter block"; /* wrospbver */
        messages[335544562] = "unrecognized service parameter block"; /* bad_spb_form */
        messages[335544563] = "service @1 is not defined"; /* svcnotdef */
        messages[335544564] = "long-term journaling not enabled"; /* no_jrn */
        messages[335544565] = "Cannot transliterate character between character sets"; /* transliteration_failed */
        messages[335544566] = "WAL defined; Cache Manager must be started first"; /* start_cm_for_wal */
        messages[335544567] = "Overflow log specification required for round-robin log"; /* wal_ovflow_log_required */
        messages[335544568] = "Implementation of text subtype @1 not located."; /* text_subtype */
        messages[335544569] = "Dynamic SQL Error"; /* dsql_error */
        messages[335544570] = "Invalid command"; /* dsql_command_err */
        messages[335544571] = "Data type for constant unknown"; /* dsql_constant_err */
        messages[335544572] = "Invalid cursor reference"; /* dsql_cursor_err */
        messages[335544573] = "Data type unknown"; /* dsql_datatype_err */
        messages[335544574] = "Invalid cursor declaration"; /* dsql_decl_err */
        messages[335544575] = "Cursor @1 is not updatable"; /* dsql_cursor_update_err */
        messages[335544576] = "Attempt to reopen an open cursor"; /* dsql_cursor_open_err */
        messages[335544577] = "Attempt to reclose a closed cursor"; /* dsql_cursor_close_err */
        messages[335544578] = "Column unknown"; /* dsql_field_err */
        messages[335544579] = "Internal error"; /* dsql_internal_err */
        messages[335544580] = "Table unknown"; /* dsql_relation_err */
        messages[335544581] = "Procedure unknown"; /* dsql_procedure_err */
        messages[335544582] = "Request unknown"; /* dsql_request_err */
        messages[335544583] = "SQLDA error"; /* dsql_sqlda_err */
        messages[335544584] = "Count of read-write columns does not equal count of values"; /* dsql_var_count_err */
        messages[335544585] = "Invalid statement handle"; /* dsql_stmt_handle */
        messages[335544586] = "Function unknown"; /* dsql_function_err */
        messages[335544587] = "Column is not a BLOB"; /* dsql_blob_err */
        messages[335544588] = "COLLATION @1 for CHARACTER SET @2 is not defined"; /* collation_not_found */
        messages[335544589] = "COLLATION @1 is not valid for specified CHARACTER SET"; /* collation_not_for_charset */
        messages[335544590] = "Option specified more than once"; /* dsql_dup_option */
        messages[335544591] = "Unknown transaction option"; /* dsql_tran_err */
        messages[335544592] = "Invalid array reference"; /* dsql_invalid_array */
        messages[335544593] = "Array declared with too many dimensions"; /* dsql_max_arr_dim_exceeded */
        messages[335544594] = "Illegal array dimension range"; /* dsql_arr_range_error */
        messages[335544595] = "Trigger unknown"; /* dsql_trigger_err */
        messages[335544596] = "Subselect illegal in this context"; /* dsql_subselect_err */
        messages[335544597] = "Cannot prepare a CREATE DATABASE/SCHEMA statement"; /* dsql_crdb_prepare_err */
        messages[335544598] = "must specify column name for view select expression"; /* specify_field_err */
        messages[335544599] = "number of columns does not match select list"; /* num_field_err */
        messages[335544600] = "Only simple column names permitted for VIEW WITH CHECK OPTION"; /* col_name_err */
        messages[335544601] = "No WHERE clause for VIEW WITH CHECK OPTION"; /* where_err */
        messages[335544602] = "Only one table allowed for VIEW WITH CHECK OPTION"; /* table_view_err */
        messages[335544603] = "DISTINCT, GROUP or HAVING not permitted for VIEW WITH CHECK OPTION"; /* distinct_err */
        messages[335544604] = "FOREIGN KEY column count does not match PRIMARY KEY"; /* key_field_count_err */
        messages[335544605] = "No subqueries permitted for VIEW WITH CHECK OPTION"; /* subquery_err */
        messages[335544606] = "expression evaluation not supported"; /* expression_eval_err */
        messages[335544607] = "gen.c: node not supported"; /* node_err */
        messages[335544608] = "Unexpected end of command"; /* command_end_err */
        messages[335544609] = "INDEX @1"; /* index_name */
        messages[335544610] = "EXCEPTION @1"; /* exception_name */
        messages[335544611] = "COLUMN @1"; /* field_name */
        messages[335544612] = "Token unknown"; /* token_err */
        messages[335544613] = "union not supported"; /* union_err */
        messages[335544614] = "Unsupported DSQL construct"; /* dsql_construct_err */
        messages[335544615] = "column used with aggregate"; /* field_aggregate_err */
        messages[335544616] = "invalid column reference"; /* field_ref_err */
        messages[335544617] = "invalid ORDER BY clause"; /* order_by_err */
        messages[335544618] = "Return mode by value not allowed for this data type"; /* return_mode_err */
        messages[335544619] = "External functions cannot have more than 10 parameters"; /* extern_func_err */
        messages[335544620] = "alias @1 conflicts with an alias in the same statement"; /* alias_conflict_err */
        messages[335544621] = "alias @1 conflicts with a procedure in the same statement"; /* procedure_conflict_error */
        messages[335544622] = "alias @1 conflicts with a table in the same statement"; /* relation_conflict_err */
        messages[335544623] = "Illegal use of keyword VALUE"; /* dsql_domain_err */
        messages[335544624] = "segment count of 0 defined for index @1"; /* idx_seg_err */
        messages[335544625] = "A node name is not permitted in a secondary, shadow, cache or log file name"; /* node_name_err */
        messages[335544626] = "TABLE @1"; /* table_name */
        messages[335544627] = "PROCEDURE @1"; /* proc_name */
        messages[335544628] = "cannot create index @1"; /* idx_create_err */
        messages[335544629] = "Write-ahead Log with shadowing configuration not allowed"; /* wal_shadow_err */
        messages[335544630] = "there are @1 dependencies"; /* dependency */
        messages[335544631] = "too many keys defined for index @1"; /* idx_key_err */
        messages[335544632] = "Preceding file did not specify length, so @1 must include starting page number"; /* dsql_file_length_err */
        messages[335544633] = "Shadow number must be a positive integer"; /* dsql_shadow_number_err */
        messages[335544634] = "Token unknown - line @1, column @2"; /* dsql_token_unk_err */
        messages[335544635] = "there is no alias or table named @1 at this scope level"; /* dsql_no_relation_alias */
        messages[335544636] = "there is no index @1 for table @2"; /* indexname */
        messages[335544637] = "table @1 is not referenced in plan"; /* no_stream_plan */
        messages[335544638] = "table @1 is referenced more than once in plan; use aliases to distinguish"; /* stream_twice */
        messages[335544639] = "table @1 is referenced in the plan but not the from list"; /* stream_not_found */
        messages[335544640] = "Invalid use of CHARACTER SET or COLLATE"; /* collation_requires_text */
        messages[335544641] = "Specified domain or source column @1 does not exist"; /* dsql_domain_not_found */
        messages[335544642] = "index @1 cannot be used in the specified plan"; /* index_unused */
        messages[335544643] = "the table @1 is referenced twice; use aliases to differentiate"; /* dsql_self_join */
        messages[335544644] = "attempt to fetch before the first record in a record stream"; /* stream_bof */
        messages[335544645] = "the current position is on a crack"; /* stream_crack */
        messages[335544646] = "database or file exists"; /* db_or_file_exists */
        messages[335544647] = "invalid comparison operator for find operation"; /* invalid_operator */
        messages[335544648] = "Connection lost to pipe server"; /* conn_lost */
        messages[335544649] = "bad checksum"; /* bad_checksum */
        messages[335544650] = "wrong page type"; /* page_type_err */
        messages[335544651] = "Cannot insert because the file is readonly or is on a read only medium."; /* ext_readonly_err */
        messages[335544652] = "multiple rows in singleton select"; /* sing_select_err */
        messages[335544653] = "cannot attach to password database"; /* psw_attach */
        messages[335544654] = "cannot start transaction for password database"; /* psw_start_trans */
        messages[335544655] = "invalid direction for find operation"; /* invalid_direction */
        messages[335544656] = "variable @1 conflicts with parameter in same procedure"; /* dsql_var_conflict */
        messages[335544657] = "Array/BLOB/DATE data types not allowed in arithmetic"; /* dsql_no_blob_array */
        messages[335544658] = "@1 is not a valid base table of the specified view"; /* dsql_base_table */
        messages[335544659] = "table @1 is referenced twice in view; use an alias to distinguish"; /* duplicate_base_table */
        messages[335544660] = "view @1 has more than one base table; use aliases to distinguish"; /* view_alias */
        messages[335544661] = "cannot add index, index root page is full."; /* index_root_page_full */
        messages[335544662] = "BLOB SUB_TYPE @1 is not defined"; /* dsql_blob_type_unknown */
        messages[335544663] = "Too many concurrent executions of the same request"; /* req_max_clones_exceeded */
        messages[335544664] = "duplicate specification of @1 - not supported"; /* dsql_duplicate_spec */
        messages[335544665] = "violation of PRIMARY or UNIQUE KEY constraint \"@1\" on table \"@2\""; /* unique_key_violation */
        messages[335544666] = "server version too old to support all CREATE DATABASE options"; /* srvr_version_too_old */
        messages[335544667] = "drop database completed with errors"; /* drdb_completed_with_errs */
        messages[335544668] = "procedure @1 does not return any values"; /* dsql_procedure_use_err */
        messages[335544669] = "count of column list and variable list do not match"; /* dsql_count_mismatch */
        messages[335544670] = "attempt to index BLOB column in index @1"; /* blob_idx_err */
        messages[335544671] = "attempt to index array column in index @1"; /* array_idx_err */
        messages[335544672] = "too few key columns found for index @1 (incorrect column name?)"; /* key_field_err */
        messages[335544673] = "cannot delete"; /* no_delete */
        messages[335544674] = "last column in a table cannot be deleted"; /* del_last_field */
        messages[335544675] = "sort error"; /* sort_err */
        messages[335544676] = "sort error: not enough memory"; /* sort_mem_err */
        messages[335544677] = "too many versions"; /* version_err */
        messages[335544678] = "invalid key position"; /* inval_key_posn */
        messages[335544679] = "segments not allowed in expression index @1"; /* no_segments_err */
        messages[335544680] = "sort error: corruption in data structure"; /* crrp_data_err */
        messages[335544681] = "new record size of @1 bytes is too big"; /* rec_size_err */
        messages[335544682] = "Inappropriate self-reference of column"; /* dsql_field_ref */
        messages[335544683] = "request depth exceeded. (Recursive definition?)"; /* req_depth_exceeded */
        messages[335544684] = "cannot access column @1 in view @2"; /* no_field_access */
        messages[335544685] = "dbkey not available for multi-table views"; /* no_dbkey */
        messages[335544686] = "journal file wrong format"; /* jrn_format_err */
        messages[335544687] = "intermediate journal file full"; /* jrn_file_full */
        messages[335544688] = "The prepare statement identifies a prepare statement with an open cursor"; /* dsql_open_cursor_request */
        messages[335544689] = "Firebird error"; /* ib_error */
        messages[335544690] = "Cache redefined"; /* cache_redef */
        messages[335544691] = "Insufficient memory to allocate page buffer cache"; /* cache_too_small */
        messages[335544692] = "Log redefined"; /* log_redef */
        messages[335544693] = "Log size too small"; /* log_too_small */
        messages[335544694] = "Log partition size too small"; /* partition_too_small */
        messages[335544695] = "Partitions not supported in series of log file specification"; /* partition_not_supp */
        messages[335544696] = "Total length of a partitioned log must be specified"; /* log_length_spec */
        messages[335544697] = "Precision must be from 1 to 18"; /* precision_err */
        messages[335544698] = "Scale must be between zero and precision"; /* scale_nogt */
        messages[335544699] = "Short integer expected"; /* expec_short */
        messages[335544700] = "Long integer expected"; /* expec_long */
        messages[335544701] = "Unsigned short integer expected"; /* expec_ushort */
        messages[335544702] = "Invalid ESCAPE sequence"; /* escape_invalid */
        messages[335544703] = "service @1 does not have an associated executable"; /* svcnoexe */
        messages[335544704] = "Failed to locate host machine."; /* net_lookup_err */
        messages[335544705] = "Undefined service @1/@2."; /* service_unknown */
        messages[335544706] = "The specified name was not found in the hosts file or Domain Name Services."; /* host_unknown */
        messages[335544707] = "user does not have GRANT privileges on base table/view for operation"; /* grant_nopriv_on_base */
        messages[335544708] = "Ambiguous column reference."; /* dyn_fld_ambiguous */
        messages[335544709] = "Invalid aggregate reference"; /* dsql_agg_ref_err */
        messages[335544710] = "navigational stream @1 references a view with more than one base table"; /* complex_view */
        messages[335544711] = "Attempt to execute an unprepared dynamic SQL statement."; /* unprepared_stmt */
        messages[335544712] = "Positive value expected"; /* expec_positive */
        messages[335544713] = "Incorrect values within SQLDA structure"; /* dsql_sqlda_value_err */
        messages[335544714] = "invalid blob id"; /* invalid_array_id */
        messages[335544715] = "Operation not supported for EXTERNAL FILE table @1"; /* extfile_uns_op */
        messages[335544716] = "Service is currently busy: @1"; /* svc_in_use */
        messages[335544717] = "stack size insufficent to execute current request"; /* err_stack_limit */
        messages[335544718] = "Invalid key for find operation"; /* invalid_key */
        messages[335544719] = "Error initializing the network software."; /* net_init_error */
        messages[335544720] = "Unable to load required library @1."; /* loadlib_failure */
        messages[335544721] = "Unable to complete network request to host \"@1\"."; /* network_error */
        messages[335544722] = "Failed to establish a connection."; /* net_connect_err */
        messages[335544723] = "Error while listening for an incoming connection."; /* net_connect_listen_err */
        messages[335544724] = "Failed to establish a secondary connection for event processing."; /* net_event_connect_err */
        messages[335544725] = "Error while listening for an incoming event connection request."; /* net_event_listen_err */
        messages[335544726] = "Error reading data from the connection."; /* net_read_err */
        messages[335544727] = "Error writing data to the connection."; /* net_write_err */
        messages[335544728] = "Cannot deactivate index used by an integrity constraint"; /* integ_index_deactivate */
        messages[335544729] = "Cannot deactivate index used by a PRIMARY/UNIQUE constraint"; /* integ_deactivate_primary */
        messages[335544730] = "Client/Server Express not supported in this release"; /* cse_not_supported */
        messages[335544732] = "Access to databases on file servers is not supported."; /* unsupported_network_drive */
        messages[335544733] = "Error while trying to create file"; /* io_create_err */
        messages[335544734] = "Error while trying to open file"; /* io_open_err */
        messages[335544735] = "Error while trying to close file"; /* io_close_err */
        messages[335544736] = "Error while trying to read from file"; /* io_read_err */
        messages[335544737] = "Error while trying to write to file"; /* io_write_err */
        messages[335544738] = "Error while trying to delete file"; /* io_delete_err */
        messages[335544739] = "Error while trying to access file"; /* io_access_err */
        messages[335544740] = "A fatal exception occurred during the execution of a user defined function."; /* udf_exception */
        messages[335544741] = "connection lost to database"; /* lost_db_connection */
        messages[335544742] = "User cannot write to RDB$USER_PRIVILEGES"; /* no_write_user_priv */
        messages[335544743] = "token size exceeds limit"; /* token_too_long */
        messages[335544744] = "Maximum user count exceeded.  Contact your database administrator."; /* max_att_exceeded */
        messages[335544745] = "Your login @1 is same as one of the SQL role name. Ask your database administrator to set up a valid Firebird login."; /* login_same_as_role_name */
        messages[335544746] = "\"REFERENCES table\" without \"(column)\" requires PRIMARY KEY on referenced table"; /* reftable_requires_pk */
        messages[335544747] = "The username entered is too long.  Maximum length is 31 bytes."; /* usrname_too_long */
        messages[335544748] = "The password specified is too long.  Maximum length is 8 bytes."; /* password_too_long */
        messages[335544749] = "A username is required for this operation."; /* usrname_required */
        messages[335544750] = "A password is required for this operation"; /* password_required */
        messages[335544751] = "The network protocol specified is invalid"; /* bad_protocol */
        messages[335544752] = "A duplicate user name was found in the security database"; /* dup_usrname_found */
        messages[335544753] = "The user name specified was not found in the security database"; /* usrname_not_found */
        messages[335544754] = "An error occurred while attempting to add the user."; /* error_adding_sec_record */
        messages[335544755] = "An error occurred while attempting to modify the user record."; /* error_modifying_sec_record */
        messages[335544756] = "An error occurred while attempting to delete the user record."; /* error_deleting_sec_record */
        messages[335544757] = "An error occurred while updating the security database."; /* error_updating_sec_db */
        messages[335544758] = "sort record size of @1 bytes is too big"; /* sort_rec_size_err */
        messages[335544759] = "can not define a not null column with NULL as default value"; /* bad_default_value */
        messages[335544760] = "invalid clause --- '@1'"; /* invalid_clause */
        messages[335544761] = "too many open handles to database"; /* too_many_handles */
        messages[335544762] = "size of optimizer block exceeded"; /* optimizer_blk_exc */
        messages[335544763] = "a string constant is delimited by double quotes"; /* invalid_string_constant */
        messages[335544764] = "DATE must be changed to TIMESTAMP"; /* transitional_date */
        messages[335544765] = "attempted update on read-only database"; /* read_only_database */
        messages[335544766] = "SQL dialect @1 is not supported in this database"; /* must_be_dialect_2_and_up */
        messages[335544767] = "A fatal exception occurred during the execution of a blob filter."; /* blob_filter_exception */
        messages[335544768] = "Access violation.  The code attempted to access a virtual address without privilege to do so."; /* exception_access_violation */
        messages[335544769] = "Datatype misalignment.  The attempted to read or write a value that was not stored on a memory boundary."; /* exception_datatype_missalignment */
        messages[335544770] = "Array bounds exceeded.  The code attempted to access an array element that is out of bounds."; /* exception_array_bounds_exceeded */
        messages[335544771] = "Float denormal operand.  One of the floating-point operands is too small to represent a standard float value."; /* exception_float_denormal_operand */
        messages[335544772] = "Floating-point divide by zero.  The code attempted to divide a floating-point value by zero."; /* exception_float_divide_by_zero */
        messages[335544773] = "Floating-point inexact result.  The result of a floating-point operation cannot be represented as a decimal fraction."; /* exception_float_inexact_result */
        messages[335544774] = "Floating-point invalid operand.  An indeterminant error occurred during a floating-point operation."; /* exception_float_invalid_operand */
        messages[335544775] = "Floating-point overflow.  The exponent of a floating-point operation is greater than the magnitude allowed."; /* exception_float_overflow */
        messages[335544776] = "Floating-point stack check.  The stack overflowed or underflowed as the result of a floating-point operation."; /* exception_float_stack_check */
        messages[335544777] = "Floating-point underflow.  The exponent of a floating-point operation is less than the magnitude allowed."; /* exception_float_underflow */
        messages[335544778] = "Integer divide by zero.  The code attempted to divide an integer value by an integer divisor of zero."; /* exception_integer_divide_by_zero */
        messages[335544779] = "Integer overflow.  The result of an integer operation caused the most significant bit of the result to carry."; /* exception_integer_overflow */
        messages[335544780] = "An exception occurred that does not have a description.  Exception number @1."; /* exception_unknown */
        messages[335544781] = "Stack overflow.  The resource requirements of the runtime stack have exceeded the memory available to it."; /* exception_stack_overflow */
        messages[335544782] = "Segmentation Fault. The code attempted to access memory without privileges."; /* exception_sigsegv */
        messages[335544783] = "Illegal Instruction. The Code attempted to perform an illegal operation."; /* exception_sigill */
        messages[335544784] = "Bus Error. The Code caused a system bus error."; /* exception_sigbus */
        messages[335544785] = "Floating Point Error. The Code caused an Arithmetic Exception or a floating point exception."; /* exception_sigfpe */
        messages[335544786] = "Cannot delete rows from external files."; /* ext_file_delete */
        messages[335544787] = "Cannot update rows in external files."; /* ext_file_modify */
        messages[335544788] = "Unable to perform operation"; /* adm_task_denied */
        messages[335544789] = "Specified EXTRACT part does not exist in input datatype"; /* extract_input_mismatch */
        messages[335544790] = "Service @1 requires SYSDBA permissions.  Reattach to the Service Manager using the SYSDBA account."; /* insufficient_svc_privileges */
        messages[335544791] = "The file @1 is currently in use by another process.  Try again later."; /* file_in_use */
        messages[335544792] = "Cannot attach to services manager"; /* service_att_err */
        messages[335544793] = "Metadata update statement is not allowed by the current database SQL dialect @1"; /* ddl_not_allowed_by_db_sql_dial */
        messages[335544794] = "operation was cancelled"; /* cancelled */
        messages[335544795] = "unexpected item in service parameter block, expected @1"; /* unexp_spb_form */
        messages[335544796] = "Client SQL dialect @1 does not support reference to @2 datatype"; /* sql_dialect_datatype_unsupport */
        messages[335544797] = "user name and password are required while attaching to the services manager"; /* svcnouser */
        messages[335544798] = "You created an indirect dependency on uncommitted metadata. You must roll back the current transaction."; /* depend_on_uncommitted_rel */
        messages[335544799] = "The service name was not specified."; /* svc_name_missing */
        messages[335544800] = "Too many Contexts of Relation/Procedure/Views. Maximum allowed is 256"; /* too_many_contexts */
        messages[335544801] = "data type not supported for arithmetic"; /* datype_notsup */
        messages[335544802] = "Database dialect being changed from 3 to 1"; /* dialect_reset_warning */
        messages[335544803] = "Database dialect not changed."; /* dialect_not_changed */
        messages[335544804] = "Unable to create database @1"; /* database_create_failed */
        messages[335544805] = "Database dialect @1 is not a valid dialect."; /* inv_dialect_specified */
        messages[335544806] = "Valid database dialects are @1."; /* valid_db_dialects */
        messages[335544807] = "SQL warning code = @1"; /* sqlwarn */
        messages[335544808] = "DATE data type is now called TIMESTAMP"; /* dtype_renamed */
        messages[335544809] = "Function @1 is in @2, which is not in a permitted directory for external functions."; /* extern_func_dir_error */
        messages[335544810] = "value exceeds the range for valid dates"; /* date_range_exceeded */
        messages[335544811] = "passed client dialect @1 is not a valid dialect."; /* inv_client_dialect_specified */
        messages[335544812] = "Valid client dialects are @1."; /* valid_client_dialects */
        messages[335544813] = "Unsupported field type specified in BETWEEN predicate."; /* optimizer_between_err */
        messages[335544814] = "Services functionality will be supported in a later version  of the product"; /* service_not_supported */
        messages[335544815] = "GENERATOR @1"; /* generator_name */
        messages[335544816] = "Function @1"; /* udf_name */
        messages[335544817] = "Invalid parameter to FETCH or FIRST. Only integers >= 0 are allowed."; /* bad_limit_param */
        messages[335544818] = "Invalid parameter to OFFSET or SKIP. Only integers >= 0 are allowed."; /* bad_skip_param */
        messages[335544819] = "File exceeded maximum size of 2GB.  Add another database file or use a 64 bit I/O version of Firebird."; /* io_32bit_exceeded_err */
        messages[335544820] = "Unable to find savepoint with name @1 in transaction context"; /* invalid_savepoint */
        messages[335544821] = "Invalid column position used in the @1 clause"; /* dsql_column_pos_err */
        messages[335544822] = "Cannot use an aggregate or window function in a WHERE clause, use HAVING (for aggregate only) instead"; /* dsql_agg_where_err */
        messages[335544823] = "Cannot use an aggregate or window function in a GROUP BY clause"; /* dsql_agg_group_err */
        messages[335544824] = "Invalid expression in the @1 (not contained in either an aggregate function or the GROUP BY clause)"; /* dsql_agg_column_err */
        messages[335544825] = "Invalid expression in the @1 (neither an aggregate function nor a part of the GROUP BY clause)"; /* dsql_agg_having_err */
        messages[335544826] = "Nested aggregate and window functions are not allowed"; /* dsql_agg_nested_err */
        messages[335544827] = "Invalid argument in EXECUTE STATEMENT - cannot convert to string"; /* exec_sql_invalid_arg */
        messages[335544828] = "Wrong request type in EXECUTE STATEMENT '@1'"; /* exec_sql_invalid_req */
        messages[335544829] = "Variable type (position @1) in EXECUTE STATEMENT '@2' INTO does not match returned column type"; /* exec_sql_invalid_var */
        messages[335544830] = "Too many recursion levels of EXECUTE STATEMENT"; /* exec_sql_max_call_exceeded */
        messages[335544831] = "Use of @1 at location @2 is not allowed by server configuration"; /* conf_access_denied */
        messages[335544832] = "Cannot change difference file name while database is in backup mode"; /* wrong_backup_state */
        messages[335544833] = "Physical backup is not allowed while Write-Ahead Log is in use"; /* wal_backup_err */
        messages[335544834] = "Cursor is not open"; /* cursor_not_open */
        messages[335544835] = "Target shutdown mode is invalid for database \"@1\""; /* bad_shutdown_mode */
        messages[335544836] = "Concatenation overflow. Resulting string cannot exceed 32765 bytes in length."; /* concat_overflow */
        messages[335544837] = "Invalid offset parameter @1 to SUBSTRING. Only positive integers are allowed."; /* bad_substring_offset */
        messages[335544838] = "Foreign key reference target does not exist"; /* foreign_key_target_doesnt_exist */
        messages[335544839] = "Foreign key references are present for the record"; /* foreign_key_references_present */
        messages[335544840] = "cannot update"; /* no_update */
        messages[335544841] = "Cursor is already open"; /* cursor_already_open */
        messages[335544842] = "@1"; /* stack_trace */
        messages[335544843] = "Context variable @1 is not found in namespace @2"; /* ctx_var_not_found */
        messages[335544844] = "Invalid namespace name @1 passed to @2"; /* ctx_namespace_invalid */
        messages[335544845] = "Too many context variables"; /* ctx_too_big */
        messages[335544846] = "Invalid argument passed to @1"; /* ctx_bad_argument */
        messages[335544847] = "BLR syntax error. Identifier @1... is too long"; /* identifier_too_long */
        messages[335544848] = "exception @1"; /* except2 */
        messages[335544849] = "Malformed string"; /* malformed_string */
        messages[335544850] = "Output parameter mismatch for procedure @1"; /* prc_out_param_mismatch */
        messages[335544851] = "Unexpected end of command - line @1, column @2"; /* command_end_err2 */
        messages[335544852] = "partner index segment no @1 has incompatible data type"; /* partner_idx_incompat_type */
        messages[335544853] = "Invalid length parameter @1 to SUBSTRING. Negative integers are not allowed."; /* bad_substring_length */
        messages[335544854] = "CHARACTER SET @1 is not installed"; /* charset_not_installed */
        messages[335544855] = "COLLATION @1 for CHARACTER SET @2 is not installed"; /* collation_not_installed */
        messages[335544856] = "connection shutdown"; /* att_shutdown */
        messages[335544857] = "Maximum BLOB size exceeded"; /* blobtoobig */
        messages[335544859] = "Time precision exceeds allowed range (0-@1)"; /* invalid_time_precision */
        messages[335544860] = "Unsupported conversion to target type BLOB (subtype @1)"; /* blob_convert_error */
        messages[335544861] = "Unsupported conversion to target type ARRAY"; /* array_convert_error */
        messages[335544862] = "Stream does not support record locking"; /* record_lock_not_supp */
        messages[335544863] = "Cannot create foreign key constraint @1. Partner index does not exist or is inactive."; /* partner_idx_not_found */
        messages[335544864] = "Transactions count exceeded. Perform backup and restore to make database operable again"; /* tra_num_exc */
        messages[335544865] = "Column has been unexpectedly deleted"; /* field_disappeared */
        messages[335544866] = "@1 cannot depend on @2"; /* met_wrong_gtt_scope */
        messages[335544867] = "Blob sub_types bigger than 1 (text) are for internal use only"; /* subtype_for_internal_use */
        messages[335544868] = "Procedure @1 is not selectable (it does not contain a SUSPEND statement)"; /* illegal_prc_type */
        messages[335544869] = "Datatype @1 is not supported for sorting operation"; /* invalid_sort_datatype */
        messages[335544870] = "COLLATION @1"; /* collation_name */
        messages[335544871] = "DOMAIN @1"; /* domain_name */
        messages[335544872] = "domain @1 is not defined"; /* domnotdef */
        messages[335544873] = "Array data type can use up to @1 dimensions"; /* array_max_dimensions */
        messages[335544874] = "A multi database transaction cannot span more than @1 databases"; /* max_db_per_trans_allowed */
        messages[335544875] = "Bad debug info format"; /* bad_debug_format */
        messages[335544877] = "index key too big"; /* key_too_big */
        messages[335544878] = "concurrent transaction number is @1"; /* concurrent_transaction */
        messages[335544879] = "validation error for variable @1, value \"@2\""; /* not_valid_for_var */
        messages[335544880] = "validation error for @1, value \"@2\""; /* not_valid_for */
        messages[335544881] = "Difference file name should be set explicitly for database on raw device"; /* need_difference */
        messages[335544882] = "Login name too long (@1 characters, maximum allowed @2)"; /* long_login */
        messages[335544883] = "column @1 is not defined in procedure @2"; /* fldnotdef2 */
        messages[335544884] = "Invalid SIMILAR TO pattern"; /* invalid_similar_pattern */
        messages[335544885] = "Invalid TEB format"; /* bad_teb_form */
        messages[335544886] = "Found more than one transaction isolation in TPB"; /* tpb_multiple_txn_isolation */
        messages[335544887] = "Table reservation lock type @1 requires table name before in TPB"; /* tpb_reserv_before_table */
        messages[335544888] = "Found more than one @1 specification in TPB"; /* tpb_multiple_spec */
        messages[335544889] = "Option @1 requires READ COMMITTED isolation in TPB"; /* tpb_option_without_rc */
        messages[335544890] = "Option @1 is not valid if @2 was used previously in TPB"; /* tpb_conflicting_options */
        messages[335544891] = "Table name length missing after table reservation @1 in TPB"; /* tpb_reserv_missing_tlen */
        messages[335544892] = "Table name length @1 is too long after table reservation @2 in TPB"; /* tpb_reserv_long_tlen */
        messages[335544893] = "Table name length @1 without table name after table reservation @2 in TPB"; /* tpb_reserv_missing_tname */
        messages[335544894] = "Table name length @1 goes beyond the remaining TPB size after table reservation @2"; /* tpb_reserv_corrup_tlen */
        messages[335544895] = "Table name length is zero after table reservation @1 in TPB"; /* tpb_reserv_null_tlen */
        messages[335544896] = "Table or view @1 not defined in system tables after table reservation @2 in TPB"; /* tpb_reserv_relnotfound */
        messages[335544897] = "Base table or view @1 for view @2 not defined in system tables after table reservation @3 in TPB"; /* tpb_reserv_baserelnotfound */
        messages[335544898] = "Option length missing after option @1 in TPB"; /* tpb_missing_len */
        messages[335544899] = "Option length @1 without value after option @2 in TPB"; /* tpb_missing_value */
        messages[335544900] = "Option length @1 goes beyond the remaining TPB size after option @2"; /* tpb_corrupt_len */
        messages[335544901] = "Option length is zero after table reservation @1 in TPB"; /* tpb_null_len */
        messages[335544902] = "Option length @1 exceeds the range for option @2 in TPB"; /* tpb_overflow_len */
        messages[335544903] = "Option value @1 is invalid for the option @2 in TPB"; /* tpb_invalid_value */
        messages[335544904] = "Preserving previous table reservation @1 for table @2, stronger than new @3 in TPB"; /* tpb_reserv_stronger_wng */
        messages[335544905] = "Table reservation @1 for table @2 already specified and is stronger than new @3 in TPB"; /* tpb_reserv_stronger */
        messages[335544906] = "Table reservation reached maximum recursion of @1 when expanding views in TPB"; /* tpb_reserv_max_recursion */
        messages[335544910] = "Cannot set the transaction in read only mode after a table reservation isc_tpb_lock_write in TPB"; /* tpb_readtxn_after_writelock */
        messages[335544911] = "Cannot take a table reservation isc_tpb_lock_write in TPB because the transaction is in read only mode"; /* tpb_writelock_after_readtxn */
        messages[335544912] = "value exceeds the range for a valid time"; /* time_range_exceeded */
        messages[335544913] = "value exceeds the range for valid timestamps"; /* datetime_range_exceeded */
        messages[335544914] = "string right truncation"; /* string_truncation */
        messages[335544915] = "blob truncation when converting to a string: length limit exceeded"; /* blob_truncation */
        messages[335544916] = "numeric value is out of range"; /* numeric_out_of_range */
        messages[335544917] = "Firebird shutdown is still in progress after the specified timeout"; /* shutdown_timeout */
        messages[335544918] = "Attachment handle is busy"; /* att_handle_busy */
        messages[335544919] = "Bad written UDF detected: pointer returned in FREE_IT function was not allocated by ib_util_malloc"; /* bad_udf_freeit */
        messages[335544920] = "External Data Source provider '@1' not found"; /* eds_provider_not_found */
        messages[335544922] = "Execute statement preprocess SQL error"; /* eds_preprocess */
        messages[335544923] = "Statement expected"; /* eds_stmt_expected */
        messages[335544924] = "Parameter name expected"; /* eds_prm_name_expected */
        messages[335544925] = "Unclosed comment found near '@1'"; /* eds_unclosed_comment */
        messages[335544927] = "Input parameters mismatch"; /* eds_input_prm_mismatch */
        messages[335544928] = "Output parameters mismatch"; /* eds_output_prm_mismatch */
        messages[335544929] = "Input parameter '@1' have no value set"; /* eds_input_prm_not_set */
        messages[335544930] = "BLR stream length @1 exceeds implementation limit @2"; /* too_big_blr */
        messages[335544931] = "Monitoring table space exhausted"; /* montabexh */
        messages[335544932] = "module name or entrypoint could not be found"; /* modnotfound */
        messages[335544933] = "nothing to cancel"; /* nothing_to_cancel */
        messages[335544934] = "ib_util library has not been loaded to deallocate memory returned by FREE_IT function"; /* ibutil_not_loaded */
        messages[335544935] = "Cannot have circular dependencies with computed fields"; /* circular_computed */
        messages[335544936] = "Security database error"; /* psw_db_error */
        messages[335544937] = "Invalid data type in DATE/TIME/TIMESTAMP addition or subtraction in add_datettime()"; /* invalid_type_datetime_op */
        messages[335544938] = "Only a TIME value can be added to a DATE value"; /* onlycan_add_timetodate */
        messages[335544939] = "Only a DATE value can be added to a TIME value"; /* onlycan_add_datetotime */
        messages[335544940] = "TIMESTAMP values can be subtracted only from another TIMESTAMP value"; /* onlycansub_tstampfromtstamp */
        messages[335544941] = "Only one operand can be of type TIMESTAMP"; /* onlyoneop_mustbe_tstamp */
        messages[335544942] = "Only HOUR, MINUTE, SECOND and MILLISECOND can be extracted from TIME values"; /* invalid_extractpart_time */
        messages[335544943] = "HOUR, MINUTE, SECOND and MILLISECOND cannot be extracted from DATE values"; /* invalid_extractpart_date */
        messages[335544944] = "Invalid argument for EXTRACT() not being of DATE/TIME/TIMESTAMP type"; /* invalidarg_extract */
        messages[335544945] = "Arguments for @1 must be integral types or NUMERIC/DECIMAL without scale"; /* sysf_argmustbe_exact */
        messages[335544946] = "First argument for @1 must be integral type or floating point type"; /* sysf_argmustbe_exact_or_fp */
        messages[335544947] = "Human readable UUID argument for @1 must be of string type"; /* sysf_argviolates_uuidtype */
        messages[335544948] = "Human readable UUID argument for @2 must be of exact length @1"; /* sysf_argviolates_uuidlen */
        messages[335544949] = "Human readable UUID argument for @3 must have \"-\" at position @2 instead of \"@1\""; /* sysf_argviolates_uuidfmt */
        messages[335544950] = "Human readable UUID argument for @3 must have hex digit at position @2 instead of \"@1\""; /* sysf_argviolates_guidigits */
        messages[335544951] = "Only HOUR, MINUTE, SECOND and MILLISECOND can be added to TIME values in @1"; /* sysf_invalid_addpart_time */
        messages[335544952] = "Invalid data type in addition of part to DATE/TIME/TIMESTAMP in @1"; /* sysf_invalid_add_datetime */
        messages[335544953] = "Invalid part @1 to be added to a DATE/TIME/TIMESTAMP value in @2"; /* sysf_invalid_addpart_dtime */
        messages[335544954] = "Expected DATE/TIME/TIMESTAMP type in evlDateAdd() result"; /* sysf_invalid_add_dtime_rc */
        messages[335544955] = "Expected DATE/TIME/TIMESTAMP type as first and second argument to @1"; /* sysf_invalid_diff_dtime */
        messages[335544956] = "The result of TIME-<value> in @1 cannot be expressed in YEAR, MONTH, DAY or WEEK"; /* sysf_invalid_timediff */
        messages[335544957] = "The result of TIME-TIMESTAMP or TIMESTAMP-TIME in @1 cannot be expressed in HOUR, MINUTE, SECOND or MILLISECOND"; /* sysf_invalid_tstamptimediff */
        messages[335544958] = "The result of DATE-TIME or TIME-DATE in @1 cannot be expressed in HOUR, MINUTE, SECOND and MILLISECOND"; /* sysf_invalid_datetimediff */
        messages[335544959] = "Invalid part @1 to express the difference between two DATE/TIME/TIMESTAMP values in @2"; /* sysf_invalid_diffpart */
        messages[335544960] = "Argument for @1 must be positive"; /* sysf_argmustbe_positive */
        messages[335544961] = "Base for @1 must be positive"; /* sysf_basemustbe_positive */
        messages[335544962] = "Argument #@1 for @2 must be zero or positive"; /* sysf_argnmustbe_nonneg */
        messages[335544963] = "Argument #@1 for @2 must be positive"; /* sysf_argnmustbe_positive */
        messages[335544964] = "Base for @1 cannot be zero if exponent is negative"; /* sysf_invalid_zeropowneg */
        messages[335544965] = "Base for @1 cannot be negative if exponent is not an integral value"; /* sysf_invalid_negpowfp */
        messages[335544966] = "The numeric scale must be between -128 and 127 in @1"; /* sysf_invalid_scale */
        messages[335544967] = "Argument for @1 must be zero or positive"; /* sysf_argmustbe_nonneg */
        messages[335544968] = "Binary UUID argument for @1 must be of string type"; /* sysf_binuuid_mustbe_str */
        messages[335544969] = "Binary UUID argument for @2 must use @1 bytes"; /* sysf_binuuid_wrongsize */
        messages[335544970] = "Missing required item @1 in service parameter block"; /* missing_required_spb */
        messages[335544971] = "@1 server is shutdown"; /* net_server_shutdown */
        messages[335544972] = "Invalid connection string"; /* bad_conn_str */
        messages[335544973] = "Unrecognized events block"; /* bad_epb_form */
        messages[335544974] = "Could not start first worker thread - shutdown server"; /* no_threads */
        messages[335544975] = "Timeout occurred while waiting for a secondary connection for event processing"; /* net_event_connect_timeout */
        messages[335544976] = "Argument for @1 must be different than zero"; /* sysf_argmustbe_nonzero */
        messages[335544977] = "Argument for @1 must be in the range [-1, 1]"; /* sysf_argmustbe_range_inc1_1 */
        messages[335544978] = "Argument for @1 must be greater or equal than one"; /* sysf_argmustbe_gteq_one */
        messages[335544979] = "Argument for @1 must be in the range ]-1, 1["; /* sysf_argmustbe_range_exc1_1 */
        messages[335544980] = "Incorrect parameters provided to internal function @1"; /* internal_rejected_params */
        messages[335544981] = "Floating point overflow in built-in function @1"; /* sysf_fp_overflow */
        messages[335544982] = "Floating point overflow in result from UDF @1"; /* udf_fp_overflow */
        messages[335544983] = "Invalid floating point value returned by UDF @1"; /* udf_fp_nan */
        messages[335544984] = "Database is probably already opened by another engine instance in another Windows session"; /* instance_conflict */
        messages[335544985] = "No free space found in temporary directories"; /* out_of_temp_space */
        messages[335544986] = "Explicit transaction control is not allowed"; /* eds_expl_tran_ctrl */
        messages[335544987] = "Use of TRUSTED switches in spb_command_line is prohibited"; /* no_trusted_spb */
        messages[335544988] = "PACKAGE @1"; /* package_name */
        messages[335544989] = "Cannot make field @1 of table @2 NOT NULL because there are NULLs present"; /* cannot_make_not_null */
        messages[335544990] = "Feature @1 is not supported anymore"; /* feature_removed */
        messages[335544991] = "VIEW @1"; /* view_name */
        messages[335544992] = "Can not access lock files directory @1"; /* lock_dir_access */
        messages[335544993] = "Fetch option @1 is invalid for a non-scrollable cursor"; /* invalid_fetch_option */
        messages[335544995] = "Cannot execute function @1 of the unimplemented package @2"; /* func_pack_not_implemented */
        messages[335544996] = "Cannot execute procedure @1 of the unimplemented package @2"; /* proc_pack_not_implemented */
        messages[335544997] = "External function @1 not returned by the external engine plugin @2"; /* eem_func_not_returned */
        messages[335544998] = "External procedure @1 not returned by the external engine plugin @2"; /* eem_proc_not_returned */
        messages[335544999] = "External trigger @1 not returned by the external engine plugin @2"; /* eem_trig_not_returned */
        messages[335545000] = "Incompatible plugin version @1 for external engine @2"; /* eem_bad_plugin_ver */
        messages[335545001] = "External engine @1 not found"; /* eem_engine_notfound */
        messages[335545002] = "Attachment is in use"; /* attachment_in_use */
        messages[335545003] = "Transaction is in use"; /* transaction_in_use */
        messages[335545004] = "Error loading plugin @1"; /* pman_cannot_load_plugin */
        messages[335545005] = "Loadable module @1 not found"; /* pman_module_notfound */
        messages[335545006] = "Standard plugin entrypoint does not exist in module @1"; /* pman_entrypoint_notfound */
        messages[335545007] = "Module @1 exists but can not be loaded"; /* pman_module_bad */
        messages[335545008] = "Module @1 does not contain plugin @2 type @3"; /* pman_plugin_notfound */
        messages[335545009] = "Invalid usage of context namespace DDL_TRIGGER"; /* sysf_invalid_trig_namespace */
        messages[335545010] = "Value is NULL but isNull parameter was not informed"; /* unexpected_null */
        messages[335545011] = "Type @1 is incompatible with BLOB"; /* type_notcompat_blob */
        messages[335545012] = "Invalid date"; /* invalid_date_val */
        messages[335545013] = "Invalid time"; /* invalid_time_val */
        messages[335545014] = "Invalid timestamp"; /* invalid_timestamp_val */
        messages[335545015] = "Invalid index @1 in function @2"; /* invalid_index_val */
        messages[335545016] = "@1"; /* formatted_exception */
        messages[335545017] = "Asynchronous call is already running for this attachment"; /* async_active */
        messages[335545018] = "Function @1 is private to package @2"; /* private_function */
        messages[335545019] = "Procedure @1 is private to package @2"; /* private_procedure */
        messages[335545021] = "invalid events id (handle)"; /* bad_events_handle */
        messages[335545022] = "Cannot copy statement @1"; /* cannot_copy_stmt */
        messages[335545023] = "Invalid usage of boolean expression"; /* invalid_boolean_usage */
        messages[335545024] = "Arguments for @1 cannot both be zero"; /* sysf_argscant_both_be_zero */
        messages[335545025] = "missing service ID in spb"; /* spb_no_id */
        messages[335545026] = "External BLR message mismatch: invalid null descriptor at field @1"; /* ee_blr_mismatch_null */
        messages[335545027] = "External BLR message mismatch: length = @1, expected @2"; /* ee_blr_mismatch_length */
        messages[335545028] = "Subscript @1 out of bounds [@2, @3]"; /* ss_out_of_bounds */
        messages[335545029] = "Install incomplete. To complete security database initialization please CREATE USER. For details read doc/README.security_database.txt."; /* missing_data_structures */
        messages[335545030] = "@1 operation is not allowed for system table @2"; /* protect_sys_tab */
        messages[335545031] = "Libtommath error code @1 in function @2"; /* libtommath_generic */
        messages[335545032] = "unsupported BLR version (expected between @1 and @2, encountered @3)"; /* wroblrver2 */
        messages[335545033] = "expected length @1, actual @2"; /* trunc_limits */
        messages[335545034] = "Wrong info requested in isc_svc_query() for anonymous service"; /* info_access */
        messages[335545035] = "No isc_info_svc_stdin in user request, but service thread requested stdin data"; /* svc_no_stdin */
        messages[335545036] = "Start request for anonymous service is impossible"; /* svc_start_failed */
        messages[335545037] = "All services except for getting server log require switches"; /* svc_no_switches */
        messages[335545038] = "Size of stdin data is more than was requested from client"; /* svc_bad_size */
        messages[335545039] = "Crypt plugin @1 failed to load"; /* no_crypt_plugin */
        messages[335545040] = "Length of crypt plugin name should not exceed @1 bytes"; /* cp_name_too_long */
        messages[335545041] = "Crypt failed - already crypting database"; /* cp_process_active */
        messages[335545042] = "Crypt failed - database is already in requested state"; /* cp_already_crypted */
        messages[335545043] = "Missing crypt plugin, but page appears encrypted"; /* decrypt_error */
        messages[335545044] = "No providers loaded"; /* no_providers */
        messages[335545045] = "NULL data with non-zero SPB length"; /* null_spb */
        messages[335545046] = "Maximum (@1) number of arguments exceeded for function @2"; /* max_args_exceeded */
        messages[335545047] = "External BLR message mismatch: names count = @1, blr count = @2"; /* ee_blr_mismatch_names_count */
        messages[335545048] = "External BLR message mismatch: name @1 not found"; /* ee_blr_mismatch_name_not_found */
        messages[335545049] = "Invalid resultset interface"; /* bad_result_set */
        messages[335545050] = "Message length passed from user application does not match set of columns"; /* wrong_message_length */
        messages[335545051] = "Resultset is missing output format information"; /* no_output_format */
        messages[335545052] = "Message metadata not ready - item @1 is not finished"; /* item_finish */
        messages[335545053] = "Missing configuration file: @1"; /* miss_config */
        messages[335545054] = "@1: illegal line <@2>"; /* conf_line */
        messages[335545055] = "Invalid include operator in @1 for <@2>"; /* conf_include */
        messages[335545056] = "Include depth too big"; /* include_depth */
        messages[335545057] = "File to include not found"; /* include_miss */
        messages[335545058] = "Only the owner can change the ownership"; /* protect_ownership */
        messages[335545059] = "undefined variable number"; /* badvarnum */
        messages[335545060] = "Missing security context for @1"; /* sec_context */
        messages[335545061] = "Missing segment @1 in multisegment connect block parameter"; /* multi_segment */
        messages[335545062] = "Different logins in connect and attach packets - client library error"; /* login_changed */
        messages[335545063] = "Exceeded exchange limit during authentication handshake"; /* auth_handshake_limit */
        messages[335545064] = "Incompatible wire encryption levels requested on client and server"; /* wirecrypt_incompatible */
        messages[335545065] = "Client attempted to attach unencrypted but wire encryption is required"; /* miss_wirecrypt */
        messages[335545066] = "Client attempted to start wire encryption using unknown key @1"; /* wirecrypt_key */
        messages[335545067] = "Client attempted to start wire encryption using unsupported plugin @1"; /* wirecrypt_plugin */
        messages[335545068] = "Error getting security database name from configuration file"; /* secdb_name */
        messages[335545069] = "Client authentication plugin is missing required data from server"; /* auth_data */
        messages[335545070] = "Client authentication plugin expected @2 bytes of @3 from server, got @1"; /* auth_datalength */
        messages[335545071] = "Attempt to get information about an unprepared dynamic SQL statement."; /* info_unprepared_stmt */
        messages[335545072] = "Problematic key value is @1"; /* idx_key_value */
        messages[335545073] = "Cannot select virtual table @1 for update WITH LOCK"; /* forupdate_virtualtbl */
        messages[335545074] = "Cannot select system table @1 for update WITH LOCK"; /* forupdate_systbl */
        messages[335545075] = "Cannot select temporary table @1 for update WITH LOCK"; /* forupdate_temptbl */
        messages[335545076] = "System @1 @2 cannot be modified"; /* cant_modify_sysobj */
        messages[335545077] = "Server misconfigured - contact administrator please"; /* server_misconfigured */
        messages[335545078] = "Deprecated backward compatibility ALTER ROLE ... SET/DROP AUTO ADMIN mapping may be used only for RDB$ADMIN role"; /* alter_role */
        messages[335545079] = "Mapping @1 already exists"; /* map_already_exists */
        messages[335545080] = "Mapping @1 does not exist"; /* map_not_exists */
        messages[335545081] = "@1 failed when loading mapping cache"; /* map_load */
        messages[335545082] = "Invalid name <*> in authentication block"; /* map_aster */
        messages[335545083] = "Multiple maps found for @1"; /* map_multi */
        messages[335545084] = "Undefined mapping result - more than one different results found"; /* map_undefined */
        messages[335545085] = "Incompatible mode of attachment to damaged database"; /* baddpb_damaged_mode */
        messages[335545086] = "Attempt to set in database number of buffers which is out of acceptable range [@1:@2]"; /* baddpb_buffers_range */
        messages[335545087] = "Attempt to temporarily set number of buffers less than @1"; /* baddpb_temp_buffers */
        messages[335545088] = "Global mapping is not available when database @1 is not present"; /* map_nodb */
        messages[335545089] = "Global mapping is not available when table RDB$MAP is not present in database @1"; /* map_notable */
        messages[335545090] = "Your attachment has no trusted role"; /* miss_trusted_role */
        messages[335545091] = "Role @1 is invalid or unavailable"; /* set_invalid_role */
        messages[335545092] = "Cursor @1 is not positioned in a valid record"; /* cursor_not_positioned */
        messages[335545093] = "Duplicated user attribute @1"; /* dup_attribute */
        messages[335545094] = "There is no privilege for this operation"; /* dyn_no_priv */
        messages[335545095] = "Using GRANT OPTION on @1 not allowed"; /* dsql_cant_grant_option */
        messages[335545096] = "read conflicts with concurrent update"; /* read_conflict */
        messages[335545097] = "@1 failed when working with CREATE DATABASE grants"; /* crdb_load */
        messages[335545098] = "CREATE DATABASE grants check is not possible when database @1 is not present"; /* crdb_nodb */
        messages[335545099] = "CREATE DATABASE grants check is not possible when table RDB$DB_CREATORS is not present in database @1"; /* crdb_notable */
        messages[335545100] = "Interface @3 version too old: expected @1, found @2"; /* interface_version_too_old */
        messages[335545101] = "Input parameter mismatch for function @1"; /* fun_param_mismatch */
        messages[335545102] = "Error during savepoint backout - transaction invalidated"; /* savepoint_backout_err */
        messages[335545103] = "Domain used in the PRIMARY KEY constraint of table @1 must be NOT NULL"; /* domain_primary_key_notnull */
        messages[335545104] = "CHARACTER SET @1 cannot be used as a attachment character set"; /* invalid_attachment_charset */
        messages[335545105] = "Some database(s) were shutdown when trying to read mapping data"; /* map_down */
        messages[335545106] = "Error occurred during login, please check server firebird.log for details"; /* login_error */
        messages[335545107] = "Database already opened with engine instance, incompatible with current"; /* already_opened */
        messages[335545108] = "Invalid crypt key @1"; /* bad_crypt_key */
        messages[335545109] = "Page requires encryption but crypt plugin is missing"; /* encrypt_error */
        messages[335545110] = "Maximum index depth (@1 levels) is reached"; /* max_idx_depth */
        messages[335545111] = "System privilege @1 does not exist"; /* wrong_prvlg */
        messages[335545112] = "System privilege @1 is missing"; /* miss_prvlg */
        messages[335545113] = "Invalid or missing checksum of encrypted database"; /* crypt_checksum */
        messages[335545114] = "You must have SYSDBA rights at this server"; /* not_dba */
        messages[335545115] = "Cannot open cursor for non-SELECT statement"; /* no_cursor */
        messages[335545116] = "If <window frame bound 1> specifies @1, then <window frame bound 2> shall not specify @2"; /* dsql_window_incompat_frames */
        messages[335545117] = "RANGE based window with <expr> {PRECEDING | FOLLOWING} cannot have ORDER BY with more than one value"; /* dsql_window_range_multi_key */
        messages[335545118] = "RANGE based window must have an ORDER BY key of numerical, date, time or timestamp types"; /* dsql_window_range_inv_key_type */
        messages[335545119] = "Window RANGE/ROWS PRECEDING/FOLLOWING value must be of a numerical type"; /* dsql_window_frame_value_inv_type */
        messages[335545120] = "Invalid PRECEDING or FOLLOWING offset in window function: cannot be negative"; /* window_frame_value_invalid */
        messages[335545121] = "Window @1 not found"; /* dsql_window_not_found */
        messages[335545122] = "Cannot use PARTITION BY clause while overriding the window @1"; /* dsql_window_cant_overr_part */
        messages[335545123] = "Cannot use ORDER BY clause while overriding the window @1 which already has an ORDER BY clause"; /* dsql_window_cant_overr_order */
        messages[335545124] = "Cannot override the window @1 because it has a frame clause. Tip: it can be used without parenthesis in OVER"; /* dsql_window_cant_overr_frame */
        messages[335545125] = "Duplicate window definition for @1"; /* dsql_window_duplicate */
        messages[335545126] = "SQL statement is too long. Maximum size is @1 bytes."; /* sql_too_long */
        messages[335545127] = "Config level timeout expired."; /* cfg_stmt_timeout */
        messages[335545128] = "Attachment level timeout expired."; /* att_stmt_timeout */
        messages[335545129] = "Statement level timeout expired."; /* req_stmt_timeout */
        messages[335545130] = "Killed by database administrator."; /* att_shut_killed */
        messages[335545131] = "Idle timeout expired."; /* att_shut_idle */
        messages[335545132] = "Database is shutdown."; /* att_shut_db_down */
        messages[335545133] = "Engine is shutdown."; /* att_shut_engine */
        messages[335545135] = "OVERRIDING SYSTEM VALUE can be used only for identity column defined as 'GENERATED ALWAYS' in INSERT for table/view @1"; /* overriding_system_invalid */
        messages[335545136] = "OVERRIDING USER VALUE can be used only for identity column defined as 'GENERATED BY DEFAULT' in INSERT for table/view @1"; /* overriding_user_invalid */
        messages[335545137] = "OVERRIDING SYSTEM VALUE should be used to override the value of an identity column defined as 'GENERATED ALWAYS' in table/view @1"; /* overriding_system_missing */
        messages[335545138] = "DecFloat precision must be 16 or 34"; /* decprecision_err */
        messages[335545139] = "Decimal float divide by zero.  The code attempted to divide a DECFLOAT value by zero."; /* decfloat_divide_by_zero */
        messages[335545140] = "Decimal float inexact result.  The result of an operation cannot be represented as a decimal fraction."; /* decfloat_inexact_result */
        messages[335545141] = "Decimal float invalid operation.  An indeterminant error occurred during an operation."; /* decfloat_invalid_operation */
        messages[335545142] = "Decimal float overflow.  The exponent of a result is greater than the magnitude allowed."; /* decfloat_overflow */
        messages[335545143] = "Decimal float underflow.  The exponent of a result is less than the magnitude allowed."; /* decfloat_underflow */
        messages[335545144] = "Sub-function @1 has not been defined"; /* subfunc_notdef */
        messages[335545145] = "Sub-procedure @1 has not been defined"; /* subproc_notdef */
        messages[335545146] = "Sub-function @1 has a signature mismatch with its forward declaration"; /* subfunc_signat */
        messages[335545147] = "Sub-procedure @1 has a signature mismatch with its forward declaration"; /* subproc_signat */
        messages[335545148] = "Default values for parameters are not allowed in definition of the previously declared sub-function @1"; /* subfunc_defvaldecl */
        messages[335545149] = "Default values for parameters are not allowed in definition of the previously declared sub-procedure @1"; /* subproc_defvaldecl */
        messages[335545150] = "Sub-function @1 was declared but not implemented"; /* subfunc_not_impl */
        messages[335545151] = "Sub-procedure @1 was declared but not implemented"; /* subproc_not_impl */
        messages[335545152] = "Invalid HASH algorithm @1"; /* sysf_invalid_hash_algorithm */
        messages[335545153] = "Expression evaluation error for index \"@1\" on table \"@2\""; /* expression_eval_index */
        messages[335545154] = "Invalid decfloat trap state @1"; /* invalid_decfloat_trap */
        messages[335545155] = "Invalid decfloat rounding mode @1"; /* invalid_decfloat_round */
        messages[335545156] = "Invalid part @1 to calculate the @1 of a DATE/TIMESTAMP"; /* sysf_invalid_first_last_part */
        messages[335545157] = "Expected DATE/TIMESTAMP value in @1"; /* sysf_invalid_date_timestamp */
        messages[335545158] = "Precision must be from @1 to @2"; /* precision_err2 */
        messages[335545159] = "invalid batch handle"; /* bad_batch_handle */
        messages[335545160] = "Bad international character in tag @1"; /* intl_char */
        messages[335545161] = "Null data in parameters block with non-zero length"; /* null_block */
        messages[335545162] = "Items working with running service and getting generic server information should not be mixed in single info block"; /* mixed_info */
        messages[335545163] = "Unknown information item, code @1"; /* unknown_info */
        messages[335545164] = "Wrong version of blob parameters block @1, should be @2"; /* bpb_version */
        messages[335545165] = "User management plugin is missing or failed to load"; /* user_manager */
        messages[335545166] = "Missing entrypoint @1 in ICU library"; /* icu_entrypoint */
        messages[335545167] = "Could not find acceptable ICU library"; /* icu_library */
        messages[335545168] = "Name @1 not found in system MetadataBuilder"; /* metadata_name */
        messages[335545169] = "Parse to tokens error"; /* tokens_parse */
        messages[335545170] = "Error opening international conversion descriptor from @1 to @2"; /* iconv_open */
        messages[335545171] = "Message @1 is out of range, only @2 messages in batch"; /* batch_compl_range */
        messages[335545172] = "Detailed error info for message @1 is missing in batch"; /* batch_compl_detail */
        messages[335545173] = "Compression stream init error @1"; /* deflate_init */
        messages[335545174] = "Decompression stream init error @1"; /* inflate_init */
        messages[335545175] = "Segment size (@1) should not exceed 65535 (64K - 1) when using segmented blob"; /* big_segment */
        messages[335545176] = "Invalid blob policy in the batch for @1() call"; /* batch_policy */
        messages[335545178] = "Unexpected info buffer structure querying for default blob alignment"; /* batch_align */
        messages[335545179] = "Duplicated segment @1 in multisegment connect block parameter"; /* multi_segment_dup */
        messages[335545180] = "Plugin not supported by network protocol"; /* non_plugin_protocol */
        messages[335545181] = "Error parsing message format"; /* message_format */
        messages[335545182] = "Wrong version of batch parameters block @1, should be @2"; /* batch_param_version */
        messages[335545183] = "Message size (@1) in batch exceeds internal buffer size (@2)"; /* batch_msg_long */
        messages[335545184] = "Batch already opened for this statement"; /* batch_open */
        messages[335545185] = "Invalid type of statement used in batch"; /* batch_type */
        messages[335545186] = "Statement used in batch must have parameters"; /* batch_param */
        messages[335545187] = "There are no blobs in associated with batch statement"; /* batch_blobs */
        messages[335545188] = "appendBlobData() is used to append data to last blob but no such blob was added to the batch"; /* batch_blob_append */
        messages[335545189] = "Portions of data, passed as blob stream, should have size multiple to the alignment required for blobs"; /* batch_stream_align */
        messages[335545190] = "Repeated blob id @1 in registerBlob()"; /* batch_rpt_blob */
        messages[335545191] = "Blob buffer format error"; /* batch_blob_buf */
        messages[335545192] = "Unusable (too small) data remained in @1 buffer"; /* batch_small_data */
        messages[335545193] = "Blob continuation should not contain BPB"; /* batch_cont_bpb */
        messages[335545194] = "Size of BPB (@1) greater than remaining data (@2)"; /* batch_big_bpb */
        messages[335545195] = "Size of segment (@1) greater than current BLOB data (@2)"; /* batch_big_segment */
        messages[335545196] = "Size of segment (@1) greater than available data (@2)"; /* batch_big_seg2 */
        messages[335545197] = "Unknown blob ID @1 in the batch message"; /* batch_blob_id */
        messages[335545198] = "Internal buffer overflow - batch too big"; /* batch_too_big */
        messages[335545199] = "Numeric literal too long"; /* num_literal */
        messages[335545200] = "Error using events in mapping shared memory: @1"; /* map_event */
        messages[335545201] = "Global mapping memory overflow"; /* map_overflow */
        messages[335545202] = "Header page overflow - too many clumplets on it"; /* hdr_overflow */
        messages[335545203] = "No matching client/server authentication plugins configured for execute statement in embedded datasource"; /* vld_plugins */
        messages[335545204] = "Missing database encryption key for your attachment"; /* db_crypt_key */
        messages[335545205] = "Key holder plugin @1 failed to load"; /* no_keyholder_plugin */
        messages[335545206] = "Cannot reset user session"; /* ses_reset_err */
        messages[335545207] = "There are open transactions (@1 active)"; /* ses_reset_open_trans */
        messages[335545208] = "Session was reset with warning(s)"; /* ses_reset_warn */
        messages[335545209] = "Transaction is rolled back due to session reset, all changes are lost"; /* ses_reset_tran_rollback */
        messages[335545210] = "Plugin @1:"; /* plugin_name */
        messages[335545211] = "PARAMETER @1"; /* parameter_name */
        messages[335545212] = "Starting page number for file @1 must be @2 or greater"; /* file_starting_page_err */
        messages[335545213] = "Invalid time zone offset: @1 - must use format +/-hours:minutes and be between -14:00 and +14:00"; /* invalid_timezone_offset */
        messages[335545214] = "Invalid time zone region: @1"; /* invalid_timezone_region */
        messages[335545215] = "Invalid time zone ID: @1"; /* invalid_timezone_id */
        messages[335545216] = "Wrong base64 text length @1, should be multiple of 4"; /* tom_decode64len */
        messages[335545217] = "Invalid first parameter datatype - need string or blob"; /* tom_strblob */
        messages[335545218] = "Error registering @1 - probably bad tomcrypt library"; /* tom_reg */
        messages[335545219] = "Unknown crypt algorithm @1 in USING clause"; /* tom_algorithm */
        messages[335545220] = "Should specify mode parameter for symmetric cipher"; /* tom_mode_miss */
        messages[335545221] = "Unknown symmetric crypt mode specified"; /* tom_mode_bad */
        messages[335545222] = "Mode parameter makes no sense for chosen cipher"; /* tom_no_mode */
        messages[335545223] = "Should specify initialization vector (IV) for chosen cipher and/or mode"; /* tom_iv_miss */
        messages[335545224] = "Initialization vector (IV) makes no sense for chosen cipher and/or mode"; /* tom_no_iv */
        messages[335545225] = "Invalid counter endianess @1"; /* tom_ctrtype_bad */
        messages[335545226] = "Counter endianess parameter is not used in mode @1"; /* tom_no_ctrtype */
        messages[335545227] = "Too big counter value @1, maximum @2 can be used"; /* tom_ctr_big */
        messages[335545228] = "Counter length/value parameter is not used with @1 @2"; /* tom_no_ctr */
        messages[335545229] = "Invalid initialization vector (IV) length @1, need @2"; /* tom_iv_length */
        messages[335545230] = "TomCrypt library error: @1"; /* tom_error */
        messages[335545231] = "Starting PRNG yarrow"; /* tom_yarrow_start */
        messages[335545232] = "Setting up PRNG yarrow"; /* tom_yarrow_setup */
        messages[335545233] = "Initializing @1 mode"; /* tom_init_mode */
        messages[335545234] = "Encrypting in @1 mode"; /* tom_crypt_mode */
        messages[335545235] = "Decrypting in @1 mode"; /* tom_decrypt_mode */
        messages[335545236] = "Initializing cipher @1"; /* tom_init_cip */
        messages[335545237] = "Encrypting using cipher @1"; /* tom_crypt_cip */
        messages[335545238] = "Decrypting using cipher @1"; /* tom_decrypt_cip */
        messages[335545239] = "Setting initialization vector (IV) for @1"; /* tom_setup_cip */
        messages[335545240] = "Invalid initialization vector (IV) length @1, need  8 or 12"; /* tom_setup_chacha */
        messages[335545241] = "Encoding @1"; /* tom_encode */
        messages[335545242] = "Decoding @1"; /* tom_decode */
        messages[335545243] = "Importing RSA key"; /* tom_rsa_import */
        messages[335545244] = "Invalid OAEP packet"; /* tom_oaep */
        messages[335545245] = "Unknown hash algorithm @1"; /* tom_hash_bad */
        messages[335545246] = "Making RSA key"; /* tom_rsa_make */
        messages[335545247] = "Exporting @1 RSA key"; /* tom_rsa_export */
        messages[335545248] = "RSA-signing data"; /* tom_rsa_sign */
        messages[335545249] = "Verifying RSA-signed data"; /* tom_rsa_verify */
        messages[335545250] = "Invalid key length @1, need 16 or 32"; /* tom_chacha_key */
        messages[335545251] = "invalid replicator handle"; /* bad_repl_handle */
        messages[335545253] = "Input parameter '@1' is not used in SQL query text"; /* eds_input_prm_not_used */
        messages[335545254] = "Effective user is @1"; /* effective_user */
        messages[335545255] = "Invalid time zone bind mode @1"; /* invalid_time_zone_bind */
        messages[335545256] = "Invalid decfloat bind mode @1"; /* invalid_decfloat_bind */
        messages[335545257] = "Invalid hex text length @1, should be multiple of 2"; /* odd_hex_len */
        messages[335545258] = "Invalid hex digit @1 at position @2"; /* invalid_hex_digit */
        messages[335545259] = "Error processing isc_dpb_set_bind clumplet \"@1\""; /* bind_err */
        messages[335545260] = "The following statement failed: @1"; /* bind_statement */
        messages[335545261] = "Can not convert @1 to @2"; /* bind_convert */
        messages[335545262] = "cannot update old BLOB"; /* cannot_update_old_blob */
        messages[335545263] = "cannot read from new BLOB"; /* cannot_read_new_blob */
        messages[335545264] = "No permission for CREATE @1 operation"; /* dyn_no_create_priv */
        messages[335545265] = "SUSPEND could not be used without RETURNS clause in PROCEDURE or EXECUTE BLOCK"; /* suspend_without_returns */
        messages[335545266] = "String truncated warning due to the following reason"; /* truncate_warn */
        messages[335545267] = "Monitoring data does not fit into the field"; /* truncate_monitor */
        messages[335545268] = "Engine data does not fit into return value of system function"; /* truncate_context */
        messages[335545269] = "Multiple source records cannot match the same target during MERGE"; /* merge_dup_update */
        messages[335545270] = "RDB$PAGES written by non-system transaction, DB appears to be damaged"; /* wrong_page */
        messages[335545271] = "Replication error"; /* repl_error */
        messages[335740929] = "data base file name (@1) already given"; /* gfix_db_name */
        messages[335740930] = "invalid switch @1"; /* gfix_invalid_sw */
        messages[335740932] = "incompatible switch combination"; /* gfix_incmp_sw */
        messages[335740933] = "replay log pathname required"; /* gfix_replay_req */
        messages[335740934] = "number of page buffers for cache required"; /* gfix_pgbuf_req */
        messages[335740935] = "numeric value required"; /* gfix_val_req */
        messages[335740936] = "positive numeric value required"; /* gfix_pval_req */
        messages[335740937] = "number of transactions per sweep required"; /* gfix_trn_req */
        messages[335740940] = "\"full\" or \"reserve\" required"; /* gfix_full_req */
        messages[335740941] = "user name required"; /* gfix_usrname_req */
        messages[335740942] = "password required"; /* gfix_pass_req */
        messages[335740943] = "subsystem name"; /* gfix_subs_name */
        messages[335740944] = "\"wal\" required"; /* gfix_wal_req */
        messages[335740945] = "number of seconds required"; /* gfix_sec_req */
        messages[335740946] = "numeric value between 0 and 32767 inclusive required"; /* gfix_nval_req */
        messages[335740947] = "must specify type of shutdown"; /* gfix_type_shut */
        messages[335740948] = "please retry, specifying an option"; /* gfix_retry */
        messages[335740951] = "please retry, giving a database name"; /* gfix_retry_db */
        messages[335740991] = "internal block exceeds maximum size"; /* gfix_exceed_max */
        messages[335740992] = "corrupt pool"; /* gfix_corrupt_pool */
        messages[335740993] = "virtual memory exhausted"; /* gfix_mem_exhausted */
        messages[335740994] = "bad pool id"; /* gfix_bad_pool */
        messages[335740995] = "Transaction state @1 not in valid range."; /* gfix_trn_not_valid */
        messages[335741012] = "unexpected end of input"; /* gfix_unexp_eoi */
        messages[335741018] = "failed to reconnect to a transaction in database @1"; /* gfix_recon_fail */
        messages[335741036] = "Transaction description item unknown"; /* gfix_trn_unknown */
        messages[335741038] = "\"read_only\" or \"read_write\" required"; /* gfix_mode_req */
        messages[335741042] = "positive or zero numeric value required"; /* gfix_pzval_req */
        messages[336003074] = "Cannot SELECT RDB$DB_KEY from a stored procedure."; /* dsql_dbkey_from_non_table */
        messages[336003075] = "Precision 10 to 18 changed from DOUBLE PRECISION in SQL dialect 1 to 64-bit scaled integer in SQL dialect 3"; /* dsql_transitional_numeric */
        messages[336003076] = "Use of @1 expression that returns different results in dialect 1 and dialect 3"; /* dsql_dialect_warning_expr */
        messages[336003077] = "Database SQL dialect @1 does not support reference to @2 datatype"; /* sql_db_dialect_dtype_unsupport */
        messages[336003079] = "DB dialect @1 and client dialect @2 conflict with respect to numeric precision @3."; /* sql_dialect_conflict_num */
        messages[336003080] = "WARNING: Numeric literal @1 is interpreted as a floating-point"; /* dsql_warning_number_ambiguous */
        messages[336003081] = "value in SQL dialect 1, but as an exact numeric value in SQL dialect 3."; /* dsql_warning_number_ambiguous1 */
        messages[336003082] = "WARNING: NUMERIC and DECIMAL fields with precision 10 or greater are stored"; /* dsql_warn_precision_ambiguous */
        messages[336003083] = "as approximate floating-point values in SQL dialect 1, but as 64-bit"; /* dsql_warn_precision_ambiguous1 */
        messages[336003084] = "integers in SQL dialect 3."; /* dsql_warn_precision_ambiguous2 */
        messages[336003085] = "Ambiguous field name between @1 and @2"; /* dsql_ambiguous_field_name */
        messages[336003086] = "External function should have return position between 1 and @1"; /* dsql_udf_return_pos_err */
        messages[336003087] = "Label @1 @2 in the current scope"; /* dsql_invalid_label */
        messages[336003088] = "Datatypes @1are not comparable in expression @2"; /* dsql_datatypes_not_comparable */
        messages[336003089] = "Empty cursor name is not allowed"; /* dsql_cursor_invalid */
        messages[336003090] = "Statement already has a cursor @1 assigned"; /* dsql_cursor_redefined */
        messages[336003091] = "Cursor @1 is not found in the current context"; /* dsql_cursor_not_found */
        messages[336003092] = "Cursor @1 already exists in the current context"; /* dsql_cursor_exists */
        messages[336003093] = "Relation @1 is ambiguous in cursor @2"; /* dsql_cursor_rel_ambiguous */
        messages[336003094] = "Relation @1 is not found in cursor @2"; /* dsql_cursor_rel_not_found */
        messages[336003095] = "Cursor is not open"; /* dsql_cursor_not_open */
        messages[336003096] = "Data type @1 is not supported for EXTERNAL TABLES. Relation '@2', field '@3'"; /* dsql_type_not_supp_ext_tab */
        messages[336003097] = "Feature not supported on ODS version older than @1.@2"; /* dsql_feature_not_supported_ods */
        messages[336003098] = "Primary key required on table @1"; /* primary_key_required */
        messages[336003099] = "UPDATE OR INSERT field list does not match primary key of table @1"; /* upd_ins_doesnt_match_pk */
        messages[336003100] = "UPDATE OR INSERT field list does not match MATCHING clause"; /* upd_ins_doesnt_match_matching */
        messages[336003101] = "UPDATE OR INSERT without MATCHING could not be used with views based on more than one table"; /* upd_ins_with_complex_view */
        messages[336003102] = "Incompatible trigger type"; /* dsql_incompatible_trigger_type */
        messages[336003104] = "To be used with RDB$RECORD_VERSION, @1 must be a table or a view of single table"; /* dsql_record_version_table */
        messages[336003105] = "SQLDA version expected between @1 and @2, found @3"; /* dsql_invalid_sqlda_version */
        messages[336003106] = "at SQLVAR index @1"; /* dsql_sqlvar_index */
        messages[336003107] = "empty pointer to NULL indicator variable"; /* dsql_no_sqlind */
        messages[336003108] = "empty pointer to data"; /* dsql_no_sqldata */
        messages[336003109] = "No SQLDA for input values provided"; /* dsql_no_input_sqlda */
        messages[336003110] = "No SQLDA for output values provided"; /* dsql_no_output_sqlda */
        messages[336003111] = "Wrong number of parameters (expected @1, got @2)"; /* dsql_wrong_param_num */
        messages[336003112] = "Invalid DROP SQL SECURITY clause"; /* dsql_invalid_drop_ss_clause */
        messages[336003113] = "UPDATE OR INSERT value for field @1, part of the implicit or explicit MATCHING clause, cannot be DEFAULT"; /* upd_ins_cannot_default */
        messages[336068645] = "BLOB Filter @1 not found"; /* dyn_filter_not_found */
        messages[336068649] = "Function @1 not found"; /* dyn_func_not_found */
        messages[336068656] = "Index not found"; /* dyn_index_not_found */
        messages[336068662] = "View @1 not found"; /* dyn_view_not_found */
        messages[336068697] = "Domain not found"; /* dyn_domain_not_found */
        messages[336068717] = "Triggers created automatically cannot be modified"; /* dyn_cant_modify_auto_trig */
        messages[336068740] = "Table @1 already exists"; /* dyn_dup_table */
        messages[336068748] = "Procedure @1 not found"; /* dyn_proc_not_found */
        messages[336068752] = "Exception not found"; /* dyn_exception_not_found */
        messages[336068754] = "Parameter @1 in procedure @2 not found"; /* dyn_proc_param_not_found */
        messages[336068755] = "Trigger @1 not found"; /* dyn_trig_not_found */
        messages[336068759] = "Character set @1 not found"; /* dyn_charset_not_found */
        messages[336068760] = "Collation @1 not found"; /* dyn_collation_not_found */
        messages[336068763] = "Role @1 not found"; /* dyn_role_not_found */
        messages[336068767] = "Name longer than database column size"; /* dyn_name_longer */
        messages[336068784] = "column @1 does not exist in table/view @2"; /* dyn_column_does_not_exist */
        messages[336068796] = "SQL role @1 does not exist"; /* dyn_role_does_not_exist */
        messages[336068797] = "user @1 has no grant admin option on SQL role @2"; /* dyn_no_grant_admin_opt */
        messages[336068798] = "user @1 is not a member of SQL role @2"; /* dyn_user_not_role_member */
        messages[336068799] = "@1 is not the owner of SQL role @2"; /* dyn_delete_role_failed */
        messages[336068800] = "@1 is a SQL role and not a user"; /* dyn_grant_role_to_user */
        messages[336068801] = "user name @1 could not be used for SQL role"; /* dyn_inv_sql_role_name */
        messages[336068802] = "SQL role @1 already exists"; /* dyn_dup_sql_role */
        messages[336068803] = "keyword @1 can not be used as a SQL role name"; /* dyn_kywd_spec_for_role */
        messages[336068804] = "SQL roles are not supported in on older versions of the database.  A backup and restore of the database is required."; /* dyn_roles_not_supported */
        messages[336068812] = "Cannot rename domain @1 to @2.  A domain with that name already exists."; /* dyn_domain_name_exists */
        messages[336068813] = "Cannot rename column @1 to @2.  A column with that name already exists in table @3."; /* dyn_field_name_exists */
        messages[336068814] = "Column @1 from table @2 is referenced in @3"; /* dyn_dependency_exists */
        messages[336068815] = "Cannot change datatype for column @1.  Changing datatype is not supported for BLOB or ARRAY columns."; /* dyn_dtype_invalid */
        messages[336068816] = "New size specified for column @1 must be at least @2 characters."; /* dyn_char_fld_too_small */
        messages[336068817] = "Cannot change datatype for @1.  Conversion from base type @2 to @3 is not supported."; /* dyn_invalid_dtype_conversion */
        messages[336068818] = "Cannot change datatype for column @1 from a character type to a non-character type."; /* dyn_dtype_conv_invalid */
        messages[336068820] = "Zero length identifiers are not allowed"; /* dyn_zero_len_id */
        messages[336068822] = "Sequence @1 not found"; /* dyn_gen_not_found */
        messages[336068829] = "Maximum number of collations per character set exceeded"; /* max_coll_per_charset */
        messages[336068830] = "Invalid collation attributes"; /* invalid_coll_attr */
        messages[336068840] = "@1 cannot reference @2"; /* dyn_wrong_gtt_scope */
        messages[336068843] = "Collation @1 is used in table @2 (field name @3) and cannot be dropped"; /* dyn_coll_used_table */
        messages[336068844] = "Collation @1 is used in domain @2 and cannot be dropped"; /* dyn_coll_used_domain */
        messages[336068845] = "Cannot delete system collation"; /* dyn_cannot_del_syscoll */
        messages[336068846] = "Cannot delete default collation of CHARACTER SET @1"; /* dyn_cannot_del_def_coll */
        messages[336068849] = "Table @1 not found"; /* dyn_table_not_found */
        messages[336068851] = "Collation @1 is used in procedure @2 (parameter name @3) and cannot be dropped"; /* dyn_coll_used_procedure */
        messages[336068852] = "New scale specified for column @1 must be at most @2."; /* dyn_scale_too_big */
        messages[336068853] = "New precision specified for column @1 must be at least @2."; /* dyn_precision_too_small */
        messages[336068855] = "Warning: @1 on @2 is not granted to @3."; /* dyn_miss_priv_warning */
        messages[336068856] = "Feature '@1' is not supported in ODS @2.@3"; /* dyn_ods_not_supp_feature */
        messages[336068857] = "Cannot add or remove COMPUTED from column @1"; /* dyn_cannot_addrem_computed */
        messages[336068858] = "Password should not be empty string"; /* dyn_no_empty_pw */
        messages[336068859] = "Index @1 already exists"; /* dyn_dup_index */
        messages[336068864] = "Package @1 not found"; /* dyn_package_not_found */
        messages[336068865] = "Schema @1 not found"; /* dyn_schema_not_found */
        messages[336068866] = "Cannot ALTER or DROP system procedure @1"; /* dyn_cannot_mod_sysproc */
        messages[336068867] = "Cannot ALTER or DROP system trigger @1"; /* dyn_cannot_mod_systrig */
        messages[336068868] = "Cannot ALTER or DROP system function @1"; /* dyn_cannot_mod_sysfunc */
        messages[336068869] = "Invalid DDL statement for procedure @1"; /* dyn_invalid_ddl_proc */
        messages[336068870] = "Invalid DDL statement for trigger @1"; /* dyn_invalid_ddl_trig */
        messages[336068871] = "Function @1 has not been defined on the package body @2"; /* dyn_funcnotdef_package */
        messages[336068872] = "Procedure @1 has not been defined on the package body @2"; /* dyn_procnotdef_package */
        messages[336068873] = "Function @1 has a signature mismatch on package body @2"; /* dyn_funcsignat_package */
        messages[336068874] = "Procedure @1 has a signature mismatch on package body @2"; /* dyn_procsignat_package */
        messages[336068875] = "Default values for parameters are not allowed in the definition of a previously declared packaged procedure @1.@2"; /* dyn_defvaldecl_package_proc */
        messages[336068877] = "Package body @1 already exists"; /* dyn_package_body_exists */
        messages[336068878] = "Invalid DDL statement for function @1"; /* dyn_invalid_ddl_func */
        messages[336068879] = "Cannot alter new style function @1 with ALTER EXTERNAL FUNCTION. Use ALTER FUNCTION instead."; /* dyn_newfc_oldsyntax */
        messages[336068886] = "Parameter @1 in function @2 not found"; /* dyn_func_param_not_found */
        messages[336068887] = "Parameter @1 of routine @2 not found"; /* dyn_routine_param_not_found */
        messages[336068888] = "Parameter @1 of routine @2 is ambiguous (found in both procedures and functions). Use a specifier keyword."; /* dyn_routine_param_ambiguous */
        messages[336068889] = "Collation @1 is used in function @2 (parameter name @3) and cannot be dropped"; /* dyn_coll_used_function */
        messages[336068890] = "Domain @1 is used in function @2 (parameter name @3) and cannot be dropped"; /* dyn_domain_used_function */
        messages[336068891] = "ALTER USER requires at least one clause to be specified"; /* dyn_alter_user_no_clause */
        messages[336068894] = "Duplicate @1 @2"; /* dyn_duplicate_package_item */
        messages[336068895] = "System @1 @2 cannot be modified"; /* dyn_cant_modify_sysobj */
        messages[336068896] = "INCREMENT BY 0 is an illegal option for sequence @1"; /* dyn_cant_use_zero_increment */
        messages[336068898] = "Default values for parameters are not allowed in the definition of a previously declared packaged function @1.@2"; /* dyn_defvaldecl_package_func */
        messages[336068900] = "role @1 can not be granted to role @2"; /* dyn_cyclic_role */
        messages[336068904] = "INCREMENT BY 0 is an illegal option for identity column @1 of table @2"; /* dyn_cant_use_zero_inc_ident */
        messages[336068907] = "no @1 privilege with grant option on DDL @2"; /* dyn_no_ddl_grant_opt_priv */
        messages[336068908] = "no @1 privilege with grant option on object @2"; /* dyn_no_grant_opt_priv */
        messages[336068909] = "Function @1 does not exist"; /* dyn_func_not_exist */
        messages[336068910] = "Procedure @1 does not exist"; /* dyn_proc_not_exist */
        messages[336068911] = "Package @1 does not exist"; /* dyn_pack_not_exist */
        messages[336068912] = "Trigger @1 does not exist"; /* dyn_trig_not_exist */
        messages[336068913] = "View @1 does not exist"; /* dyn_view_not_exist */
        messages[336068914] = "Table @1 does not exist"; /* dyn_rel_not_exist */
        messages[336068915] = "Exception @1 does not exist"; /* dyn_exc_not_exist */
        messages[336068916] = "Generator/Sequence @1 does not exist"; /* dyn_gen_not_exist */
        messages[336068917] = "Field @1 of table @2 does not exist"; /* dyn_fld_not_exist */
        messages[336330753] = "found unknown switch"; /* gbak_unknown_switch */
        messages[336330754] = "page size parameter missing"; /* gbak_page_size_missing */
        messages[336330755] = "Page size specified (@1) greater than limit (32768 bytes)"; /* gbak_page_size_toobig */
        messages[336330756] = "redirect location for output is not specified"; /* gbak_redir_ouput_missing */
        messages[336330757] = "conflicting switches for backup/restore"; /* gbak_switches_conflict */
        messages[336330758] = "device type @1 not known"; /* gbak_unknown_device */
        messages[336330759] = "protection is not there yet"; /* gbak_no_protection */
        messages[336330760] = "page size is allowed only on restore or create"; /* gbak_page_size_not_allowed */
        messages[336330761] = "multiple sources or destinations specified"; /* gbak_multi_source_dest */
        messages[336330762] = "requires both input and output filenames"; /* gbak_filename_missing */
        messages[336330763] = "input and output have the same name.  Disallowed."; /* gbak_dup_inout_names */
        messages[336330764] = "expected page size, encountered \"@1\""; /* gbak_inv_page_size */
        messages[336330765] = "REPLACE specified, but the first file @1 is a database"; /* gbak_db_specified */
        messages[336330766] = "database @1 already exists.  To replace it, use the -REP switch"; /* gbak_db_exists */
        messages[336330767] = "device type not specified"; /* gbak_unk_device */
        messages[336330772] = "gds_$blob_info failed"; /* gbak_blob_info_failed */
        messages[336330773] = "do not understand BLOB INFO item @1"; /* gbak_unk_blob_item */
        messages[336330774] = "gds_$get_segment failed"; /* gbak_get_seg_failed */
        messages[336330775] = "gds_$close_blob failed"; /* gbak_close_blob_failed */
        messages[336330776] = "gds_$open_blob failed"; /* gbak_open_blob_failed */
        messages[336330777] = "Failed in put_blr_gen_id"; /* gbak_put_blr_gen_id_failed */
        messages[336330778] = "data type @1 not understood"; /* gbak_unk_type */
        messages[336330779] = "gds_$compile_request failed"; /* gbak_comp_req_failed */
        messages[336330780] = "gds_$start_request failed"; /* gbak_start_req_failed */
        messages[336330781] = "gds_$receive failed"; /* gbak_rec_failed */
        messages[336330782] = "gds_$release_request failed"; /* gbak_rel_req_failed */
        messages[336330783] = "gds_$database_info failed"; /* gbak_db_info_failed */
        messages[336330784] = "Expected database description record"; /* gbak_no_db_desc */
        messages[336330785] = "failed to create database @1"; /* gbak_db_create_failed */
        messages[336330786] = "RESTORE: decompression length error"; /* gbak_decomp_len_error */
        messages[336330787] = "cannot find table @1"; /* gbak_tbl_missing */
        messages[336330788] = "Cannot find column for BLOB"; /* gbak_blob_col_missing */
        messages[336330789] = "gds_$create_blob failed"; /* gbak_create_blob_failed */
        messages[336330790] = "gds_$put_segment failed"; /* gbak_put_seg_failed */
        messages[336330791] = "expected record length"; /* gbak_rec_len_exp */
        messages[336330792] = "wrong length record, expected @1 encountered @2"; /* gbak_inv_rec_len */
        messages[336330793] = "expected data attribute"; /* gbak_exp_data_type */
        messages[336330794] = "Failed in store_blr_gen_id"; /* gbak_gen_id_failed */
        messages[336330795] = "do not recognize record type @1"; /* gbak_unk_rec_type */
        messages[336330796] = "Expected backup version 1..10.  Found @1"; /* gbak_inv_bkup_ver */
        messages[336330797] = "expected backup description record"; /* gbak_missing_bkup_desc */
        messages[336330798] = "string truncated"; /* gbak_string_trunc */
        messages[336330799] = "warning -- record could not be restored"; /* gbak_cant_rest_record */
        messages[336330800] = "gds_$send failed"; /* gbak_send_failed */
        messages[336330801] = "no table name for data"; /* gbak_no_tbl_name */
        messages[336330802] = "unexpected end of file on backup file"; /* gbak_unexp_eof */
        messages[336330803] = "database format @1 is too old to restore to"; /* gbak_db_format_too_old */
        messages[336330804] = "array dimension for column @1 is invalid"; /* gbak_inv_array_dim */
        messages[336330807] = "Expected XDR record length"; /* gbak_xdr_len_expected */
        messages[336330817] = "cannot open backup file @1"; /* gbak_open_bkup_error */
        messages[336330818] = "cannot open status and error output file @1"; /* gbak_open_error */
        messages[336330934] = "blocking factor parameter missing"; /* gbak_missing_block_fac */
        messages[336330935] = "expected blocking factor, encountered \"@1\""; /* gbak_inv_block_fac */
        messages[336330936] = "a blocking factor may not be used in conjunction with device CT"; /* gbak_block_fac_specified */
        messages[336330940] = "user name parameter missing"; /* gbak_missing_username */
        messages[336330941] = "password parameter missing"; /* gbak_missing_password */
        messages[336330952] = " missing parameter for the number of bytes to be skipped"; /* gbak_missing_skipped_bytes */
        messages[336330953] = "expected number of bytes to be skipped, encountered \"@1\""; /* gbak_inv_skipped_bytes */
        messages[336330965] = "character set"; /* gbak_err_restore_charset */
        messages[336330967] = "collation"; /* gbak_err_restore_collation */
        messages[336330972] = "Unexpected I/O error while reading from backup file"; /* gbak_read_error */
        messages[336330973] = "Unexpected I/O error while writing to backup file"; /* gbak_write_error */
        messages[336330985] = "could not drop database @1 (no privilege or database might be in use)"; /* gbak_db_in_use */
        messages[336330990] = "System memory exhausted"; /* gbak_sysmemex */
        messages[336331002] = "SQL role"; /* gbak_restore_role_failed */
        messages[336331005] = "SQL role parameter missing"; /* gbak_role_op_missing */
        messages[336331010] = "page buffers parameter missing"; /* gbak_page_buffers_missing */
        messages[336331011] = "expected page buffers, encountered \"@1\""; /* gbak_page_buffers_wrong_param */
        messages[336331012] = "page buffers is allowed only on restore or create"; /* gbak_page_buffers_restore */
        messages[336331014] = "size specification either missing or incorrect for file @1"; /* gbak_inv_size */
        messages[336331015] = "file @1 out of sequence"; /* gbak_file_outof_sequence */
        messages[336331017] = " standard input is not supported when using join operation"; /* gbak_stdin_not_supptd */
        messages[336331018] = "standard output is not supported when using split operation or in verbose mode"; /* gbak_stdout_not_supptd */
        messages[336331019] = "backup file @1 might be corrupt"; /* gbak_bkup_corrupt */
        messages[336331020] = "database file specification missing"; /* gbak_unk_db_file_spec */
        messages[336331022] = "free disk space exhausted"; /* gbak_disk_space_ex */
        messages[336331023] = "file size given (@1) is less than minimum allowed (@2)"; /* gbak_size_lt_min */
        messages[336331025] = "service name parameter missing"; /* gbak_svc_name_missing */
        messages[336331026] = "Cannot restore over current database, must be SYSDBA or owner of the existing database."; /* gbak_not_ownr */
        messages[336331031] = "\"read_only\" or \"read_write\" required"; /* gbak_mode_req */
        messages[336331033] = "just data ignore all constraints etc."; /* gbak_just_data */
        messages[336331034] = "restoring data only ignoring foreign key, unique, not null & other constraints"; /* gbak_data_only */
        messages[336331078] = "verbose interval value parameter missing"; /* gbak_missing_interval */
        messages[336331079] = "verbose interval value cannot be smaller than @1"; /* gbak_wrong_interval */
        messages[336331081] = "verify (verbose) and verbint options are mutually exclusive"; /* gbak_verify_verbint */
        messages[336331082] = "option -@1 is allowed only on restore or create"; /* gbak_option_only_restore */
        messages[336331083] = "option -@1 is allowed only on backup"; /* gbak_option_only_backup */
        messages[336331084] = "options -@1 and -@2 are mutually exclusive"; /* gbak_option_conflict */
        messages[336331085] = "parameter for option -@1 was already specified with value \"@2\""; /* gbak_param_conflict */
        messages[336331086] = "option -@1 was already specified"; /* gbak_option_repeated */
        messages[336331091] = "dependency depth greater than @1 for view @2"; /* gbak_max_dbkey_recursion */
        messages[336331092] = "value greater than @1 when calculating length of rdb$db_key for view @2"; /* gbak_max_dbkey_length */
        messages[336331093] = "Invalid metadata detected. Use -FIX_FSS_METADATA option."; /* gbak_invalid_metadata */
        messages[336331094] = "Invalid data detected. Use -FIX_FSS_DATA option."; /* gbak_invalid_data */
        messages[336331096] = "Expected backup version @2..@3.  Found @1"; /* gbak_inv_bkup_ver2 */
        messages[336331100] = "database format @1 is too old to backup"; /* gbak_db_format_too_old2 */
        messages[336397205] = "ODS versions before ODS@1 are not supported"; /* dsql_too_old_ods */
        messages[336397206] = "Table @1 does not exist"; /* dsql_table_not_found */
        messages[336397207] = "View @1 does not exist"; /* dsql_view_not_found */
        messages[336397208] = "At line @1, column @2"; /* dsql_line_col_error */
        messages[336397209] = "At unknown line and column"; /* dsql_unknown_pos */
        messages[336397210] = "Column @1 cannot be repeated in @2 statement"; /* dsql_no_dup_name */
        messages[336397211] = "Too many values (more than @1) in member list to match against"; /* dsql_too_many_values */
        messages[336397212] = "Array and BLOB data types not allowed in computed field"; /* dsql_no_array_computed */
        messages[336397213] = "Implicit domain name @1 not allowed in user created domain"; /* dsql_implicit_domain_name */
        messages[336397214] = "scalar operator used on field @1 which is not an array"; /* dsql_only_can_subscript_array */
        messages[336397215] = "cannot sort on more than 255 items"; /* dsql_max_sort_items */
        messages[336397216] = "cannot group on more than 255 items"; /* dsql_max_group_items */
        messages[336397217] = "Cannot include the same field (@1.@2) twice in the ORDER BY clause with conflicting sorting options"; /* dsql_conflicting_sort_field */
        messages[336397218] = "column list from derived table @1 has more columns than the number of items in its SELECT statement"; /* dsql_derived_table_more_columns */
        messages[336397219] = "column list from derived table @1 has less columns than the number of items in its SELECT statement"; /* dsql_derived_table_less_columns */
        messages[336397220] = "no column name specified for column number @1 in derived table @2"; /* dsql_derived_field_unnamed */
        messages[336397221] = "column @1 was specified multiple times for derived table @2"; /* dsql_derived_field_dup_name */
        messages[336397222] = "Internal dsql error: alias type expected by pass1_expand_select_node"; /* dsql_derived_alias_select */
        messages[336397223] = "Internal dsql error: alias type expected by pass1_field"; /* dsql_derived_alias_field */
        messages[336397224] = "Internal dsql error: column position out of range in pass1_union_auto_cast"; /* dsql_auto_field_bad_pos */
        messages[336397225] = "Recursive CTE member (@1) can refer itself only in FROM clause"; /* dsql_cte_wrong_reference */
        messages[336397226] = "CTE '@1' has cyclic dependencies"; /* dsql_cte_cycle */
        messages[336397229] = "Recursive CTE (@1) must be an UNION"; /* dsql_cte_not_a_union */
        messages[336397230] = "CTE '@1' defined non-recursive member after recursive"; /* dsql_cte_nonrecurs_after_recurs */
        messages[336397231] = "Recursive member of CTE '@1' has @2 clause"; /* dsql_cte_wrong_clause */
        messages[336397232] = "Recursive members of CTE (@1) must be linked with another members via UNION ALL"; /* dsql_cte_union_all */
        messages[336397233] = "Non-recursive member is missing in CTE '@1'"; /* dsql_cte_miss_nonrecursive */
        messages[336397235] = "column @1 appears more than once in USING clause"; /* dsql_col_more_than_once_using */
        messages[336397236] = "feature is not supported in dialect @1"; /* dsql_unsupp_feature_dialect */
        messages[336397237] = "CTE \"@1\" is not used in query"; /* dsql_cte_not_used */
        messages[336397238] = "column @1 appears more than once in ALTER VIEW"; /* dsql_col_more_than_once_view */
        messages[336397239] = "@1 is not supported inside IN AUTONOMOUS TRANSACTION block"; /* dsql_unsupported_in_auto_trans */
        messages[336397240] = "Unknown node type @1 in dsql/GEN_expr"; /* dsql_eval_unknode */
        messages[336397241] = "Argument for @1 in dialect 1 must be string or numeric"; /* dsql_agg_wrongarg */
        messages[336397242] = "Argument for @1 in dialect 3 must be numeric"; /* dsql_agg2_wrongarg */
        messages[336397243] = "Strings cannot be added to or subtracted from DATE or TIME types"; /* dsql_nodateortime_pm_string */
        messages[336397244] = "Invalid data type for subtraction involving DATE, TIME or TIMESTAMP types"; /* dsql_invalid_datetime_subtract */
        messages[336397245] = "Adding two DATE values or two TIME values is not allowed"; /* dsql_invalid_dateortime_add */
        messages[336397246] = "DATE value cannot be subtracted from the provided data type"; /* dsql_invalid_type_minus_date */
        messages[336397247] = "Strings cannot be added or subtracted in dialect 3"; /* dsql_nostring_addsub_dial3 */
        messages[336397248] = "Invalid data type for addition or subtraction in dialect 3"; /* dsql_invalid_type_addsub_dial3 */
        messages[336397249] = "Invalid data type for multiplication in dialect 1"; /* dsql_invalid_type_multip_dial1 */
        messages[336397250] = "Strings cannot be multiplied in dialect 3"; /* dsql_nostring_multip_dial3 */
        messages[336397251] = "Invalid data type for multiplication in dialect 3"; /* dsql_invalid_type_multip_dial3 */
        messages[336397252] = "Division in dialect 1 must be between numeric data types"; /* dsql_mustuse_numeric_div_dial1 */
        messages[336397253] = "Strings cannot be divided in dialect 3"; /* dsql_nostring_div_dial3 */
        messages[336397254] = "Invalid data type for division in dialect 3"; /* dsql_invalid_type_div_dial3 */
        messages[336397255] = "Strings cannot be negated (applied the minus operator) in dialect 3"; /* dsql_nostring_neg_dial3 */
        messages[336397256] = "Invalid data type for negation (minus operator)"; /* dsql_invalid_type_neg */
        messages[336397257] = "Cannot have more than 255 items in DISTINCT / UNION DISTINCT list"; /* dsql_max_distinct_items */
        messages[336397258] = "ALTER CHARACTER SET @1 failed"; /* dsql_alter_charset_failed */
        messages[336397259] = "COMMENT ON @1 failed"; /* dsql_comment_on_failed */
        messages[336397260] = "CREATE FUNCTION @1 failed"; /* dsql_create_func_failed */
        messages[336397261] = "ALTER FUNCTION @1 failed"; /* dsql_alter_func_failed */
        messages[336397262] = "CREATE OR ALTER FUNCTION @1 failed"; /* dsql_create_alter_func_failed */
        messages[336397263] = "DROP FUNCTION @1 failed"; /* dsql_drop_func_failed */
        messages[336397264] = "RECREATE FUNCTION @1 failed"; /* dsql_recreate_func_failed */
        messages[336397265] = "CREATE PROCEDURE @1 failed"; /* dsql_create_proc_failed */
        messages[336397266] = "ALTER PROCEDURE @1 failed"; /* dsql_alter_proc_failed */
        messages[336397267] = "CREATE OR ALTER PROCEDURE @1 failed"; /* dsql_create_alter_proc_failed */
        messages[336397268] = "DROP PROCEDURE @1 failed"; /* dsql_drop_proc_failed */
        messages[336397269] = "RECREATE PROCEDURE @1 failed"; /* dsql_recreate_proc_failed */
        messages[336397270] = "CREATE TRIGGER @1 failed"; /* dsql_create_trigger_failed */
        messages[336397271] = "ALTER TRIGGER @1 failed"; /* dsql_alter_trigger_failed */
        messages[336397272] = "CREATE OR ALTER TRIGGER @1 failed"; /* dsql_create_alter_trigger_failed */
        messages[336397273] = "DROP TRIGGER @1 failed"; /* dsql_drop_trigger_failed */
        messages[336397274] = "RECREATE TRIGGER @1 failed"; /* dsql_recreate_trigger_failed */
        messages[336397275] = "CREATE COLLATION @1 failed"; /* dsql_create_collation_failed */
        messages[336397276] = "DROP COLLATION @1 failed"; /* dsql_drop_collation_failed */
        messages[336397277] = "CREATE DOMAIN @1 failed"; /* dsql_create_domain_failed */
        messages[336397278] = "ALTER DOMAIN @1 failed"; /* dsql_alter_domain_failed */
        messages[336397279] = "DROP DOMAIN @1 failed"; /* dsql_drop_domain_failed */
        messages[336397280] = "CREATE EXCEPTION @1 failed"; /* dsql_create_except_failed */
        messages[336397281] = "ALTER EXCEPTION @1 failed"; /* dsql_alter_except_failed */
        messages[336397282] = "CREATE OR ALTER EXCEPTION @1 failed"; /* dsql_create_alter_except_failed */
        messages[336397283] = "RECREATE EXCEPTION @1 failed"; /* dsql_recreate_except_failed */
        messages[336397284] = "DROP EXCEPTION @1 failed"; /* dsql_drop_except_failed */
        messages[336397285] = "CREATE SEQUENCE @1 failed"; /* dsql_create_sequence_failed */
        messages[336397286] = "CREATE TABLE @1 failed"; /* dsql_create_table_failed */
        messages[336397287] = "ALTER TABLE @1 failed"; /* dsql_alter_table_failed */
        messages[336397288] = "DROP TABLE @1 failed"; /* dsql_drop_table_failed */
        messages[336397289] = "RECREATE TABLE @1 failed"; /* dsql_recreate_table_failed */
        messages[336397290] = "CREATE PACKAGE @1 failed"; /* dsql_create_pack_failed */
        messages[336397291] = "ALTER PACKAGE @1 failed"; /* dsql_alter_pack_failed */
        messages[336397292] = "CREATE OR ALTER PACKAGE @1 failed"; /* dsql_create_alter_pack_failed */
        messages[336397293] = "DROP PACKAGE @1 failed"; /* dsql_drop_pack_failed */
        messages[336397294] = "RECREATE PACKAGE @1 failed"; /* dsql_recreate_pack_failed */
        messages[336397295] = "CREATE PACKAGE BODY @1 failed"; /* dsql_create_pack_body_failed */
        messages[336397296] = "DROP PACKAGE BODY @1 failed"; /* dsql_drop_pack_body_failed */
        messages[336397297] = "RECREATE PACKAGE BODY @1 failed"; /* dsql_recreate_pack_body_failed */
        messages[336397298] = "CREATE VIEW @1 failed"; /* dsql_create_view_failed */
        messages[336397299] = "ALTER VIEW @1 failed"; /* dsql_alter_view_failed */
        messages[336397300] = "CREATE OR ALTER VIEW @1 failed"; /* dsql_create_alter_view_failed */
        messages[336397301] = "RECREATE VIEW @1 failed"; /* dsql_recreate_view_failed */
        messages[336397302] = "DROP VIEW @1 failed"; /* dsql_drop_view_failed */
        messages[336397303] = "DROP SEQUENCE @1 failed"; /* dsql_drop_sequence_failed */
        messages[336397304] = "RECREATE SEQUENCE @1 failed"; /* dsql_recreate_sequence_failed */
        messages[336397305] = "DROP INDEX @1 failed"; /* dsql_drop_index_failed */
        messages[336397306] = "DROP FILTER @1 failed"; /* dsql_drop_filter_failed */
        messages[336397307] = "DROP SHADOW @1 failed"; /* dsql_drop_shadow_failed */
        messages[336397308] = "DROP ROLE @1 failed"; /* dsql_drop_role_failed */
        messages[336397309] = "DROP USER @1 failed"; /* dsql_drop_user_failed */
        messages[336397310] = "CREATE ROLE @1 failed"; /* dsql_create_role_failed */
        messages[336397311] = "ALTER ROLE @1 failed"; /* dsql_alter_role_failed */
        messages[336397312] = "ALTER INDEX @1 failed"; /* dsql_alter_index_failed */
        messages[336397313] = "ALTER DATABASE failed"; /* dsql_alter_database_failed */
        messages[336397314] = "CREATE SHADOW @1 failed"; /* dsql_create_shadow_failed */
        messages[336397315] = "DECLARE FILTER @1 failed"; /* dsql_create_filter_failed */
        messages[336397316] = "CREATE INDEX @1 failed"; /* dsql_create_index_failed */
        messages[336397317] = "CREATE USER @1 failed"; /* dsql_create_user_failed */
        messages[336397318] = "ALTER USER @1 failed"; /* dsql_alter_user_failed */
        messages[336397319] = "GRANT failed"; /* dsql_grant_failed */
        messages[336397320] = "REVOKE failed"; /* dsql_revoke_failed */
        messages[336397321] = "Recursive member of CTE cannot use aggregate or window function"; /* dsql_cte_recursive_aggregate */
        messages[336397322] = "@2 MAPPING @1 failed"; /* dsql_mapping_failed */
        messages[336397323] = "ALTER SEQUENCE @1 failed"; /* dsql_alter_sequence_failed */
        messages[336397324] = "CREATE GENERATOR @1 failed"; /* dsql_create_generator_failed */
        messages[336397325] = "SET GENERATOR @1 failed"; /* dsql_set_generator_failed */
        messages[336397326] = "WITH LOCK can be used only with a single physical table"; /* dsql_wlock_simple */
        messages[336397327] = "FIRST/SKIP cannot be used with OFFSET/FETCH or ROWS"; /* dsql_firstskip_rows */
        messages[336397328] = "WITH LOCK cannot be used with aggregates"; /* dsql_wlock_aggregates */
        messages[336397329] = "WITH LOCK cannot be used with @1"; /* dsql_wlock_conflict */
        messages[336397330] = "Number of arguments (@1) exceeds the maximum (@2) number of EXCEPTION USING arguments"; /* dsql_max_exception_arguments */
        messages[336397331] = "String literal with @1 bytes exceeds the maximum length of @2 bytes"; /* dsql_string_byte_length */
        messages[336397332] = "String literal with @1 characters exceeds the maximum length of @2 characters for the @3 character set"; /* dsql_string_char_length */
        messages[336397333] = "Too many BEGIN...END nesting. Maximum level is @1"; /* dsql_max_nesting */
        messages[336397334] = "RECREATE USER @1 failed"; /* dsql_recreate_user_failed */
        messages[336723983] = "unable to open database"; /* gsec_cant_open_db */
        messages[336723984] = "error in switch specifications"; /* gsec_switches_error */
        messages[336723985] = "no operation specified"; /* gsec_no_op_spec */
        messages[336723986] = "no user name specified"; /* gsec_no_usr_name */
        messages[336723987] = "add record error"; /* gsec_err_add */
        messages[336723988] = "modify record error"; /* gsec_err_modify */
        messages[336723989] = "find/modify record error"; /* gsec_err_find_mod */
        messages[336723990] = "record not found for user: @1"; /* gsec_err_rec_not_found */
        messages[336723991] = "delete record error"; /* gsec_err_delete */
        messages[336723992] = "find/delete record error"; /* gsec_err_find_del */
        messages[336723996] = "find/display record error"; /* gsec_err_find_disp */
        messages[336723997] = "invalid parameter, no switch defined"; /* gsec_inv_param */
        messages[336723998] = "operation already specified"; /* gsec_op_specified */
        messages[336723999] = "password already specified"; /* gsec_pw_specified */
        messages[336724000] = "uid already specified"; /* gsec_uid_specified */
        messages[336724001] = "gid already specified"; /* gsec_gid_specified */
        messages[336724002] = "project already specified"; /* gsec_proj_specified */
        messages[336724003] = "organization already specified"; /* gsec_org_specified */
        messages[336724004] = "first name already specified"; /* gsec_fname_specified */
        messages[336724005] = "middle name already specified"; /* gsec_mname_specified */
        messages[336724006] = "last name already specified"; /* gsec_lname_specified */
        messages[336724008] = "invalid switch specified"; /* gsec_inv_switch */
        messages[336724009] = "ambiguous switch specified"; /* gsec_amb_switch */
        messages[336724010] = "no operation specified for parameters"; /* gsec_no_op_specified */
        messages[336724011] = "no parameters allowed for this operation"; /* gsec_params_not_allowed */
        messages[336724012] = "incompatible switches specified"; /* gsec_incompat_switch */
        messages[336724044] = "Invalid user name (maximum 31 bytes allowed)"; /* gsec_inv_username */
        messages[336724045] = "Warning - maximum 8 significant bytes of password used"; /* gsec_inv_pw_length */
        messages[336724046] = "database already specified"; /* gsec_db_specified */
        messages[336724047] = "database administrator name already specified"; /* gsec_db_admin_specified */
        messages[336724048] = "database administrator password already specified"; /* gsec_db_admin_pw_specified */
        messages[336724049] = "SQL role name already specified"; /* gsec_sql_role_specified */
        messages[336920577] = "found unknown switch"; /* gstat_unknown_switch */
        messages[336920578] = "please retry, giving a database name"; /* gstat_retry */
        messages[336920579] = "Wrong ODS version, expected @1, encountered @2"; /* gstat_wrong_ods */
        messages[336920580] = "Unexpected end of database file."; /* gstat_unexpected_eof */
        messages[336920607] = "System memory exhausted"; /* gstat_sysmemex */
        messages[336986113] = "Wrong value for access mode"; /* fbsvcmgr_bad_am */
        messages[336986114] = "Wrong value for write mode"; /* fbsvcmgr_bad_wm */
        messages[336986115] = "Wrong value for reserve space"; /* fbsvcmgr_bad_rs */
        messages[336986116] = "Unknown tag (@1) in info_svr_db_info block after isc_svc_query()"; /* fbsvcmgr_info_err */
        messages[336986117] = "Unknown tag (@1) in isc_svc_query() results"; /* fbsvcmgr_query_err */
        messages[336986118] = "Unknown switch \"@1\""; /* fbsvcmgr_switch_unknown */
        messages[336986159] = "Wrong value for shutdown mode"; /* fbsvcmgr_bad_sm */
        messages[336986160] = "could not open file @1"; /* fbsvcmgr_fp_open */
        messages[336986161] = "could not read file @1"; /* fbsvcmgr_fp_read */
        messages[336986162] = "empty file @1"; /* fbsvcmgr_fp_empty */
        messages[336986164] = "Invalid or missing parameter for switch @1"; /* fbsvcmgr_bad_arg */
        messages[336986170] = "Unknown tag (@1) in isc_info_svc_limbo_trans block after isc_svc_query()"; /* fbsvcmgr_info_limbo */
        messages[336986171] = "Unknown tag (@1) in isc_spb_tra_state block after isc_svc_query()"; /* fbsvcmgr_limbo_state */
        messages[336986172] = "Unknown tag (@1) in isc_spb_tra_advise block after isc_svc_query()"; /* fbsvcmgr_limbo_advise */
        messages[337051649] = "Switches trusted_user and trusted_role are not supported from command line"; /* utl_trusted_switch */
        messages[337117213] = "Missing parameter for switch @1"; /* nbackup_missing_param */
        messages[337117214] = "Only one of -LOCK, -UNLOCK, -FIXUP, -BACKUP or -RESTORE should be specified"; /* nbackup_allowed_switches */
        messages[337117215] = "Unrecognized parameter @1"; /* nbackup_unknown_param */
        messages[337117216] = "Unknown switch @1"; /* nbackup_unknown_switch */
        messages[337117218] = "Error working with password file \"@1\""; /* nbackup_pwfile_error */
        messages[337117219] = "Switch -SIZE can be used only with -LOCK"; /* nbackup_size_with_lock */
        messages[337117220] = "None of -LOCK, -UNLOCK, -FIXUP, -BACKUP or -RESTORE specified"; /* nbackup_no_switch */
        messages[337117223] = "IO error reading file: @1"; /* nbackup_err_read */
        messages[337117224] = "IO error writing file: @1"; /* nbackup_err_write */
        messages[337117225] = "IO error seeking file: @1"; /* nbackup_err_seek */
        messages[337117226] = "Error opening database file: @1"; /* nbackup_err_opendb */
        messages[337117227] = "Error in posix_fadvise(@1) for database @2"; /* nbackup_err_fadvice */
        messages[337117228] = "Error creating database file: @1"; /* nbackup_err_createdb */
        messages[337117229] = "Error opening backup file: @1"; /* nbackup_err_openbk */
        messages[337117230] = "Error creating backup file: @1"; /* nbackup_err_createbk */
        messages[337117231] = "Unexpected end of database file @1"; /* nbackup_err_eofdb */
        messages[337117232] = "Database @1 is not in state (@2) to be safely fixed up"; /* nbackup_fixup_wrongstate */
        messages[337117233] = "Database error"; /* nbackup_err_db */
        messages[337117234] = "Username or password is too long"; /* nbackup_userpw_toolong */
        messages[337117235] = "Cannot find record for database \"@1\" backup level @2 in the backup history"; /* nbackup_lostrec_db */
        messages[337117236] = "Internal error. History query returned null SCN or GUID"; /* nbackup_lostguid_db */
        messages[337117237] = "Unexpected end of file when reading header of database file \"@1\" (stage @2)"; /* nbackup_err_eofhdrdb */
        messages[337117238] = "Internal error. Database file is not locked. Flags are @1"; /* nbackup_db_notlock */
        messages[337117239] = "Internal error. Cannot get backup guid clumplet"; /* nbackup_lostguid_bk */
        messages[337117240] = "Internal error. Database page @1 had been changed during backup (page SCN=@2, backup SCN=@3)"; /* nbackup_page_changed */
        messages[337117241] = "Database file size is not a multiple of page size"; /* nbackup_dbsize_inconsistent */
        messages[337117242] = "Level 0 backup is not restored"; /* nbackup_failed_lzbk */
        messages[337117243] = "Unexpected end of file when reading header of backup file: @1"; /* nbackup_err_eofhdrbk */
        messages[337117244] = "Invalid incremental backup file: @1"; /* nbackup_invalid_incbk */
        messages[337117245] = "Unsupported version @1 of incremental backup file: @2"; /* nbackup_unsupvers_incbk */
        messages[337117246] = "Invalid level @1 of incremental backup file: @2, expected @3"; /* nbackup_invlevel_incbk */
        messages[337117247] = "Wrong order of backup files or invalid incremental backup file detected, file: @1"; /* nbackup_wrong_orderbk */
        messages[337117248] = "Unexpected end of backup file: @1"; /* nbackup_err_eofbk */
        messages[337117249] = "Error creating database file: @1 via copying from: @2"; /* nbackup_err_copy */
        messages[337117250] = "Unexpected end of file when reading header of restored database file (stage @1)"; /* nbackup_err_eofhdr_restdb */
        messages[337117251] = "Cannot get backup guid clumplet from L0 backup"; /* nbackup_lostguid_l0bk */
        messages[337117255] = "Wrong parameter @1 for switch -D, need ON or OFF"; /* nbackup_switchd_parameter */
        messages[337117257] = "Terminated due to user request"; /* nbackup_user_stop */
        messages[337117259] = "Too complex decompress command (> @1 arguments)"; /* nbackup_deco_parse */
        messages[337117261] = "Cannot find record for database \"@1\" backup GUID @2 in the backup history"; /* nbackup_lostrec_guid_db */
        messages[337182750] = "conflicting actions \"@1\" and \"@2\" found"; /* trace_conflict_acts */
        messages[337182751] = "action switch not found"; /* trace_act_notfound */
        messages[337182752] = "switch \"@1\" must be set only once"; /* trace_switch_once */
        messages[337182753] = "value for switch \"@1\" is missing"; /* trace_param_val_miss */
        messages[337182754] = "invalid value (\"@1\") for switch \"@2\""; /* trace_param_invalid */
        messages[337182755] = "unknown switch \"@1\" encountered"; /* trace_switch_unknown */
        messages[337182756] = "switch \"@1\" can be used by service only"; /* trace_switch_svc_only */
        messages[337182757] = "switch \"@1\" can be used by interactive user only"; /* trace_switch_user_only */
        messages[337182758] = "mandatory parameter \"@1\" for switch \"@2\" is missing"; /* trace_switch_param_miss */
        messages[337182759] = "parameter \"@1\" is incompatible with action \"@2\""; /* trace_param_act_notcompat */
        messages[337182760] = "mandatory switch \"@1\" is missing"; /* trace_mandatory_switch_miss */

        (() @trusted => messages.rehash())();
    }

protected:
    string[int] messages;

private:
    __gshared static FbMessages _instance;
}

class FbSqlStates
{
nothrow @safe:

public:
    this() pure
    {
        initDefault();
    }

    final string getImpl(int id) const pure
    {
        if (auto e = id in sqlStates)
            return *e;
        else
            return null;
    }

    static FbSqlStates instance() @trusted
    {
        return singleton(_instance, &createInstance);
    }

    static string get(int id)
    {
        return instance().getImpl(id);
    }

protected:
    static FbSqlStates createInstance() pure
    {
        return new FbSqlStates();
    }

    final void initDefault() pure
    {
        sqlStates[335544321] = "22000"; //   1 arith_except
        sqlStates[335544322] = "HY000"; //   2 bad_dbkey
        sqlStates[335544323] = "HY000"; //   3 bad_db_format
        sqlStates[335544324] = "08003"; //   4 bad_db_handle
        sqlStates[335544325] = "HY000"; //   5 bad_dpb_content
        sqlStates[335544326] = "HY000"; //   6 bad_dpb_form
        sqlStates[335544327] = "42000"; //   7 bad_req_handle
        sqlStates[335544328] = "42000"; //   8 bad_segstr_handle
        sqlStates[335544329] = "42000"; //   9 bad_segstr_id
        sqlStates[335544330] = "HY000"; //  10 bad_tpb_content
        sqlStates[335544331] = "HY000"; //  11 bad_tpb_form
        sqlStates[335544332] = "08003"; //  12 bad_trans_handle
        sqlStates[335544333] = "XX000"; //  13 bug_check
        sqlStates[335544334] = "22018"; //  14 convert_error
        sqlStates[335544335] = "XX001"; //  15 db_corrupt
        sqlStates[335544336] = "40001"; //  16 deadlock
        sqlStates[335544337] = "HY000"; //  17 excess_trans
        sqlStates[335544338] = "01000"; //  18 from_no_match
        sqlStates[335544339] = "HY000"; //  19 infinap
        sqlStates[335544340] = "HY000"; //  20 infona
        sqlStates[335544341] = "HY000"; //  21 infunk
        sqlStates[335544342] = "27000"; //  22 integ_fail
        sqlStates[335544343] = "HY000"; //  23 invalid_blr
        sqlStates[335544344] = "08001"; //  24 io_error
        sqlStates[335544345] = "40001"; //  25 lock_conflict
        sqlStates[335544346] = "XX001"; //  26 metadata_corrupt
        sqlStates[335544347] = "23000"; //  27 not_valid
        sqlStates[335544348] = "22000"; //  28 no_cur_rec
        sqlStates[335544349] = "23000"; //  29 no_dup
        sqlStates[335544350] = "HY000"; //  30 no_finish
        sqlStates[335544351] = "42000"; //  31 no_meta_update
        sqlStates[335544352] = "28000"; //  32 no_priv
        sqlStates[335544353] = "HY000"; //  33 no_recon
        sqlStates[335544354] = "01000"; //  34 no_record
        sqlStates[335544355] = "HY000"; //  35 no_segstr_close
        sqlStates[335544356] = "HY000"; //  36 obsolete_metadata
        sqlStates[335544357] = "01002"; //  37 open_trans
        sqlStates[335544358] = "HY000"; //  38 port_len
        sqlStates[335544359] = "42000"; //  39 read_only_field
        sqlStates[335544360] = "42000"; //  40 read_only_rel
        sqlStates[335544361] = "42000"; //  41 read_only_trans
        sqlStates[335544362] = "42000"; //  42 read_only_view
        sqlStates[335544363] = "25000"; //  43 req_no_trans
        sqlStates[335544364] = "HY000"; //  44 req_sync
        sqlStates[335544365] = "HY000"; //  45 req_wrong_db
        sqlStates[335544366] = "01000"; //  46 segment
        sqlStates[335544367] = "01000"; //  47 segstr_eof
        sqlStates[335544368] = "HY000"; //  48 segstr_no_op
        sqlStates[335544369] = "HY000"; //  49 segstr_no_read
        sqlStates[335544370] = "HY000"; //  50 segstr_no_trans
        sqlStates[335544371] = "HY000"; //  51 segstr_no_write
        sqlStates[335544372] = "HY000"; //  52 segstr_wrong_db
        sqlStates[335544373] = "HY000"; //  53 sys_request
        sqlStates[335544374] = "HY109"; //  54 stream_eof
        sqlStates[335544375] = "08001"; //  55 unavailable
        sqlStates[335544376] = "HY000"; //  56 unres_rel
        sqlStates[335544377] = "HY000"; //  57 uns_ext
        sqlStates[335544378] = "0A000"; //  58 wish_list
        sqlStates[335544379] = "HY000"; //  59 wrong_ods
        sqlStates[335544380] = "07002"; //  60 wronumarg
        sqlStates[335544381] = "54000"; //  61 imp_exc
        sqlStates[335544382] = "HY000"; //  62 random
        sqlStates[335544383] = "HY000"; //  63 fatal_conflict
        sqlStates[335544384] = "XX000"; //  64 badblk
        sqlStates[335544385] = "XX000"; //  65 invpoolcl
        sqlStates[335544386] = "HY000"; //  66 nopoolids
        sqlStates[335544387] = "XX000"; //  67 relbadblk
        sqlStates[335544388] = "54000"; //  68 blktoobig
        sqlStates[335544389] = "HY001"; //  69 bufexh
        sqlStates[335544390] = "HY000"; //  70 syntaxerr
        sqlStates[335544391] = "HY000"; //  71 bufinuse
        sqlStates[335544392] = "XX000"; //  72 bdbincon
        sqlStates[335544393] = "HY000"; //  73 reqinuse
        sqlStates[335544394] = "HY000"; //  74 badodsver
        sqlStates[335544395] = "42S02"; //  75 relnotdef
        sqlStates[335544396] = "42S22"; //  76 fldnotdef
        sqlStates[335544397] = "XX000"; //  77 dirtypage
        sqlStates[335544398] = "XX000"; //  78 waifortra
        sqlStates[335544399] = "XX000"; //  79 doubleloc
        sqlStates[335544400] = "XX000"; //  80 nodnotfnd
        sqlStates[335544401] = "XX000"; //  81 dupnodfnd
        sqlStates[335544402] = "XX000"; //  82 locnotmar
        sqlStates[335544403] = "42000"; //  83 badpagtyp
        sqlStates[335544404] = "XX000"; //  84 corrupt
        sqlStates[335544405] = "42000"; //  85 badpage
        sqlStates[335544406] = "XX002"; //  86 badindex
        sqlStates[335544407] = "HY000"; //  87 dbbnotzer
        sqlStates[335544408] = "25000"; //  88 tranotzer
        sqlStates[335544409] = "25000"; //  89 trareqmis
        sqlStates[335544410] = "HY000"; //  90 badhndcnt
        sqlStates[335544411] = "HY000"; //  91 wrotpbver
        sqlStates[335544412] = "HY000"; //  92 wroblrver
        sqlStates[335544413] = "HY000"; //  93 wrodpbver
        sqlStates[335544414] = "42000"; //  94 blobnotsup
        sqlStates[335544415] = "XX001"; //  95 badrelation
        sqlStates[335544416] = "XX000"; //  96 nodetach
        sqlStates[335544417] = "XX000"; //  97 notremote
        sqlStates[335544418] = "25000"; //  98 trainlim
        sqlStates[335544419] = "25000"; //  99 notinlim
        sqlStates[335544420] = "25000"; // 100 traoutsta
        sqlStates[335544421] = "08004"; // 101 connect_reject
        sqlStates[335544422] = "XX000"; // 102 dbfile
        sqlStates[335544423] = "XX000"; // 103 orphan
        sqlStates[335544424] = "HY000"; // 104 no_lock_mgr
        sqlStates[335544425] = "HY000"; // 105 ctxinuse
        sqlStates[335544426] = "HY000"; // 106 ctxnotdef
        sqlStates[335544427] = "42000"; // 107 datnotsup
        sqlStates[335544428] = "HY000"; // 108 badmsgnum
        sqlStates[335544429] = "HY000"; // 109 badparnum
        sqlStates[335544430] = "HY001"; // 110 virmemexh
        sqlStates[335544431] = "HY000"; // 111 blocking_signal
        sqlStates[335544432] = "40001"; // 112 lockmanerr
        sqlStates[335544433] = "HY000"; // 113 journerr
        sqlStates[335544434] = "42000"; // 114 keytoobig
        sqlStates[335544435] = "HY000"; // 115 nullsegkey
        sqlStates[335544436] = "00000"; // 116 sqlerr
        sqlStates[335544437] = "HY000"; // 117 wrodynver
        sqlStates[335544438] = "39000"; // 118 funnotdef
        sqlStates[335544439] = "39000"; // 119 funmismat
        sqlStates[335544440] = "22001"; // 120 bad_msg_vec
        sqlStates[335544441] = "08007"; // 121 bad_detach
        sqlStates[335544442] = "HY000"; // 122 noargacc_read
        sqlStates[335544443] = "HY000"; // 123 noargacc_write
        sqlStates[335544444] = "42000"; // 124 read_only
        sqlStates[335544445] = "42000"; // 125 ext_err
        sqlStates[335544446] = "42000"; // 126 non_updatable
        sqlStates[335544447] = "25S02"; // 127 no_rollback
        sqlStates[335544448] = "HY000"; // 128 bad_sec_info
        sqlStates[335544449] = "28000"; // 129 invalid_sec_info
        sqlStates[335544450] = "HY000"; // 130 misc_interpreted
        sqlStates[335544451] = "40001"; // 131 update_conflict
        sqlStates[335544452] = "HY000"; // 132 unlicensed
        sqlStates[335544453] = "42000"; // 133 obj_in_use
        sqlStates[335544454] = "HY000"; // 134 nofilter
        sqlStates[335544455] = "00000"; // 135 shadow_accessed
        sqlStates[335544456] = "HY000"; // 136 invalid_sdl
        sqlStates[335544457] = "42000"; // 137 out_of_bounds
        sqlStates[335544458] = "42000"; // 138 invalid_dimension
        sqlStates[335544459] = "HY000"; // 139 rec_in_limbo
        sqlStates[335544460] = "HY000"; // 140 shadow_missing
        sqlStates[335544461] = "HY000"; // 141 cant_validate
        sqlStates[335544462] = "HY000"; // 142 cant_start_journal
        sqlStates[335544463] = "42000"; // 143 gennotdef
        sqlStates[335544464] = "HY000"; // 144 cant_start_logging
        sqlStates[335544465] = "42000"; // 145 bad_segstr_type
        sqlStates[335544466] = "23000"; // 146 foreign_key
        sqlStates[335544467] = "HY000"; // 147 high_minor
        sqlStates[335544468] = "00000"; // 148 tra_state
        sqlStates[335544469] = "25000"; // 149 trans_invalid
        sqlStates[335544470] = "HY000"; // 150 buf_invalid
        sqlStates[335544471] = "42S12"; // 151 indexnotdefined
        sqlStates[335544472] = "28000"; // 152 login
        sqlStates[335544473] = "HY111"; // 153 invalid_bookmark
        sqlStates[335544474] = "HY000"; // 154 bad_lock_level
        sqlStates[335544475] = "40001"; // 155 relation_lock
        sqlStates[335544476] = "40001"; // 156 record_lock
        sqlStates[335544477] = "54000"; // 157 max_idx
        sqlStates[335544478] = "HY000"; // 158 jrn_enable
        sqlStates[335544479] = "HY000"; // 159 old_failure
        sqlStates[335544480] = "HY000"; // 160 old_in_progress
        sqlStates[335544481] = "HY000"; // 161 old_no_space
        sqlStates[335544482] = "HY000"; // 162 no_wal_no_jrn
        sqlStates[335544483] = "HY000"; // 163 num_old_files
        sqlStates[335544484] = "HY000"; // 164 wal_file_open
        sqlStates[335544485] = "26000"; // 165 bad_stmt_handle
        sqlStates[335544486] = "HY000"; // 166 wal_failure
        sqlStates[335544487] = "HY000"; // 167 walw_err
        sqlStates[335544488] = "HY000"; // 168 logh_small
        sqlStates[335544489] = "HY000"; // 169 logh_inv_version
        sqlStates[335544490] = "HY000"; // 170 logh_open_flag
        sqlStates[335544491] = "HY000"; // 171 logh_open_flag2
        sqlStates[335544492] = "HY000"; // 172 logh_diff_dbname
        sqlStates[335544493] = "HY000"; // 173 logf_unexpected_eof
        sqlStates[335544494] = "HY000"; // 174 logr_incomplete
        sqlStates[335544495] = "HY000"; // 175 logr_header_small
        sqlStates[335544496] = "HY000"; // 176 logb_small
        sqlStates[335544497] = "HY000"; // 177 wal_illegal_attach
        sqlStates[335544498] = "HY000"; // 178 wal_invalid_wpb
        sqlStates[335544499] = "HY000"; // 179 wal_err_rollover
        sqlStates[335544500] = "HY000"; // 180 no_wal
        sqlStates[335544501] = "HY000"; // 181 drop_wal
        sqlStates[335544502] = "HY000"; // 182 stream_not_defined
        sqlStates[335544503] = "HY000"; // 183 wal_subsys_error
        sqlStates[335544504] = "XX000"; // 184 wal_subsys_corrupt
        sqlStates[335544505] = "HY000"; // 185 no_archive
        sqlStates[335544506] = "HY000"; // 186 shutinprog
        sqlStates[335544507] = "42000"; // 187 range_in_use
        sqlStates[335544508] = "42000"; // 188 range_not_found
        sqlStates[335544509] = "2C000"; // 189 charset_not_found
        sqlStates[335544510] = "40001"; // 190 lock_timeout
        sqlStates[335544511] = "42000"; // 191 prcnotdef
        sqlStates[335544512] = "07001"; // 192 prcmismat
        sqlStates[335544513] = "XX000"; // 193 wal_bugcheck
        sqlStates[335544514] = "HY000"; // 194 wal_cant_expand
        sqlStates[335544515] = "HY000"; // 195 codnotdef
        sqlStates[335544516] = "HY000"; // 196 xcpnotdef
        sqlStates[335544517] = "HY000"; // 197 except
        sqlStates[335544518] = "HY013"; // 198 cache_restart
        sqlStates[335544519] = "HY000"; // 199 bad_lock_handle
        sqlStates[335544520] = "HY000"; // 200 jrn_present
        sqlStates[335544521] = "HY000"; // 201 wal_err_rollover2
        sqlStates[335544522] = "HY000"; // 202 wal_err_logwrite
        sqlStates[335544523] = "HY000"; // 203 wal_err_jrn_comm
        sqlStates[335544524] = "HY000"; // 204 wal_err_expansion
        sqlStates[335544525] = "HY000"; // 205 wal_err_setup
        sqlStates[335544526] = "HY000"; // 206 wal_err_ww_sync
        sqlStates[335544527] = "HY000"; // 207 wal_err_ww_start
        sqlStates[335544528] = "HY000"; // 208 shutdown
        sqlStates[335544529] = "28000"; // 209 existing_priv_mod
        sqlStates[335544530] = "42000"; // 210 primary_key_ref
        sqlStates[335544531] = "42000"; // 211 primary_key_notnull
        sqlStates[335544532] = "42000"; // 212 ref_cnstrnt_notfound
        sqlStates[335544533] = "42000"; // 213 foreign_key_notfound
        sqlStates[335544534] = "42000"; // 214 ref_cnstrnt_update
        sqlStates[335544535] = "44000"; // 215 check_cnstrnt_update
        sqlStates[335544536] = "44000"; // 216 check_cnstrnt_del
        sqlStates[335544537] = "42000"; // 217 integ_index_seg_del
        sqlStates[335544538] = "42000"; // 218 integ_index_seg_mod
        sqlStates[335544539] = "42000"; // 219 integ_index_del
        sqlStates[335544540] = "42000"; // 220 integ_index_mod
        sqlStates[335544541] = "44000"; // 221 check_trig_del
        sqlStates[335544542] = "44000"; // 222 check_trig_update
        sqlStates[335544543] = "23000"; // 223 cnstrnt_fld_del
        sqlStates[335544544] = "23000"; // 224 cnstrnt_fld_rename
        sqlStates[335544545] = "42000"; // 225 rel_cnstrnt_update
        sqlStates[335544546] = "42000"; // 226 constaint_on_view
        sqlStates[335544547] = "42000"; // 227 invld_cnstrnt_type
        sqlStates[335544548] = "42S11"; // 228 primary_key_exists
        sqlStates[335544549] = "HY000"; // 229 systrig_update
        sqlStates[335544550] = "28000"; // 230 not_rel_owner
        sqlStates[335544551] = "01007"; // 231 grant_obj_notfound
        sqlStates[335544552] = "01007"; // 232 grant_fld_notfound
        sqlStates[335544553] = "01007"; // 233 grant_nopriv
        sqlStates[335544554] = "28000"; // 234 nonsql_security_rel
        sqlStates[335544555] = "28000"; // 235 nonsql_security_fld
        sqlStates[335544556] = "HY000"; // 236 wal_cache_err
        sqlStates[335544557] = "HY000"; // 237 shutfail
        sqlStates[335544558] = "23000"; // 238 check_constraint
        sqlStates[335544559] = "HY000"; // 239 bad_svc_handle
        sqlStates[335544560] = "HY000"; // 240 shutwarn
        sqlStates[335544561] = "HY000"; // 241 wrospbver
        sqlStates[335544562] = "42000"; // 242 bad_spb_form
        sqlStates[335544563] = "HY000"; // 243 svcnotdef
        sqlStates[335544564] = "HY000"; // 244 no_jrn
        sqlStates[335544565] = "22018"; // 245 transliteration_failed
        sqlStates[335544566] = "HY000"; // 246 start_cm_for_wal
        sqlStates[335544567] = "HY000"; // 247 wal_ovflow_log_required
        sqlStates[335544568] = "42000"; // 248 text_subtype
        sqlStates[335544569] = "42000"; // 249 dsql_error
        sqlStates[335544570] = "42000"; // 250 dsql_command_err
        sqlStates[335544571] = "HY004"; // 251 dsql_constant_err
        sqlStates[335544572] = "HY015"; // 252 dsql_cursor_err
        sqlStates[335544573] = "HY004"; // 253 dsql_datatype_err
        sqlStates[335544574] = "34000"; // 254 dsql_decl_err
        sqlStates[335544575] = "24000"; // 255 dsql_cursor_update_err
        sqlStates[335544576] = "24000"; // 256 dsql_cursor_open_err
        sqlStates[335544577] = "24000"; // 257 dsql_cursor_close_err
        sqlStates[335544578] = "42S22"; // 258 dsql_field_err
        sqlStates[335544579] = "XX000"; // 259 dsql_internal_err
        sqlStates[335544580] = "42S02"; // 260 dsql_relation_err
        sqlStates[335544581] = "42000"; // 261 dsql_procedure_err
        sqlStates[335544582] = "42000"; // 262 dsql_request_err
        sqlStates[335544583] = "07002"; // 263 dsql_sqlda_err
        sqlStates[335544584] = "21S01"; // 264 dsql_var_count_err
        sqlStates[335544585] = "HY000"; // 265 dsql_stmt_handle
        sqlStates[335544586] = "39000"; // 266 dsql_function_err
        sqlStates[335544587] = "42000"; // 267 dsql_blob_err
        sqlStates[335544588] = "22021"; // 268 collation_not_found
        sqlStates[335544589] = "22021"; // 269 collation_not_for_charset
        sqlStates[335544590] = "42000"; // 270 dsql_dup_option
        sqlStates[335544591] = "25000"; // 271 dsql_tran_err
        sqlStates[335544592] = "HY000"; // 272 dsql_invalid_array
        sqlStates[335544593] = "54000"; // 273 dsql_max_arr_dim_exceeded
        sqlStates[335544594] = "42000"; // 274 dsql_arr_range_error
        sqlStates[335544595] = "HY000"; // 275 dsql_trigger_err
        sqlStates[335544596] = "42000"; // 276 dsql_subselect_err
        sqlStates[335544597] = "42000"; // 277 dsql_crdb_prepare_err
        sqlStates[335544598] = "42000"; // 278 specify_field_err
        sqlStates[335544599] = "07002"; // 279 num_field_err
        sqlStates[335544600] = "42000"; // 280 col_name_err
        sqlStates[335544601] = "42000"; // 281 where_err
        sqlStates[335544602] = "42000"; // 282 table_view_err
        sqlStates[335544603] = "42000"; // 283 distinct_err
        sqlStates[335544604] = "42000"; // 284 key_field_count_err
        sqlStates[335544605] = "42000"; // 285 subquery_err
        sqlStates[335544606] = "42000"; // 286 expression_eval_err
        sqlStates[335544607] = "HY000"; // 287 node_err
        sqlStates[335544608] = "42000"; // 288 command_end_err
        sqlStates[335544609] = "42000"; // 289 index_name
        sqlStates[335544610] = "22000"; // 290 exception_name
        sqlStates[335544611] = "42000"; // 291 field_name
        sqlStates[335544612] = "42000"; // 292 token_err
        sqlStates[335544613] = "42000"; // 293 union_err
        sqlStates[335544614] = "42000"; // 294 dsql_construct_err
        sqlStates[335544615] = "42000"; // 295 field_aggregate_err
        sqlStates[335544616] = "42S22"; // 296 field_ref_err
        sqlStates[335544617] = "42000"; // 297 order_by_err
        sqlStates[335544618] = "HY000"; // 298 return_mode_err
        sqlStates[335544619] = "38000"; // 299 extern_func_err
        sqlStates[335544620] = "08001"; // 300 alias_conflict_err
        sqlStates[335544621] = "42000"; // 301 procedure_conflict_error
        sqlStates[335544622] = "42000"; // 302 relation_conflict_err
        sqlStates[335544623] = "42000"; // 303 dsql_domain_err
        sqlStates[335544624] = "42000"; // 304 idx_seg_err
        sqlStates[335544625] = "HY000"; // 305 node_name_err
        sqlStates[335544626] = "00000"; // 306 table_name
        sqlStates[335544627] = "42000"; // 307 proc_name
        sqlStates[335544628] = "42000"; // 308 idx_create_err
        sqlStates[335544629] = "HY000"; // 309 wal_shadow_err
        sqlStates[335544630] = "42000"; // 310 dependency
        sqlStates[335544631] = "54011"; // 311 idx_key_err
        sqlStates[335544632] = "42000"; // 312 dsql_file_length_err
        sqlStates[335544633] = "HY000"; // 313 dsql_shadow_number_err
        sqlStates[335544634] = "42000"; // 314 dsql_token_unk_err
        sqlStates[335544635] = "42S02"; // 315 dsql_no_relation_alias
        sqlStates[335544636] = "42000"; // 316 indexname
        sqlStates[335544637] = "HY000"; // 317 no_stream_plan
        sqlStates[335544638] = "HY000"; // 318 stream_twice
        sqlStates[335544639] = "HY000"; // 319 stream_not_found
        sqlStates[335544640] = "22021"; // 320 collation_requires_text
        sqlStates[335544641] = "42000"; // 321 dsql_domain_not_found
        sqlStates[335544642] = "42000"; // 322 index_unused
        sqlStates[335544643] = "42000"; // 323 dsql_self_join
        sqlStates[335544644] = "HY109"; // 324 stream_bof
        sqlStates[335544645] = "HY000"; // 325 stream_crack
        sqlStates[335544646] = "HY000"; // 326 db_or_file_exists
        sqlStates[335544647] = "42000"; // 327 invalid_operator
        sqlStates[335544648] = "HY000"; // 328 conn_lost
        sqlStates[335544649] = "42000"; // 329 bad_checksum
        sqlStates[335544650] = "HY000"; // 330 page_type_err
        sqlStates[335544651] = "42000"; // 331 ext_readonly_err
        sqlStates[335544652] = "21000"; // 332 sing_select_err
        sqlStates[335544653] = "28000"; // 333 psw_attach
        sqlStates[335544654] = "28000"; // 334 psw_start_trans
        sqlStates[335544655] = "42000"; // 335 invalid_direction
        sqlStates[335544656] = "HY000"; // 336 dsql_var_conflict
        sqlStates[335544657] = "HY000"; // 337 dsql_no_blob_array
        sqlStates[335544658] = "42000"; // 338 dsql_base_table
        sqlStates[335544659] = "42000"; // 339 duplicate_base_table
        sqlStates[335544660] = "42000"; // 340 view_alias
        sqlStates[335544661] = "54000"; // 341 index_root_page_full
        sqlStates[335544662] = "42000"; // 342 dsql_blob_type_unknown
        sqlStates[335544663] = "54001"; // 343 req_max_clones_exceeded
        sqlStates[335544664] = "42000"; // 344 dsql_duplicate_spec
        sqlStates[335544665] = "23000"; // 345 unique_key_violation
        sqlStates[335544666] = "HY000"; // 346 srvr_version_too_old
        sqlStates[335544667] = "HY000"; // 347 drdb_completed_with_errs
        sqlStates[335544668] = "42000"; // 348 dsql_procedure_use_err
        sqlStates[335544669] = "07002"; // 349 dsql_count_mismatch
        sqlStates[335544670] = "42000"; // 350 blob_idx_err
        sqlStates[335544671] = "42000"; // 351 array_idx_err
        sqlStates[335544672] = "42000"; // 352 key_field_err
        sqlStates[335544673] = "HY000"; // 353 no_delete
        sqlStates[335544674] = "42000"; // 354 del_last_field
        sqlStates[335544675] = "HY000"; // 355 sort_err
        sqlStates[335544676] = "HY001"; // 356 sort_mem_err
        sqlStates[335544677] = "54000"; // 357 version_err
        sqlStates[335544678] = "HY000"; // 358 inval_key_posn
        sqlStates[335544679] = "HY000"; // 359 no_segments_err
        sqlStates[335544680] = "XX000"; // 360 crrp_data_err
        sqlStates[335544681] = "54000"; // 361 rec_size_err
        sqlStates[335544682] = "42000"; // 362 dsql_field_ref
        sqlStates[335544683] = "54001"; // 363 req_depth_exceeded
        sqlStates[335544684] = "42S22"; // 364 no_field_access
        sqlStates[335544685] = "HY000"; // 365 no_dbkey
        sqlStates[335544686] = "HY000"; // 366 jrn_format_err
        sqlStates[335544687] = "HY000"; // 367 jrn_file_full
        sqlStates[335544688] = "24000"; // 368 dsql_open_cursor_request
        sqlStates[335544689] = "HY000"; // 369 ib_error
        sqlStates[335544690] = "HY013"; // 370 cache_redef
        sqlStates[335544691] = "HY013"; // 371 cache_too_small
        sqlStates[335544692] = "HY000"; // 372 log_redef
        sqlStates[335544693] = "HY000"; // 373 log_too_small
        sqlStates[335544694] = "HY000"; // 374 partition_too_small
        sqlStates[335544695] = "HY000"; // 375 partition_not_supp
        sqlStates[335544696] = "HY000"; // 376 log_length_spec
        sqlStates[335544697] = "HY104"; // 377 precision_err
        sqlStates[335544698] = "HY104"; // 378 scale_nogt
        sqlStates[335544699] = "22003"; // 379 expec_short
        sqlStates[335544700] = "22003"; // 380 expec_long
        sqlStates[335544701] = "22003"; // 381 expec_ushort
        sqlStates[335544702] = "22025"; // 382 escape_invalid
        sqlStates[335544703] = "HY000"; // 383 svcnoexe
        sqlStates[335544704] = "08006"; // 384 net_lookup_err
        sqlStates[335544705] = "HY000"; // 385 service_unknown
        sqlStates[335544706] = "08001"; // 386 host_unknown
        sqlStates[335544707] = "01007"; // 387 grant_nopriv_on_base
        sqlStates[335544708] = "42702"; // 388 dyn_fld_ambiguous
        sqlStates[335544709] = "42000"; // 389 dsql_agg_ref_err
        sqlStates[335544710] = "HY000"; // 390 complex_view
        sqlStates[335544711] = "HY007"; // 391 unprepared_stmt
        sqlStates[335544712] = "42000"; // 392 expec_positive
        sqlStates[335544713] = "HY000"; // 393 dsql_sqlda_value_err
        sqlStates[335544714] = "HY000"; // 394 invalid_array_id
        sqlStates[335544715] = "42000"; // 395 extfile_uns_op
        sqlStates[335544716] = "HY000"; // 396 svc_in_use
        sqlStates[335544717] = "HY013"; // 397 err_stack_limit
        sqlStates[335544718] = "42000"; // 398 invalid_key
        sqlStates[335544719] = "08006"; // 399 net_init_error
        sqlStates[335544720] = "HY000"; // 400 loadlib_failure
        sqlStates[335544721] = "08006"; // 401 network_error
        sqlStates[335544722] = "08006"; // 402 net_connect_err
        sqlStates[335544723] = "08006"; // 403 net_connect_listen_err
        sqlStates[335544724] = "08006"; // 404 net_event_connect_err
        sqlStates[335544725] = "08006"; // 405 net_event_listen_err
        sqlStates[335544726] = "08006"; // 406 net_read_err
        sqlStates[335544727] = "08006"; // 407 net_write_err
        sqlStates[335544728] = "42000"; // 408 integ_index_deactivate
        sqlStates[335544729] = "42000"; // 409 integ_deactivate_primary
        sqlStates[335544730] = "HY000"; // 410 cse_not_supported
        sqlStates[335544731] = "HY000"; // 411 tra_must_sweep
        sqlStates[335544732] = "HY000"; // 412 unsupported_network_drive
        sqlStates[335544733] = "08001"; // 413 io_create_err
        sqlStates[335544734] = "08001"; // 414 io_open_err
        sqlStates[335544735] = "HY000"; // 415 io_close_err
        sqlStates[335544736] = "HY000"; // 416 io_read_err
        sqlStates[335544737] = "HY000"; // 417 io_write_err
        sqlStates[335544738] = "HY000"; // 418 io_delete_err
        sqlStates[335544739] = "HY000"; // 419 io_access_err
        sqlStates[335544740] = "38000"; // 420 udf_exception
        sqlStates[335544741] = "08006"; // 421 lost_db_connection
        sqlStates[335544742] = "28000"; // 422 no_write_user_priv
        sqlStates[335544743] = "42000"; // 423 token_too_long
        sqlStates[335544744] = "08001"; // 424 max_att_exceeded
        sqlStates[335544745] = "28000"; // 425 login_same_as_role_name
        sqlStates[335544746] = "42000"; // 426 reftable_requires_pk
        sqlStates[335544747] = "28000"; // 427 usrname_too_long
        sqlStates[335544748] = "28000"; // 428 password_too_long
        sqlStates[335544749] = "28000"; // 429 usrname_required
        sqlStates[335544750] = "28000"; // 430 password_required
        sqlStates[335544751] = "42000"; // 431 bad_protocol
        sqlStates[335544752] = "28000"; // 432 dup_usrname_found
        sqlStates[335544753] = "28000"; // 433 usrname_not_found
        sqlStates[335544754] = "28000"; // 434 error_adding_sec_record
        sqlStates[335544755] = "28000"; // 435 error_modifying_sec_record
        sqlStates[335544756] = "28000"; // 436 error_deleting_sec_record
        sqlStates[335544757] = "28000"; // 437 error_updating_sec_db
        sqlStates[335544758] = "HY000"; // 438 sort_rec_size_err
        sqlStates[335544759] = "42000"; // 439 bad_default_value
        sqlStates[335544760] = "42000"; // 440 invalid_clause
        sqlStates[335544761] = "HY000"; // 441 too_many_handles
        sqlStates[335544762] = "HY000"; // 442 optimizer_blk_exc
        sqlStates[335544763] = "42000"; // 443 invalid_string_constant
        sqlStates[335544764] = "HY000"; // 444 transitional_date
        sqlStates[335544765] = "42000"; // 445 read_only_database
        sqlStates[335544766] = "HY000"; // 446 must_be_dialect_2_and_up
        sqlStates[335544767] = "HY000"; // 447 blob_filter_exception
        sqlStates[335544768] = "HY000"; // 448 exception_access_violation
        sqlStates[335544769] = "22000"; // 449 exception_datatype_missalignment
        sqlStates[335544770] = "22000"; // 450 exception_array_bounds_exceeded
        sqlStates[335544771] = "22000"; // 451 exception_float_denormal_operand
        sqlStates[335544772] = "22012"; // 452 exception_float_divide_by_zero
        sqlStates[335544773] = "22000"; // 453 exception_float_inexact_result
        sqlStates[335544774] = "22000"; // 454 exception_float_invalid_operand
        sqlStates[335544775] = "22003"; // 455 exception_float_overflow
        sqlStates[335544776] = "22000"; // 456 exception_float_stack_check
        sqlStates[335544777] = "22003"; // 457 exception_float_underflow
        sqlStates[335544778] = "22012"; // 458 exception_integer_divide_by_zero
        sqlStates[335544779] = "22003"; // 459 exception_integer_overflow
        sqlStates[335544780] = "HY000"; // 460 exception_unknown
        sqlStates[335544781] = "HY001"; // 461 exception_stack_overflow
        sqlStates[335544782] = "HY000"; // 462 exception_sigsegv
        sqlStates[335544783] = "HY000"; // 463 exception_sigill
        sqlStates[335544784] = "HY000"; // 464 exception_sigbus
        sqlStates[335544785] = "HY000"; // 465 exception_sigfpe
        sqlStates[335544786] = "42000"; // 466 ext_file_delete
        sqlStates[335544787] = "42000"; // 467 ext_file_modify
        sqlStates[335544788] = "28000"; // 468 adm_task_denied
        sqlStates[335544789] = "42000"; // 469 extract_input_mismatch
        sqlStates[335544790] = "28000"; // 470 insufficient_svc_privileges
        sqlStates[335544791] = "HY000"; // 471 file_in_use
        sqlStates[335544792] = "HY000"; // 472 service_att_err
        sqlStates[335544793] = "42000"; // 473 ddl_not_allowed_by_db_sql_dial
        sqlStates[335544794] = "HY008"; // 474 cancelled
        sqlStates[335544795] = "HY000"; // 475 unexp_spb_form
        sqlStates[335544796] = "HY000"; // 476 sql_dialect_datatype_unsupport
        sqlStates[335544797] = "HY000"; // 477 svcnouser
        sqlStates[335544798] = "42000"; // 478 depend_on_uncommitted_rel
        sqlStates[335544799] = "HY000"; // 479 svc_name_missing
        sqlStates[335544800] = "54001"; // 480 too_many_contexts
        sqlStates[335544801] = "22008"; // 481 datype_notsup
        sqlStates[335544802] = "01000"; // 482 dialect_reset_warning
        sqlStates[335544803] = "HY000"; // 483 dialect_not_changed
        sqlStates[335544804] = "HY000"; // 484 database_create_failed
        sqlStates[335544805] = "42000"; // 485 inv_dialect_specified
        sqlStates[335544806] = "00000"; // 486 valid_db_dialects
        sqlStates[335544807] = "00000"; // 487 sqlwarn
        sqlStates[335544808] = "HY000"; // 488 dtype_renamed
        sqlStates[335544809] = "38000"; // 489 extern_func_dir_error
        sqlStates[335544810] = "22008"; // 490 date_range_exceeded
        sqlStates[335544811] = "42000"; // 491 inv_client_dialect_specified
        sqlStates[335544812] = "00000"; // 492 valid_client_dialects
        sqlStates[335544813] = "HY004"; // 493 optimizer_between_err
        sqlStates[335544814] = "HY000"; // 494 service_not_supported
        sqlStates[335544815] = "00000"; // 495 generator_name
        sqlStates[335544816] = "38000"; // 496 udf_name
        sqlStates[335544817] = "HY000"; // 497 bad_limit_param
        sqlStates[335544818] = "42000"; // 498 bad_skip_param
        sqlStates[335544819] = "54000"; // 499 io_32bit_exceeded_err
        sqlStates[335544820] = "3B000"; // 500 invalid_savepoint
        sqlStates[335544821] = "42000"; // 501 dsql_column_pos_err
        sqlStates[335544822] = "42000"; // 502 dsql_agg_where_err
        sqlStates[335544823] = "42000"; // 503 dsql_agg_group_err
        sqlStates[335544824] = "42000"; // 504 dsql_agg_column_err
        sqlStates[335544825] = "42000"; // 505 dsql_agg_having_err
        sqlStates[335544826] = "42000"; // 506 dsql_agg_nested_err
        sqlStates[335544827] = "42000"; // 507 exec_sql_invalid_arg
        sqlStates[335544828] = "42000"; // 508 exec_sql_invalid_req
        sqlStates[335544829] = "42000"; // 509 exec_sql_invalid_var
        sqlStates[335544830] = "42000"; // 510 exec_sql_max_call_exceeded
        sqlStates[335544831] = "28000"; // 511 conf_access_denied
        sqlStates[335544832] = "HY000"; // 512 wrong_backup_state
        sqlStates[335544833] = "HY000"; // 513 wal_backup_err
        sqlStates[335544834] = "24000"; // 514 cursor_not_open
        sqlStates[335544835] = "08007"; // 515 bad_shutdown_mode
        sqlStates[335544836] = "HY000"; // 516 concat_overflow
        sqlStates[335544837] = "22011"; // 517 bad_substring_offset
        sqlStates[335544838] = "42000"; // 518 foreign_key_target_doesnt_exist
        sqlStates[335544839] = "42000"; // 519 foreign_key_references_present
        sqlStates[335544840] = "HY000"; // 520 no_update
        sqlStates[335544841] = "24000"; // 521 cursor_already_open
        sqlStates[335544842] = "00000"; // 522 stack_trace
        sqlStates[335544843] = "HY000"; // 523 ctx_var_not_found
        sqlStates[335544844] = "HY000"; // 524 ctx_namespace_invalid
        sqlStates[335544845] = "54000"; // 525 ctx_too_big
        sqlStates[335544846] = "HY000"; // 526 ctx_bad_argument
        sqlStates[335544847] = "42000"; // 527 identifier_too_long
        sqlStates[335544848] = "HY000"; // 528 except2
        sqlStates[335544849] = "22000"; // 529 malformed_string
        sqlStates[335544850] = "07002"; // 530 prc_out_param_mismatch
        sqlStates[335544851] = "42000"; // 531 command_end_err2
        sqlStates[335544852] = "42000"; // 532 partner_idx_incompat_type
        sqlStates[335544853] = "22011"; // 533 bad_substring_length
        sqlStates[335544854] = "2C000"; // 534 charset_not_installed
        sqlStates[335544855] = "22021"; // 535 collation_not_installed
        sqlStates[335544856] = "08003"; // 536 att_shutdown
        sqlStates[335544857] = "54000"; // 537 blobtoobig
        sqlStates[335544858] = "42000"; // 538 must_have_phys_field
        sqlStates[335544859] = "22007"; // 539 invalid_time_precision
        sqlStates[335544860] = "HY000"; // 540 blob_convert_error
        sqlStates[335544861] = "22000"; // 541 array_convert_error
        sqlStates[335544862] = "40001"; // 542 record_lock_not_supp
        sqlStates[335544863] = "42000"; // 543 partner_idx_not_found
        sqlStates[335544864] = "54000"; // 544 tra_num_exc
        sqlStates[335544865] = "42000"; // 545 field_disappeared
        sqlStates[335544866] = "HY000"; // 546 met_wrong_gtt_scope
        sqlStates[335544867] = "HY000"; // 547 subtype_for_internal_use
        sqlStates[335544868] = "42000"; // 548 illegal_prc_type
        sqlStates[335544869] = "42000"; // 549 invalid_sort_datatype
        sqlStates[335544870] = "00000"; // 550 collation_name
        sqlStates[335544871] = "00000"; // 551 domain_name
        sqlStates[335544872] = "42000"; // 552 domnotdef
        sqlStates[335544873] = "54000"; // 553 array_max_dimensions
        sqlStates[335544874] = "54000"; // 554 max_db_per_trans_allowed
        sqlStates[335544875] = "00000"; // 555 bad_debug_format
        sqlStates[335544876] = "2F000"; // 556 bad_proc_BLR
        sqlStates[335544877] = "54000"; // 557 key_too_big
        sqlStates[335544878] = "HY000"; // 558 concurrent_transaction
        sqlStates[335544879] = "42000"; // 559 not_valid_for_var
        sqlStates[335544880] = "42000"; // 560 not_valid_for
        sqlStates[335544881] = "HY000"; // 561 need_difference
        sqlStates[335544882] = "HY000"; // 562 long_login
        sqlStates[335544883] = "42S22"; // 563 fldnotdef2
        sqlStates[335544884] = "42000"; // 564 invalid_similar_pattern
        sqlStates[335544885] = "HY000"; // 565 bad_teb_form
        sqlStates[335544886] = "HY000"; // 566 tpb_multiple_txn_isolation
        sqlStates[335544887] = "HY000"; // 567 tpb_reserv_before_table
        sqlStates[335544888] = "HY000"; // 568 tpb_multiple_spec
        sqlStates[335544889] = "HY000"; // 569 tpb_option_without_rc
        sqlStates[335544890] = "HY000"; // 570 tpb_conflicting_options
        sqlStates[335544891] = "HY000"; // 571 tpb_reserv_missing_tlen
        sqlStates[335544892] = "HY000"; // 572 tpb_reserv_long_tlen
        sqlStates[335544893] = "HY000"; // 573 tpb_reserv_missing_tname
        sqlStates[335544894] = "HY000"; // 574 tpb_reserv_corrup_tlen
        sqlStates[335544895] = "HY000"; // 575 tpb_reserv_null_tlen
        sqlStates[335544896] = "HY000"; // 576 tpb_reserv_relnotfound
        sqlStates[335544897] = "HY000"; // 577 tpb_reserv_baserelnotfound
        sqlStates[335544898] = "HY000"; // 578 tpb_missing_len
        sqlStates[335544899] = "HY000"; // 579 tpb_missing_value
        sqlStates[335544900] = "HY000"; // 580 tpb_corrupt_len
        sqlStates[335544901] = "HY000"; // 581 tpb_null_len
        sqlStates[335544902] = "HY000"; // 582 tpb_overflow_len
        sqlStates[335544903] = "HY000"; // 583 tpb_invalid_value
        sqlStates[335544904] = "HY000"; // 584 tpb_reserv_stronger_wng
        sqlStates[335544905] = "HY000"; // 585 tpb_reserv_stronger
        sqlStates[335544906] = "HY000"; // 586 tpb_reserv_max_recursion
        sqlStates[335544907] = "HY000"; // 587 tpb_reserv_virtualtbl
        sqlStates[335544908] = "HY000"; // 588 tpb_reserv_systbl
        sqlStates[335544909] = "HY000"; // 589 tpb_reserv_temptbl
        sqlStates[335544910] = "HY000"; // 590 tpb_readtxn_after_writelock
        sqlStates[335544911] = "HY000"; // 591 tpb_writelock_after_readtxn
        sqlStates[335544912] = "22008"; // 592 time_range_exceeded
        sqlStates[335544913] = "22008"; // 593 datetime_range_exceeded
        sqlStates[335544914] = "22001"; // 594 string_truncation
        sqlStates[335544915] = "22001"; // 595 blob_truncation
        sqlStates[335544916] = "22003"; // 596 numeric_out_of_range
        sqlStates[335544917] = "HYT00"; // 597 shutdown_timeout
        sqlStates[335544918] = "HY010"; // 598 att_handle_busy
        sqlStates[335544919] = "39000"; // 599 bad_udf_freeit
        sqlStates[335544920] = "42000"; // 600 eds_provider_not_found
        sqlStates[335544921] = "42000"; // 601 eds_connection
        sqlStates[335544922] = "42000"; // 602 eds_preprocess
        sqlStates[335544923] = "42000"; // 603 eds_stmt_expected
        sqlStates[335544924] = "42000"; // 604 eds_prm_name_expected
        sqlStates[335544925] = "42000"; // 605 eds_unclosed_comment
        sqlStates[335544926] = "42000"; // 606 eds_statement
        sqlStates[335544927] = "42000"; // 607 eds_input_prm_mismatch
        sqlStates[335544928] = "42000"; // 608 eds_output_prm_mismatch
        sqlStates[335544929] = "42000"; // 609 eds_input_prm_not_set
        sqlStates[335544930] = "HY000"; // 610 too_big_blr
        sqlStates[335544931] = "HY001"; // 611 montabexh
        sqlStates[335544932] = "39000"; // 612 modnotfound
        sqlStates[335544933] = "HY018"; // 613 nothing_to_cancel
        sqlStates[335544934] = "39000"; // 614 ibutil_not_loaded
        sqlStates[335544935] = "42000"; // 615 circular_computed
        sqlStates[335544936] = "28000"; // 616 psw_db_error
        sqlStates[335544937] = "42000"; // 617 invalid_type_datetime_op
        sqlStates[335544938] = "42000"; // 618 onlycan_add_timetodate
        sqlStates[335544939] = "42000"; // 619 onlycan_add_datetotime
        sqlStates[335544940] = "42000"; // 620 onlycansub_tstampfromtstamp
        sqlStates[335544941] = "42000"; // 621 onlyoneop_mustbe_tstamp
        sqlStates[335544942] = "42000"; // 622 invalid_extractpart_time
        sqlStates[335544943] = "42000"; // 623 invalid_extractpart_date
        sqlStates[335544944] = "42000"; // 624 invalidarg_extract
        sqlStates[335544945] = "42000"; // 625 sysf_argmustbe_exact
        sqlStates[335544946] = "42000"; // 626 sysf_argmustbe_exact_or_fp
        sqlStates[335544947] = "42000"; // 627 sysf_argviolates_uuidtype
        sqlStates[335544948] = "42000"; // 628 sysf_argviolates_uuidlen
        sqlStates[335544949] = "42000"; // 629 sysf_argviolates_uuidfmt
        sqlStates[335544950] = "42000"; // 630 sysf_argviolates_guidigits
        sqlStates[335544951] = "42000"; // 631 sysf_invalid_addpart_time
        sqlStates[335544952] = "42000"; // 632 sysf_invalid_add_datetime
        sqlStates[335544953] = "42000"; // 633 sysf_invalid_addpart_dtime
        sqlStates[335544954] = "42000"; // 634 sysf_invalid_add_dtime_rc
        sqlStates[335544955] = "42000"; // 635 sysf_invalid_diff_dtime
        sqlStates[335544956] = "42000"; // 636 sysf_invalid_timediff
        sqlStates[335544957] = "42000"; // 637 sysf_invalid_tstamptimediff
        sqlStates[335544958] = "42000"; // 638 sysf_invalid_datetimediff
        sqlStates[335544959] = "42000"; // 639 sysf_invalid_diffpart
        sqlStates[335544960] = "42000"; // 640 sysf_argmustbe_positive
        sqlStates[335544961] = "42000"; // 641 sysf_basemustbe_positive
        sqlStates[335544962] = "42000"; // 642 sysf_argnmustbe_nonneg
        sqlStates[335544963] = "42000"; // 643 sysf_argnmustbe_positive
        sqlStates[335544964] = "42000"; // 644 sysf_invalid_zeropowneg
        sqlStates[335544965] = "42000"; // 645 sysf_invalid_negpowfp
        sqlStates[335544966] = "42000"; // 646 sysf_invalid_scale
        sqlStates[335544967] = "42000"; // 647 sysf_argmustbe_nonneg
        sqlStates[335544968] = "42000"; // 648 sysf_binuuid_mustbe_str
        sqlStates[335544969] = "42000"; // 649 sysf_binuuid_wrongsize
        sqlStates[335544970] = "HY000"; // 650 missing_required_spb
        sqlStates[335544971] = "08006"; // 651 net_server_shutdown
        sqlStates[335544972] = "08001"; // 652 bad_conn_str
        sqlStates[335544973] = "HY000"; // 653 bad_epb_form
        sqlStates[335544974] = "08004"; // 654 no_threads
        sqlStates[335544975] = "08006"; // 655 net_event_connect_timeout
        sqlStates[335544976] = "42000"; // 656 sysf_argmustbe_nonzero
        sqlStates[335544977] = "42000"; // 657 sysf_argmustbe_range_inc1_1
        sqlStates[335544978] = "42000"; // 658 sysf_argmustbe_gteq_one
        sqlStates[335544979] = "42000"; // 659 sysf_argmustbe_range_exc1_1
        sqlStates[335544980] = "HY000"; // 660 internal_rejected_params
        sqlStates[335544981] = "42000"; // 661 sysf_fp_overflow
        sqlStates[335544982] = "39000"; // 662 udf_fp_overflow
        sqlStates[335544983] = "39000"; // 663 udf_fp_nan
        sqlStates[335544984] = "42000"; // 664 instance_conflict
        sqlStates[335544985] = "HY000"; // 665 out_of_temp_space
        sqlStates[335544986] = "42000"; // 666 eds_expl_tran_ctrl
        sqlStates[335544987] = "28000"; // 667 no_trusted_spb
        sqlStates[335544988] = "42000"; // 668 package_name
        sqlStates[335544989] = "22006"; // 669 cannot_make_not_null
        sqlStates[335544990] = "0A000"; // 670 feature_removed
        sqlStates[335544991] = "00000"; // 671 view_name
        sqlStates[335544992] = "08006"; // 672 lock_dir_access
        sqlStates[335544993] = "HY106"; // 673 invalid_fetch_option
        sqlStates[335544994] = "2F000"; // 674 bad_fun_BLR
        sqlStates[335544995] = "2F000"; // 675 func_pack_not_implemented
        sqlStates[335544996] = "2F000"; // 676 proc_pack_not_implemented
        sqlStates[335544997] = "39000"; // 677 eem_func_not_returned
        sqlStates[335544998] = "39000"; // 678 eem_proc_not_returned
        sqlStates[335544999] = "39000"; // 679 eem_trig_not_returned
        sqlStates[335545000] = "39000"; // 680 eem_bad_plugin_ver
        sqlStates[335545001] = "39000"; // 681 eem_engine_notfound
        sqlStates[335545002] = "08002"; // 682 attachment_in_use
        sqlStates[335545003] = "25S02"; // 683 transaction_in_use
        sqlStates[335545004] = "39000"; // 684 pman_cannot_load_plugin
        sqlStates[335545005] = "00000"; // 685 pman_module_notfound
        sqlStates[335545006] = "00000"; // 686 pman_entrypoint_notfound
        sqlStates[335545007] = "00000"; // 687 pman_module_bad
        sqlStates[335545008] = "00000"; // 688 pman_plugin_notfound
        sqlStates[335545009] = "42000"; // 689 sysf_invalid_trig_namespace
        sqlStates[335545010] = "22002"; // 690 unexpected_null
        sqlStates[335545011] = "2200G"; // 691 type_notcompat_blob
        sqlStates[335545012] = "22003"; // 692 invalid_date_val
        sqlStates[335545013] = "22003"; // 693 invalid_time_val
        sqlStates[335545014] = "22003"; // 694 invalid_timestamp_val
        sqlStates[335545015] = "22003"; // 695 invalid_index_val
        sqlStates[335545016] = "00000"; // 696 formatted_exception
        sqlStates[335545017] = "HY018"; // 697 async_active
        sqlStates[335545018] = "42000"; // 698 private_function
        sqlStates[335545019] = "42000"; // 699 private_procedure
        sqlStates[335545020] = "24000"; // 700 request_outdated
        sqlStates[335545021] = "08003"; // 701 bad_events_handle
        sqlStates[335545022] = "XX000"; // 702 cannot_copy_stmt
        sqlStates[335545023] = "22000"; // 703 invalid_boolean_usage
        sqlStates[335545024] = "42000"; // 704 sysf_argscant_both_be_zero
        sqlStates[335545025] = "HY000"; // 705 spb_no_id
        sqlStates[335545026] = "42000"; // 706 ee_blr_mismatch_null
        sqlStates[335545027] = "42000"; // 707 ee_blr_mismatch_length
        sqlStates[335545028] = "42000"; // 708 ss_out_of_bounds
        sqlStates[335545029] = "28000"; // 709 missing_data_structures
        sqlStates[335545030] = "42000"; // 710 protect_sys_tab
        sqlStates[335545031] = "2F000"; // 711 libtommath_generic
        sqlStates[335545032] = "HY000"; // 712 wroblrver2
        sqlStates[335545033] = "28000"; // 713 trunc_limits
        sqlStates[335545034] = "28000"; // 714 info_access
        sqlStates[335545035] = "HY024"; // 715 svc_no_stdin
        sqlStates[335545036] = "28000"; // 716 svc_start_failed
        sqlStates[335545037] = "HY024"; // 717 svc_no_switches
        sqlStates[335545038] = "HY109"; // 718 svc_bad_size
        sqlStates[335545039] = "HY024"; // 719 no_crypt_plugin
        sqlStates[335545040] = "22001"; // 720 cp_name_too_long
        sqlStates[335545041] = "42818"; // 721 cp_process_active
        sqlStates[335545042] = "42818"; // 722 cp_already_crypted
        sqlStates[335545043] = "XX000"; // 723 decrypt_error
        sqlStates[335545044] = "39000"; // 724 no_providers
        sqlStates[335545045] = "42818"; // 725 null_spb
        sqlStates[335545046] = "42000"; // 726 max_args_exceeded
        sqlStates[335545047] = "42000"; // 727 ee_blr_mismatch_names_count
        sqlStates[335545048] = "42000"; // 728 ee_blr_mismatch_name_not_found
        sqlStates[335545049] = "26000"; // 729 bad_result_set
        sqlStates[335545050] = "07000"; // 730 wrong_message_length
        sqlStates[335545051] = "07000"; // 731 no_output_format
        sqlStates[335545052] = "HY021"; // 732 item_finish
        sqlStates[335545053] = "XX000"; // 733 miss_config
        sqlStates[335545054] = "XX000"; // 734 conf_line
        sqlStates[335545055] = "XX000"; // 735 conf_include
        sqlStates[335545056] = "XX000"; // 736 include_depth
        sqlStates[335545057] = "XX000"; // 737 include_miss
        sqlStates[335545058] = "28000"; // 738 protect_ownership
        sqlStates[335545059] = "HY000"; // 739 badvarnum
        sqlStates[335545060] = "28000"; // 740 sec_context
        sqlStates[335545061] = "28000"; // 741 multi_segment
        sqlStates[335545062] = "28000"; // 742 login_changed
        sqlStates[335545063] = "28000"; // 743 auth_handshake_limit
        sqlStates[335545064] = "28000"; // 744 wirecrypt_incompatible
        sqlStates[335545065] = "28000"; // 745 miss_wirecrypt
        sqlStates[335545066] = "28000"; // 746 wirecrypt_key
        sqlStates[335545067] = "28000"; // 747 wirecrypt_plugin
        sqlStates[335545068] = "28000"; // 748 secdb_name
        sqlStates[335545069] = "28000"; // 749 auth_data
        sqlStates[335545070] = "28000"; // 750 auth_datalength
        sqlStates[335545071] = "HY007"; // 751 info_unprepared_stmt
        sqlStates[335545072] = "HY007"; // 752 idx_key_value
        sqlStates[335545073] = "HY000"; // 753 forupdate_virtualtbl
        sqlStates[335545074] = "HY000"; // 754 forupdate_systbl
        sqlStates[335545075] = "HY000"; // 755 forupdate_temptbl
        sqlStates[335545076] = "42000"; // 756 cant_modify_sysobj
        sqlStates[335545077] = "08004"; // 757 server_misconfigured
        sqlStates[335545078] = "0A000"; // 758 alter_role
        sqlStates[335545079] = "42S01"; // 759 map_already_exists
        sqlStates[335545080] = "42S02"; // 760 map_not_exists
        sqlStates[335545081] = "08004"; // 761 map_load
        sqlStates[335545082] = "08004"; // 762 map_aster
        sqlStates[335545083] = "08004"; // 763 map_multi
        sqlStates[335545084] = "08004"; // 764 map_undefined
        sqlStates[335545085] = "HY000"; // 765 baddpb_damaged_mode
        sqlStates[335545086] = "HY000"; // 766 baddpb_buffers_range
        sqlStates[335545087] = "HY000"; // 767 baddpb_temp_buffers
        sqlStates[335545088] = "0A000"; // 768 map_nodb
        sqlStates[335545089] = "0A000"; // 769 map_notable
        sqlStates[335545090] = "0P000"; // 770 miss_trusted_role
        sqlStates[335545091] = "0P000"; // 771 set_invalid_role
        sqlStates[335545092] = "HY109"; // 772 cursor_not_positioned
        sqlStates[335545093] = "42702"; // 773 dup_attribute
        sqlStates[335545094] = "42000"; // 774 dyn_no_priv
        sqlStates[335545095] = "42000"; // 775 dsql_cant_grant_option
        sqlStates[335545096] = "40001"; // 776 read_conflict
        sqlStates[335545097] = "08004"; // 777 crdb_load
        sqlStates[335545098] = "0A000"; // 778 crdb_nodb
        sqlStates[335545099] = "0A000"; // 779 crdb_notable
        sqlStates[335545100] = "HY000"; // 780 interface_version_too_old
        sqlStates[335545101] = "07001"; // 781 fun_param_mismatch
        sqlStates[335545102] = "HY000"; // 782 savepoint_backout_err
        sqlStates[335545103] = "42000"; // 783 domain_primary_key_notnull
        sqlStates[335545104] = "2C000"; // 784 invalid_attachment_charset
        sqlStates[335545105] = "08004"; // 785 map_down
        sqlStates[335545106] = "08006"; // 786 login_error
        sqlStates[335545107] = "08006"; // 787 already_opened
        sqlStates[335545108] = "08006"; // 788 bad_crypt_key
        sqlStates[335545109] = "XX000"; // 789 encrypt_error
        sqlStates[335545110] = "54000"; // 790 max_idx_depth
        sqlStates[335545111] = "0A000"; // 791 wrong_prvlg
        sqlStates[335545112] = "28000"; // 792 miss_prvlg
        sqlStates[335545113] = "XX000"; // 793 crypt_checksum
        sqlStates[335545114] = "28000"; // 794 not_dba
        sqlStates[335545115] = "07005"; // 795 no_cursor
        sqlStates[335545116] = "42000"; // 796 dsql_window_incompat_frames
        sqlStates[335545117] = "42000"; // 797 dsql_window_range_multi_key
        sqlStates[335545118] = "42000"; // 798 dsql_window_range_inv_key_type
        sqlStates[335545119] = "42000"; // 799 dsql_window_frame_value_inv_type
        sqlStates[335545120] = "42000"; // 800 window_frame_value_invalid
        sqlStates[335545121] = "42000"; // 801 dsql_window_not_found
        sqlStates[335545122] = "42000"; // 802 dsql_window_cant_overr_part
        sqlStates[335545123] = "42000"; // 803 dsql_window_cant_overr_order
        sqlStates[335545124] = "42000"; // 804 dsql_window_cant_overr_frame
        sqlStates[335545125] = "42000"; // 805 dsql_window_duplicate
        sqlStates[335545126] = "54001"; // 806 sql_too_long
        sqlStates[335545127] = "HY008"; // 807 cfg_stmt_timeout
        sqlStates[335545128] = "HY008"; // 808 att_stmt_timeout
        sqlStates[335545129] = "HY008"; // 809 req_stmt_timeout
        sqlStates[335545130] = "08003"; // 810 att_shut_killed
        sqlStates[335545131] = "08003"; // 811 att_shut_idle
        sqlStates[335545132] = "08003"; // 812 att_shut_db_down
        sqlStates[335545133] = "08003"; // 813 att_shut_engine
        sqlStates[335545134] = "42000"; // 814 overriding_without_identity
        sqlStates[335545135] = "42000"; // 815 overriding_system_invalid
        sqlStates[335545136] = "42000"; // 816 overriding_user_invalid
        sqlStates[335545137] = "42000"; // 817 overriding_system_missing
        sqlStates[335545138] = "HY104"; // 818 decprecision_err
        sqlStates[335545139] = "22012"; // 819 decfloat_divide_by_zero
        sqlStates[335545140] = "22000"; // 820 decfloat_inexact_result
        sqlStates[335545141] = "22000"; // 821 decfloat_invalid_operation
        sqlStates[335545142] = "22003"; // 822 decfloat_overflow
        sqlStates[335545143] = "22003"; // 823 decfloat_underflow
        sqlStates[335545144] = "42000"; // 824 subfunc_notdef
        sqlStates[335545145] = "42000"; // 825 subproc_notdef
        sqlStates[335545146] = "42000"; // 826 subfunc_signat
        sqlStates[335545147] = "42000"; // 827 subproc_signat
        sqlStates[335545148] = "42000"; // 828 subfunc_defvaldecl
        sqlStates[335545149] = "42000"; // 829 subproc_defvaldecl
        sqlStates[335545150] = "42000"; // 830 subfunc_not_impl
        sqlStates[335545151] = "42000"; // 831 subproc_not_impl
        sqlStates[335545152] = "42000"; // 832 sysf_invalid_hash_algorithm
        sqlStates[335545153] = "42000"; // 833 expression_eval_index
        sqlStates[335545154] = "42000"; // 834 invalid_decfloat_trap
        sqlStates[335545155] = "42000"; // 835 invalid_decfloat_round
        sqlStates[335545156] = "42000"; // 836 sysf_invalid_first_last_part
        sqlStates[335545157] = "42000"; // 837 sysf_invalid_date_timestamp
        sqlStates[335545158] = "HY104"; // 838 precision_err2
        sqlStates[335545159] = "08003"; // 839 bad_batch_handle
        sqlStates[335545160] = "22021"; // 840 intl_char
        sqlStates[335545161] = "22000"; // 841 null_block
        sqlStates[335545162] = "22000"; // 842 mixed_info
        sqlStates[335545163] = "22000"; // 843 unknown_info
        sqlStates[335545164] = "22000"; // 844 bpb_version
        sqlStates[335545165] = "28000"; // 845 user_manager
        sqlStates[335545166] = "XX000"; // 846 icu_entrypoint
        sqlStates[335545167] = "XX000"; // 847 icu_library
        sqlStates[335545168] = "02000"; // 848 metadata_name
        sqlStates[335545169] = "42000"; // 849 tokens_parse
        sqlStates[335545170] = "08006"; // 850 iconv_open
        sqlStates[335545171] = "07002"; // 851 batch_compl_range
        sqlStates[335545172] = "07002"; // 852 batch_compl_detail
        sqlStates[335545173] = "08006"; // 853 deflate_init
        sqlStates[335545174] = "08006"; // 854 inflate_init
        sqlStates[335545175] = "22026"; // 855 big_segment
        sqlStates[335545176] = "22000"; // 856 batch_policy
        sqlStates[335545177] = "22000"; // 857 batch_defbpb
        sqlStates[335545178] = "22000"; // 858 batch_align
        sqlStates[335545179] = "22000"; // 859 multi_segment_dup
        sqlStates[335545180] = "08004"; // 860 non_plugin_protocol
        sqlStates[335545181] = "22000"; // 861 message_format
        sqlStates[335545182] = "22000"; // 862 batch_param_version
        sqlStates[335545183] = "54000"; // 863 batch_msg_long
        sqlStates[335545184] = "08002"; // 864 batch_open
        sqlStates[335545185] = "07003"; // 865 batch_type
        sqlStates[335545186] = "07001"; // 866 batch_param
        sqlStates[335545187] = "07001"; // 867 batch_blobs
        sqlStates[335545188] = "22000"; // 868 batch_blob_append
        sqlStates[335545189] = "22000"; // 869 batch_stream_align
        sqlStates[335545190] = "22000"; // 870 batch_rpt_blob
        sqlStates[335545191] = "22000"; // 871 batch_blob_buf
        sqlStates[335545192] = "22000"; // 872 batch_small_data
        sqlStates[335545193] = "22000"; // 873 batch_cont_bpb
        sqlStates[335545194] = "22000"; // 874 batch_big_bpb
        sqlStates[335545195] = "22000"; // 875 batch_big_segment
        sqlStates[335545196] = "22000"; // 876 batch_big_seg2
        sqlStates[335545197] = "22000"; // 877 batch_blob_id
        sqlStates[335545198] = "54000"; // 878 batch_too_big
        sqlStates[335545199] = "54000"; // 879 num_literal
        sqlStates[335545200] = "XX000"; // 880 map_event
        sqlStates[335545201] = "54000"; // 881 map_overflow
        sqlStates[335545202] = "54000"; // 882 hdr_overflow
        sqlStates[335545203] = "28000"; // 883 vld_plugins
        sqlStates[335545204] = "08004"; // 884 db_crypt_key
        sqlStates[335545205] = "HY024"; // 885 no_keyholder_plugin
        sqlStates[335545206] = "01002"; // 886 ses_reset_err
        sqlStates[335545207] = "25S02"; // 887 ses_reset_open_trans
        sqlStates[335545208] = "01000"; // 888 ses_reset_warn
        sqlStates[335545209] = "01102"; // 889 ses_reset_tran_rollback
        sqlStates[335545210] = "00000"; // 890 plugin_name
        sqlStates[335545211] = "42000"; // 891 parameter_name
        sqlStates[335545212] = "HY000"; // 892 file_starting_page_err
        sqlStates[335545213] = "22009"; // 893 invalid_timezone_offset
        sqlStates[335545214] = "22009"; // 894 invalid_timezone_region
        sqlStates[335545215] = "22009"; // 895 invalid_timezone_id
        sqlStates[335545216] = "22023"; // 896 tom_decode64len
        sqlStates[335545217] = "22023"; // 897 tom_strblob
        sqlStates[335545218] = "22023"; // 898 tom_reg
        sqlStates[335545219] = "22023"; // 899 tom_algorithm
        sqlStates[335545220] = "22023"; // 900 tom_mode_miss
        sqlStates[335545221] = "22023"; // 901 tom_mode_bad
        sqlStates[335545222] = "22023"; // 902 tom_no_mode
        sqlStates[335545223] = "22023"; // 903 tom_iv_miss
        sqlStates[335545224] = "22023"; // 904 tom_no_iv
        sqlStates[335545225] = "22023"; // 905 tom_ctrtype_bad
        sqlStates[335545226] = "22023"; // 906 tom_no_ctrtype
        sqlStates[335545227] = "22023"; // 907 tom_ctr_big
        sqlStates[335545228] = "22023"; // 908 tom_no_ctr
        sqlStates[335545229] = "22023"; // 909 tom_iv_length
        sqlStates[335545230] = "22000"; // 910 tom_error
        sqlStates[335545231] = "22023"; // 911 tom_yarrow_start
        sqlStates[335545232] = "22023"; // 912 tom_yarrow_setup
        sqlStates[335545233] = "22023"; // 913 tom_init_mode
        sqlStates[335545234] = "22023"; // 914 tom_crypt_mode
        sqlStates[335545235] = "22023"; // 915 tom_decrypt_mode
        sqlStates[335545236] = "22023"; // 916 tom_init_cip
        sqlStates[335545237] = "22023"; // 917 tom_crypt_cip
        sqlStates[335545238] = "22023"; // 918 tom_decrypt_cip
        sqlStates[335545239] = "22023"; // 919 tom_setup_cip
        sqlStates[335545240] = "22023"; // 920 tom_setup_chacha
        sqlStates[335545241] = "22023"; // 921 tom_encode
        sqlStates[335545242] = "22023"; // 922 tom_decode
        sqlStates[335545243] = "22023"; // 923 tom_rsa_import
        sqlStates[335545244] = "22023"; // 924 tom_oaep
        sqlStates[335545245] = "22023"; // 925 tom_hash_bad
        sqlStates[335545246] = "22023"; // 926 tom_rsa_make
        sqlStates[335545247] = "22023"; // 927 tom_rsa_export
        sqlStates[335545248] = "22023"; // 928 tom_rsa_sign
        sqlStates[335545249] = "22023"; // 929 tom_rsa_verify
        sqlStates[335545250] = "22023"; // 930 tom_chacha_key
        sqlStates[335545251] = "08003"; // 931 bad_repl_handle
        sqlStates[335545252] = "0B000"; // 932 tra_snapshot_does_not_exist
        sqlStates[335545253] = "42000"; // 933 eds_input_prm_not_used
        sqlStates[335545254] = "28000"; // 934 effective_user
        sqlStates[335545255] = "42000"; // 935 invalid_time_zone_bind
        sqlStates[335545256] = "42000"; // 936 invalid_decfloat_bind
        sqlStates[335545257] = "22023"; // 937 odd_hex_len
        sqlStates[335545258] = "22023"; // 938 invalid_hex_digit
        sqlStates[335545259] = "08004"; // 939 bind_err
        sqlStates[335545260] = "08004"; // 940 bind_statement
        sqlStates[335545261] = "22000"; // 941 bind_convert
        sqlStates[335545262] = "42000"; // 942 cannot_update_old_blob
        sqlStates[335545263] = "42000"; // 943 cannot_read_new_blob
        sqlStates[335545264] = "42000"; // 944 dyn_no_create_priv
        sqlStates[335545265] = "42000"; // 945 suspend_without_returns
        sqlStates[335545266] = "01004"; // 946 truncate_warn
        sqlStates[335545267] = "01004"; // 947 truncate_monitor
        sqlStates[335545268] = "01004"; // 948 truncate_context
        sqlStates[335545269] = "21000"; // 949 merge_dup_update
        sqlStates[335545270] = "XX000"; // 950 wrong_page
        sqlStates[335545271] = "HY000"; // 951 repl_error
        sqlStates[335740929] = "00000"; //   1 gfix_db_name
        sqlStates[335740930] = "00000"; //   2 gfix_invalid_sw
        sqlStates[335740932] = "00000"; //   4 gfix_incmp_sw
        sqlStates[335740933] = "00000"; //   5 gfix_replay_req
        sqlStates[335740934] = "00000"; //   6 gfix_pgbuf_req
        sqlStates[335740935] = "00000"; //   7 gfix_val_req
        sqlStates[335740936] = "00000"; //   8 gfix_pval_req
        sqlStates[335740937] = "00000"; //   9 gfix_trn_req
        sqlStates[335740940] = "00000"; //  12 gfix_full_req
        sqlStates[335740941] = "00000"; //  13 gfix_usrname_req
        sqlStates[335740942] = "00000"; //  14 gfix_pass_req
        sqlStates[335740943] = "00000"; //  15 gfix_subs_name
        sqlStates[335740944] = "00000"; //  16 gfix_wal_req
        sqlStates[335740945] = "00000"; //  17 gfix_sec_req
        sqlStates[335740946] = "00000"; //  18 gfix_nval_req
        sqlStates[335740947] = "00000"; //  19 gfix_type_shut
        sqlStates[335740948] = "00000"; //  20 gfix_retry
        sqlStates[335740951] = "00000"; //  23 gfix_retry_db
        sqlStates[335740991] = "00000"; //  63 gfix_exceed_max
        sqlStates[335740992] = "00000"; //  64 gfix_corrupt_pool
        sqlStates[335740993] = "00000"; //  65 gfix_mem_exhausted
        sqlStates[335740994] = "00000"; //  66 gfix_bad_pool
        sqlStates[335740995] = "00000"; //  67 gfix_trn_not_valid
        sqlStates[335741012] = "00000"; //  84 gfix_unexp_eoi
        sqlStates[335741018] = "00000"; //  90 gfix_recon_fail
        sqlStates[335741036] = "00000"; // 108 gfix_trn_unknown
        sqlStates[335741038] = "00000"; // 110 gfix_mode_req
        sqlStates[335741042] = "00000"; // 114 gfix_pzval_req
        sqlStates[336003074] = "HY000"; //   2 dsql_dbkey_from_non_table
        sqlStates[336003075] = "HY000"; //   3 dsql_transitional_numeric
        sqlStates[336003076] = "01000"; //   4 dsql_dialect_warning_expr
        sqlStates[336003077] = "HY000"; //   5 sql_db_dialect_dtype_unsupport
        sqlStates[336003079] = "HY000"; //   7 sql_dialect_conflict_num
        sqlStates[336003080] = "HY104"; //   8 dsql_warning_number_ambiguous
        sqlStates[336003081] = "HY104"; //   9 dsql_warning_number_ambiguous1
        sqlStates[336003082] = "HY104"; //  10 dsql_warn_precision_ambiguous
        sqlStates[336003083] = "HY104"; //  11 dsql_warn_precision_ambiguous1
        sqlStates[336003084] = "HY104"; //  12 dsql_warn_precision_ambiguous2
        sqlStates[336003085] = "42702"; //  13 dsql_ambiguous_field_name
        sqlStates[336003086] = "38000"; //  14 dsql_udf_return_pos_err
        sqlStates[336003087] = "HY000"; //  15 dsql_invalid_label
        sqlStates[336003088] = "HY004"; //  16 dsql_datatypes_not_comparable
        sqlStates[336003089] = "24000"; //  17 dsql_cursor_invalid
        sqlStates[336003090] = "24000"; //  18 dsql_cursor_redefined
        sqlStates[336003091] = "34000"; //  19 dsql_cursor_not_found
        sqlStates[336003092] = "24000"; //  20 dsql_cursor_exists
        sqlStates[336003093] = "34000"; //  21 dsql_cursor_rel_ambiguous
        sqlStates[336003094] = "34000"; //  22 dsql_cursor_rel_not_found
        sqlStates[336003095] = "24000"; //  23 dsql_cursor_not_open
        sqlStates[336003096] = "HY004"; //  24 dsql_type_not_supp_ext_tab
        sqlStates[336003097] = "0A000"; //  25 dsql_feature_not_supported_ods
        sqlStates[336003098] = "22000"; //  26 primary_key_required
        sqlStates[336003099] = "42000"; //  27 upd_ins_doesnt_match_pk
        sqlStates[336003100] = "42000"; //  28 upd_ins_doesnt_match_matching
        sqlStates[336003101] = "54001"; //  29 upd_ins_with_complex_view
        sqlStates[336003102] = "42000"; //  30 dsql_incompatible_trigger_type
        sqlStates[336003103] = "42000"; //  31 dsql_db_trigger_type_cant_change
        sqlStates[336003104] = "HY000"; //  32 dsql_record_version_table
        sqlStates[336003105] = "07002"; //  33 dsql_invalid_sqlda_version
        sqlStates[336003106] = "07002"; //  34 dsql_sqlvar_index
        sqlStates[336003107] = "07002"; //  35 dsql_no_sqlind
        sqlStates[336003108] = "07002"; //  36 dsql_no_sqldata
        sqlStates[336003109] = "07002"; //  37 dsql_no_input_sqlda
        sqlStates[336003110] = "07002"; //  38 dsql_no_output_sqlda
        sqlStates[336003111] = "07001"; //  39 dsql_wrong_param_num
        sqlStates[336003112] = "42000"; //  40 dsql_invalid_drop_ss_clause
        sqlStates[336003113] = "42000"; //  41 upd_ins_cannot_default
        sqlStates[336068645] = "42000"; //  37 dyn_filter_not_found
        sqlStates[336068649] = "42000"; //  41 dyn_func_not_found
        sqlStates[336068656] = "42000"; //  48 dyn_index_not_found
        sqlStates[336068662] = "42000"; //  54 dyn_view_not_found
        sqlStates[336068697] = "42000"; //  89 dyn_domain_not_found
        sqlStates[336068717] = "42000"; // 109 dyn_cant_modify_auto_trig
        sqlStates[336068740] = "42S01"; // 132 dyn_dup_table
        sqlStates[336068748] = "42000"; // 140 dyn_proc_not_found
        sqlStates[336068752] = "42000"; // 144 dyn_exception_not_found
        sqlStates[336068754] = "42000"; // 146 dyn_proc_param_not_found
        sqlStates[336068755] = "42000"; // 147 dyn_trig_not_found
        sqlStates[336068759] = "42000"; // 151 dyn_charset_not_found
        sqlStates[336068760] = "42000"; // 152 dyn_collation_not_found
        sqlStates[336068763] = "42000"; // 155 dyn_role_not_found
        sqlStates[336068767] = "42000"; // 159 dyn_name_longer
        sqlStates[336068784] = "42S22"; // 176 dyn_column_does_not_exist
        sqlStates[336068796] = "28000"; // 188 dyn_role_does_not_exist
        sqlStates[336068797] = "28000"; // 189 dyn_no_grant_admin_opt
        sqlStates[336068798] = "28000"; // 190 dyn_user_not_role_member
        sqlStates[336068799] = "28000"; // 191 dyn_delete_role_failed
        sqlStates[336068800] = "28000"; // 192 dyn_grant_role_to_user
        sqlStates[336068801] = "28000"; // 193 dyn_inv_sql_role_name
        sqlStates[336068802] = "42000"; // 194 dyn_dup_sql_role
        sqlStates[336068803] = "28000"; // 195 dyn_kywd_spec_for_role
        sqlStates[336068804] = "28000"; // 196 dyn_roles_not_supported
        sqlStates[336068812] = "42000"; // 204 dyn_domain_name_exists
        sqlStates[336068813] = "42S21"; // 205 dyn_field_name_exists
        sqlStates[336068814] = "42000"; // 206 dyn_dependency_exists
        sqlStates[336068815] = "42000"; // 207 dyn_dtype_invalid
        sqlStates[336068816] = "42000"; // 208 dyn_char_fld_too_small
        sqlStates[336068817] = "42000"; // 209 dyn_invalid_dtype_conversion
        sqlStates[336068818] = "42000"; // 210 dyn_dtype_conv_invalid
        sqlStates[336068820] = "42000"; // 212 dyn_zero_len_id
        sqlStates[336068822] = "42000"; // 214 dyn_gen_not_found
        sqlStates[336068829] = "2C000"; // 221 max_coll_per_charset
        sqlStates[336068830] = "HY000"; // 222 invalid_coll_attr
        sqlStates[336068840] = "HY000"; // 232 dyn_wrong_gtt_scope
        sqlStates[336068843] = "HY000"; // 235 dyn_coll_used_table
        sqlStates[336068844] = "HY000"; // 236 dyn_coll_used_domain
        sqlStates[336068845] = "HY000"; // 237 dyn_cannot_del_syscoll
        sqlStates[336068846] = "HY000"; // 238 dyn_cannot_del_def_coll
        sqlStates[336068849] = "42000"; // 241 dyn_table_not_found
        sqlStates[336068851] = "HY000"; // 243 dyn_coll_used_procedure
        sqlStates[336068852] = "42000"; // 244 dyn_scale_too_big
        sqlStates[336068853] = "42000"; // 245 dyn_precision_too_small
        sqlStates[336068855] = "42000"; // 247 dyn_miss_priv_warning
        sqlStates[336068856] = "0A000"; // 248 dyn_ods_not_supp_feature
        sqlStates[336068857] = "42000"; // 249 dyn_cannot_addrem_computed
        sqlStates[336068858] = "42000"; // 250 dyn_no_empty_pw
        sqlStates[336068859] = "42S11"; // 251 dyn_dup_index
        sqlStates[336068864] = "42000"; // 256 dyn_package_not_found
        sqlStates[336068865] = "42000"; // 257 dyn_schema_not_found
        sqlStates[336068866] = "HY000"; // 258 dyn_cannot_mod_sysproc
        sqlStates[336068867] = "HY000"; // 259 dyn_cannot_mod_systrig
        sqlStates[336068868] = "HY000"; // 260 dyn_cannot_mod_sysfunc
        sqlStates[336068869] = "HY000"; // 261 dyn_invalid_ddl_proc
        sqlStates[336068870] = "HY000"; // 262 dyn_invalid_ddl_trig
        sqlStates[336068871] = "42000"; // 263 dyn_funcnotdef_package
        sqlStates[336068872] = "42000"; // 264 dyn_procnotdef_package
        sqlStates[336068873] = "42000"; // 265 dyn_funcsignat_package
        sqlStates[336068874] = "42000"; // 266 dyn_procsignat_package
        sqlStates[336068875] = "42000"; // 267 dyn_defvaldecl_package_proc
        sqlStates[336068877] = "42000"; // 269 dyn_package_body_exists
        sqlStates[336068878] = "HY000"; // 270 dyn_invalid_ddl_func
        sqlStates[336068879] = "42000"; // 271 dyn_newfc_oldsyntax
        sqlStates[336068886] = "42000"; // 278 dyn_func_param_not_found
        sqlStates[336068887] = "42000"; // 279 dyn_routine_param_not_found
        sqlStates[336068888] = "42000"; // 280 dyn_routine_param_ambiguous
        sqlStates[336068889] = "HY000"; // 281 dyn_coll_used_function
        sqlStates[336068890] = "HY000"; // 282 dyn_domain_used_function
        sqlStates[336068891] = "42000"; // 283 dyn_alter_user_no_clause
        sqlStates[336068894] = "42000"; // 286 dyn_duplicate_package_item
        sqlStates[336068895] = "42000"; // 287 dyn_cant_modify_sysobj
        sqlStates[336068896] = "42000"; // 288 dyn_cant_use_zero_increment
        sqlStates[336068897] = "42000"; // 289 dyn_cant_use_in_foreignkey
        sqlStates[336068898] = "42000"; // 290 dyn_defvaldecl_package_func
        sqlStates[336068900] = "42000"; // 292 dyn_cyclic_role
        sqlStates[336068904] = "42000"; // 296 dyn_cant_use_zero_inc_ident
        sqlStates[336068907] = "42000"; // 299 dyn_no_ddl_grant_opt_priv
        sqlStates[336068908] = "42000"; // 300 dyn_no_grant_opt_priv
        sqlStates[336068909] = "42000"; // 301 dyn_func_not_exist
        sqlStates[336068910] = "42000"; // 302 dyn_proc_not_exist
        sqlStates[336068911] = "42000"; // 303 dyn_pack_not_exist
        sqlStates[336068912] = "42000"; // 304 dyn_trig_not_exist
        sqlStates[336068913] = "42000"; // 305 dyn_view_not_exist
        sqlStates[336068914] = "42000"; // 306 dyn_rel_not_exist
        sqlStates[336068915] = "42000"; // 307 dyn_exc_not_exist
        sqlStates[336068916] = "42000"; // 308 dyn_gen_not_exist
        sqlStates[336068917] = "42000"; // 309 dyn_fld_not_exist
        sqlStates[336330753] = "00000"; //   1 gbak_unknown_switch
        sqlStates[336330754] = "00000"; //   2 gbak_page_size_missing
        sqlStates[336330755] = "00000"; //   3 gbak_page_size_toobig
        sqlStates[336330756] = "00000"; //   4 gbak_redir_ouput_missing
        sqlStates[336330757] = "00000"; //   5 gbak_switches_conflict
        sqlStates[336330758] = "00000"; //   6 gbak_unknown_device
        sqlStates[336330759] = "00000"; //   7 gbak_no_protection
        sqlStates[336330760] = "00000"; //   8 gbak_page_size_not_allowed
        sqlStates[336330761] = "00000"; //   9 gbak_multi_source_dest
        sqlStates[336330762] = "00000"; //  10 gbak_filename_missing
        sqlStates[336330763] = "00000"; //  11 gbak_dup_inout_names
        sqlStates[336330764] = "00000"; //  12 gbak_inv_page_size
        sqlStates[336330765] = "00000"; //  13 gbak_db_specified
        sqlStates[336330766] = "00000"; //  14 gbak_db_exists
        sqlStates[336330767] = "00000"; //  15 gbak_unk_device
        sqlStates[336330772] = "00000"; //  20 gbak_blob_info_failed
        sqlStates[336330773] = "00000"; //  21 gbak_unk_blob_item
        sqlStates[336330774] = "00000"; //  22 gbak_get_seg_failed
        sqlStates[336330775] = "00000"; //  23 gbak_close_blob_failed
        sqlStates[336330776] = "00000"; //  24 gbak_open_blob_failed
        sqlStates[336330777] = "00000"; //  25 gbak_put_blr_gen_id_failed
        sqlStates[336330778] = "00000"; //  26 gbak_unk_type
        sqlStates[336330779] = "00000"; //  27 gbak_comp_req_failed
        sqlStates[336330780] = "00000"; //  28 gbak_start_req_failed
        sqlStates[336330781] = "00000"; //  29 gbak_rec_failed
        sqlStates[336330782] = "00000"; //  30 gbak_rel_req_failed
        sqlStates[336330783] = "00000"; //  31 gbak_db_info_failed
        sqlStates[336330784] = "00000"; //  32 gbak_no_db_desc
        sqlStates[336330785] = "00000"; //  33 gbak_db_create_failed
        sqlStates[336330786] = "00000"; //  34 gbak_decomp_len_error
        sqlStates[336330787] = "00000"; //  35 gbak_tbl_missing
        sqlStates[336330788] = "00000"; //  36 gbak_blob_col_missing
        sqlStates[336330789] = "00000"; //  37 gbak_create_blob_failed
        sqlStates[336330790] = "00000"; //  38 gbak_put_seg_failed
        sqlStates[336330791] = "00000"; //  39 gbak_rec_len_exp
        sqlStates[336330792] = "00000"; //  40 gbak_inv_rec_len
        sqlStates[336330793] = "00000"; //  41 gbak_exp_data_type
        sqlStates[336330794] = "00000"; //  42 gbak_gen_id_failed
        sqlStates[336330795] = "00000"; //  43 gbak_unk_rec_type
        sqlStates[336330796] = "00000"; //  44 gbak_inv_bkup_ver
        sqlStates[336330797] = "00000"; //  45 gbak_missing_bkup_desc
        sqlStates[336330798] = "00000"; //  46 gbak_string_trunc
        sqlStates[336330799] = "00000"; //  47 gbak_cant_rest_record
        sqlStates[336330800] = "00000"; //  48 gbak_send_failed
        sqlStates[336330801] = "00000"; //  49 gbak_no_tbl_name
        sqlStates[336330802] = "00000"; //  50 gbak_unexp_eof
        sqlStates[336330803] = "00000"; //  51 gbak_db_format_too_old
        sqlStates[336330804] = "00000"; //  52 gbak_inv_array_dim
        sqlStates[336330807] = "00000"; //  55 gbak_xdr_len_expected
        sqlStates[336330817] = "00000"; //  65 gbak_open_bkup_error
        sqlStates[336330818] = "00000"; //  66 gbak_open_error
        sqlStates[336330934] = "00000"; // 182 gbak_missing_block_fac
        sqlStates[336330935] = "00000"; // 183 gbak_inv_block_fac
        sqlStates[336330936] = "00000"; // 184 gbak_block_fac_specified
        sqlStates[336330940] = "00000"; // 188 gbak_missing_username
        sqlStates[336330941] = "00000"; // 189 gbak_missing_password
        sqlStates[336330952] = "00000"; // 200 gbak_missing_skipped_bytes
        sqlStates[336330953] = "00000"; // 201 gbak_inv_skipped_bytes
        sqlStates[336330965] = "00000"; // 213 gbak_err_restore_charset
        sqlStates[336330967] = "00000"; // 215 gbak_err_restore_collation
        sqlStates[336330972] = "00000"; // 220 gbak_read_error
        sqlStates[336330973] = "00000"; // 221 gbak_write_error
        sqlStates[336330985] = "00000"; // 233 gbak_db_in_use
        sqlStates[336330990] = "00000"; // 238 gbak_sysmemex
        sqlStates[336331002] = "00000"; // 250 gbak_restore_role_failed
        sqlStates[336331005] = "00000"; // 253 gbak_role_op_missing
        sqlStates[336331010] = "00000"; // 258 gbak_page_buffers_missing
        sqlStates[336331011] = "00000"; // 259 gbak_page_buffers_wrong_param
        sqlStates[336331012] = "00000"; // 260 gbak_page_buffers_restore
        sqlStates[336331014] = "00000"; // 262 gbak_inv_size
        sqlStates[336331015] = "00000"; // 263 gbak_file_outof_sequence
        sqlStates[336331016] = "00000"; // 264 gbak_join_file_missing
        sqlStates[336331017] = "00000"; // 265 gbak_stdin_not_supptd
        sqlStates[336331018] = "00000"; // 266 gbak_stdout_not_supptd
        sqlStates[336331019] = "00000"; // 267 gbak_bkup_corrupt
        sqlStates[336331020] = "00000"; // 268 gbak_unk_db_file_spec
        sqlStates[336331021] = "00000"; // 269 gbak_hdr_write_failed
        sqlStates[336331022] = "00000"; // 270 gbak_disk_space_ex
        sqlStates[336331023] = "00000"; // 271 gbak_size_lt_min
        sqlStates[336331025] = "00000"; // 273 gbak_svc_name_missing
        sqlStates[336331026] = "00000"; // 274 gbak_not_ownr
        sqlStates[336331031] = "00000"; // 279 gbak_mode_req
        sqlStates[336331033] = "00000"; // 281 gbak_just_data
        sqlStates[336331034] = "00000"; // 282 gbak_data_only
        sqlStates[336331078] = "00000"; // 326 gbak_missing_interval
        sqlStates[336331079] = "00000"; // 327 gbak_wrong_interval
        sqlStates[336331081] = "00000"; // 329 gbak_verify_verbint
        sqlStates[336331082] = "00000"; // 330 gbak_option_only_restore
        sqlStates[336331083] = "00000"; // 331 gbak_option_only_backup
        sqlStates[336331084] = "00000"; // 332 gbak_option_conflict
        sqlStates[336331085] = "00000"; // 333 gbak_param_conflict
        sqlStates[336331086] = "00000"; // 334 gbak_option_repeated
        sqlStates[336331091] = "00000"; // 339 gbak_max_dbkey_recursion
        sqlStates[336331092] = "00000"; // 340 gbak_max_dbkey_length
        sqlStates[336331093] = "00000"; // 341 gbak_invalid_metadata
        sqlStates[336331094] = "00000"; // 342 gbak_invalid_data
        sqlStates[336331096] = "00000"; // 344 gbak_inv_bkup_ver2
        sqlStates[336331100] = "00000"; // 348 gbak_db_format_too_old2
        sqlStates[336397205] = "HY000"; // 917 dsql_too_old_ods
        sqlStates[336397206] = "42S02"; // 918 dsql_table_not_found
        sqlStates[336397207] = "42S02"; // 919 dsql_view_not_found
        sqlStates[336397208] = "42000"; // 920 dsql_line_col_error
        sqlStates[336397209] = "42000"; // 921 dsql_unknown_pos
        sqlStates[336397210] = "HY000"; // 922 dsql_no_dup_name
        sqlStates[336397211] = "07002"; // 923 dsql_too_many_values
        sqlStates[336397212] = "HY000"; // 924 dsql_no_array_computed
        sqlStates[336397213] = "00000"; // 925 dsql_implicit_domain_name
        sqlStates[336397214] = "42000"; // 926 dsql_only_can_subscript_array
        sqlStates[336397215] = "54011"; // 927 dsql_max_sort_items
        sqlStates[336397216] = "54011"; // 928 dsql_max_group_items
        sqlStates[336397217] = "42000"; // 929 dsql_conflicting_sort_field
        sqlStates[336397218] = "54001"; // 930 dsql_derived_table_more_columns
        sqlStates[336397219] = "54001"; // 931 dsql_derived_table_less_columns
        sqlStates[336397220] = "42000"; // 932 dsql_derived_field_unnamed
        sqlStates[336397221] = "42000"; // 933 dsql_derived_field_dup_name
        sqlStates[336397222] = "42000"; // 934 dsql_derived_alias_select
        sqlStates[336397223] = "42000"; // 935 dsql_derived_alias_field
        sqlStates[336397224] = "42000"; // 936 dsql_auto_field_bad_pos
        sqlStates[336397225] = "42000"; // 937 dsql_cte_wrong_reference
        sqlStates[336397226] = "42000"; // 938 dsql_cte_cycle
        sqlStates[336397227] = "42000"; // 939 dsql_cte_outer_join
        sqlStates[336397228] = "42000"; // 940 dsql_cte_mult_references
        sqlStates[336397229] = "42000"; // 941 dsql_cte_not_a_union
        sqlStates[336397230] = "42000"; // 942 dsql_cte_nonrecurs_after_recurs
        sqlStates[336397231] = "42000"; // 943 dsql_cte_wrong_clause
        sqlStates[336397232] = "42000"; // 944 dsql_cte_union_all
        sqlStates[336397233] = "42000"; // 945 dsql_cte_miss_nonrecursive
        sqlStates[336397234] = "42000"; // 946 dsql_cte_nested_with
        sqlStates[336397235] = "42000"; // 947 dsql_col_more_than_once_using
        sqlStates[336397236] = "HY000"; // 948 dsql_unsupp_feature_dialect
        sqlStates[336397237] = "42000"; // 949 dsql_cte_not_used
        sqlStates[336397238] = "42000"; // 950 dsql_col_more_than_once_view
        sqlStates[336397239] = "HY000"; // 951 dsql_unsupported_in_auto_trans
        sqlStates[336397240] = "42000"; // 952 dsql_eval_unknode
        sqlStates[336397241] = "42000"; // 953 dsql_agg_wrongarg
        sqlStates[336397242] = "42000"; // 954 dsql_agg2_wrongarg
        sqlStates[336397243] = "42000"; // 955 dsql_nodateortime_pm_string
        sqlStates[336397244] = "42000"; // 956 dsql_invalid_datetime_subtract
        sqlStates[336397245] = "42000"; // 957 dsql_invalid_dateortime_add
        sqlStates[336397246] = "42000"; // 958 dsql_invalid_type_minus_date
        sqlStates[336397247] = "42000"; // 959 dsql_nostring_addsub_dial3
        sqlStates[336397248] = "42000"; // 960 dsql_invalid_type_addsub_dial3
        sqlStates[336397249] = "42000"; // 961 dsql_invalid_type_multip_dial1
        sqlStates[336397250] = "42000"; // 962 dsql_nostring_multip_dial3
        sqlStates[336397251] = "42000"; // 963 dsql_invalid_type_multip_dial3
        sqlStates[336397252] = "42000"; // 964 dsql_mustuse_numeric_div_dial1
        sqlStates[336397253] = "42000"; // 965 dsql_nostring_div_dial3
        sqlStates[336397254] = "42000"; // 966 dsql_invalid_type_div_dial3
        sqlStates[336397255] = "42000"; // 967 dsql_nostring_neg_dial3
        sqlStates[336397256] = "42000"; // 968 dsql_invalid_type_neg
        sqlStates[336397257] = "54011"; // 969 dsql_max_distinct_items
        sqlStates[336397258] = "42000"; // 970 dsql_alter_charset_failed
        sqlStates[336397259] = "42000"; // 971 dsql_comment_on_failed
        sqlStates[336397260] = "42000"; // 972 dsql_create_func_failed
        sqlStates[336397261] = "42000"; // 973 dsql_alter_func_failed
        sqlStates[336397262] = "42000"; // 974 dsql_create_alter_func_failed
        sqlStates[336397263] = "42000"; // 975 dsql_drop_func_failed
        sqlStates[336397264] = "42000"; // 976 dsql_recreate_func_failed
        sqlStates[336397265] = "42000"; // 977 dsql_create_proc_failed
        sqlStates[336397266] = "42000"; // 978 dsql_alter_proc_failed
        sqlStates[336397267] = "42000"; // 979 dsql_create_alter_proc_failed
        sqlStates[336397268] = "42000"; // 980 dsql_drop_proc_failed
        sqlStates[336397269] = "42000"; // 981 dsql_recreate_proc_failed
        sqlStates[336397270] = "42000"; // 982 dsql_create_trigger_failed
        sqlStates[336397271] = "42000"; // 983 dsql_alter_trigger_failed
        sqlStates[336397272] = "42000"; // 984 dsql_create_alter_trigger_failed
        sqlStates[336397273] = "42000"; // 985 dsql_drop_trigger_failed
        sqlStates[336397274] = "42000"; // 986 dsql_recreate_trigger_failed
        sqlStates[336397275] = "42000"; // 987 dsql_create_collation_failed
        sqlStates[336397276] = "42000"; // 988 dsql_drop_collation_failed
        sqlStates[336397277] = "42000"; // 989 dsql_create_domain_failed
        sqlStates[336397278] = "42000"; // 990 dsql_alter_domain_failed
        sqlStates[336397279] = "42000"; // 991 dsql_drop_domain_failed
        sqlStates[336397280] = "42000"; // 992 dsql_create_except_failed
        sqlStates[336397281] = "42000"; // 993 dsql_alter_except_failed
        sqlStates[336397282] = "42000"; // 994 dsql_create_alter_except_failed
        sqlStates[336397283] = "42000"; // 995 dsql_recreate_except_failed
        sqlStates[336397284] = "42000"; // 996 dsql_drop_except_failed
        sqlStates[336397285] = "42000"; // 997 dsql_create_sequence_failed
        sqlStates[336397286] = "42000"; // 998 dsql_create_table_failed
        sqlStates[336397287] = "42000"; // 999 dsql_alter_table_failed
        sqlStates[336397288] = "42000"; // 1000 dsql_drop_table_failed
        sqlStates[336397289] = "42000"; // 1001 dsql_recreate_table_failed
        sqlStates[336397290] = "42000"; // 1002 dsql_create_pack_failed
        sqlStates[336397291] = "42000"; // 1003 dsql_alter_pack_failed
        sqlStates[336397292] = "42000"; // 1004 dsql_create_alter_pack_failed
        sqlStates[336397293] = "42000"; // 1005 dsql_drop_pack_failed
        sqlStates[336397294] = "42000"; // 1006 dsql_recreate_pack_failed
        sqlStates[336397295] = "42000"; // 1007 dsql_create_pack_body_failed
        sqlStates[336397296] = "42000"; // 1008 dsql_drop_pack_body_failed
        sqlStates[336397297] = "42000"; // 1009 dsql_recreate_pack_body_failed
        sqlStates[336397298] = "42000"; // 1010 dsql_create_view_failed
        sqlStates[336397299] = "42000"; // 1011 dsql_alter_view_failed
        sqlStates[336397300] = "42000"; // 1012 dsql_create_alter_view_failed
        sqlStates[336397301] = "42000"; // 1013 dsql_recreate_view_failed
        sqlStates[336397302] = "42000"; // 1014 dsql_drop_view_failed
        sqlStates[336397303] = "42000"; // 1015 dsql_drop_sequence_failed
        sqlStates[336397304] = "42000"; // 1016 dsql_recreate_sequence_failed
        sqlStates[336397305] = "42000"; // 1017 dsql_drop_index_failed
        sqlStates[336397306] = "42000"; // 1018 dsql_drop_filter_failed
        sqlStates[336397307] = "42000"; // 1019 dsql_drop_shadow_failed
        sqlStates[336397308] = "42000"; // 1020 dsql_drop_role_failed
        sqlStates[336397309] = "42000"; // 1021 dsql_drop_user_failed
        sqlStates[336397310] = "42000"; // 1022 dsql_create_role_failed
        sqlStates[336397311] = "42000"; // 1023 dsql_alter_role_failed
        sqlStates[336397312] = "42000"; // 1024 dsql_alter_index_failed
        sqlStates[336397313] = "42000"; // 1025 dsql_alter_database_failed
        sqlStates[336397314] = "42000"; // 1026 dsql_create_shadow_failed
        sqlStates[336397315] = "42000"; // 1027 dsql_create_filter_failed
        sqlStates[336397316] = "42000"; // 1028 dsql_create_index_failed
        sqlStates[336397317] = "42000"; // 1029 dsql_create_user_failed
        sqlStates[336397318] = "42000"; // 1030 dsql_alter_user_failed
        sqlStates[336397319] = "42000"; // 1031 dsql_grant_failed
        sqlStates[336397320] = "42000"; // 1032 dsql_revoke_failed
        sqlStates[336397321] = "42000"; // 1033 dsql_cte_recursive_aggregate
        sqlStates[336397322] = "42000"; // 1034 dsql_mapping_failed
        sqlStates[336397323] = "42000"; // 1035 dsql_alter_sequence_failed
        sqlStates[336397324] = "42000"; // 1036 dsql_create_generator_failed
        sqlStates[336397325] = "42000"; // 1037 dsql_set_generator_failed
        sqlStates[336397326] = "42000"; // 1038 dsql_wlock_simple
        sqlStates[336397327] = "42000"; // 1039 dsql_firstskip_rows
        sqlStates[336397328] = "42000"; // 1040 dsql_wlock_aggregates
        sqlStates[336397329] = "42000"; // 1041 dsql_wlock_conflict
        sqlStates[336397330] = "07002"; // 1042 dsql_max_exception_arguments
        sqlStates[336397331] = "42000"; // 1043 dsql_string_byte_length
        sqlStates[336397332] = "42000"; // 1044 dsql_string_char_length
        sqlStates[336397333] = "07002"; // 1045 dsql_max_nesting
        sqlStates[336397334] = "42000"; // 1046 dsql_recreate_user_failed
        sqlStates[336723983] = "00000"; //  15 gsec_cant_open_db
        sqlStates[336723984] = "00000"; //  16 gsec_switches_error
        sqlStates[336723985] = "00000"; //  17 gsec_no_op_spec
        sqlStates[336723986] = "00000"; //  18 gsec_no_usr_name
        sqlStates[336723987] = "00000"; //  19 gsec_err_add
        sqlStates[336723988] = "00000"; //  20 gsec_err_modify
        sqlStates[336723989] = "00000"; //  21 gsec_err_find_mod
        sqlStates[336723990] = "00000"; //  22 gsec_err_rec_not_found
        sqlStates[336723991] = "00000"; //  23 gsec_err_delete
        sqlStates[336723992] = "00000"; //  24 gsec_err_find_del
        sqlStates[336723996] = "00000"; //  28 gsec_err_find_disp
        sqlStates[336723997] = "00000"; //  29 gsec_inv_param
        sqlStates[336723998] = "00000"; //  30 gsec_op_specified
        sqlStates[336723999] = "00000"; //  31 gsec_pw_specified
        sqlStates[336724000] = "00000"; //  32 gsec_uid_specified
        sqlStates[336724001] = "00000"; //  33 gsec_gid_specified
        sqlStates[336724002] = "00000"; //  34 gsec_proj_specified
        sqlStates[336724003] = "00000"; //  35 gsec_org_specified
        sqlStates[336724004] = "00000"; //  36 gsec_fname_specified
        sqlStates[336724005] = "00000"; //  37 gsec_mname_specified
        sqlStates[336724006] = "00000"; //  38 gsec_lname_specified
        sqlStates[336724008] = "00000"; //  40 gsec_inv_switch
        sqlStates[336724009] = "00000"; //  41 gsec_amb_switch
        sqlStates[336724010] = "00000"; //  42 gsec_no_op_specified
        sqlStates[336724011] = "00000"; //  43 gsec_params_not_allowed
        sqlStates[336724012] = "00000"; //  44 gsec_incompat_switch
        sqlStates[336724044] = "00000"; //  76 gsec_inv_username
        sqlStates[336724045] = "00000"; //  77 gsec_inv_pw_length
        sqlStates[336724046] = "00000"; //  78 gsec_db_specified
        sqlStates[336724047] = "00000"; //  79 gsec_db_admin_specified
        sqlStates[336724048] = "00000"; //  80 gsec_db_admin_pw_specified
        sqlStates[336724049] = "00000"; //  81 gsec_sql_role_specified
        sqlStates[336920577] = "00000"; //   1 gstat_unknown_switch
        sqlStates[336920578] = "00000"; //   2 gstat_retry
        sqlStates[336920579] = "00000"; //   3 gstat_wrong_ods
        sqlStates[336920580] = "00000"; //   4 gstat_unexpected_eof
        sqlStates[336920605] = "00000"; //  29 gstat_open_err
        sqlStates[336920606] = "00000"; //  30 gstat_read_err
        sqlStates[336920607] = "00000"; //  31 gstat_sysmemex
        sqlStates[336986113] = "00000"; //   1 fbsvcmgr_bad_am
        sqlStates[336986114] = "00000"; //   2 fbsvcmgr_bad_wm
        sqlStates[336986115] = "00000"; //   3 fbsvcmgr_bad_rs
        sqlStates[336986116] = "00000"; //   4 fbsvcmgr_info_err
        sqlStates[336986117] = "00000"; //   5 fbsvcmgr_query_err
        sqlStates[336986118] = "00000"; //   6 fbsvcmgr_switch_unknown
        sqlStates[336986159] = "00000"; //  47 fbsvcmgr_bad_sm
        sqlStates[336986160] = "00000"; //  48 fbsvcmgr_fp_open
        sqlStates[336986161] = "00000"; //  49 fbsvcmgr_fp_read
        sqlStates[336986162] = "00000"; //  50 fbsvcmgr_fp_empty
        sqlStates[336986164] = "00000"; //  52 fbsvcmgr_bad_arg
        sqlStates[336986170] = "00000"; //  58 fbsvcmgr_info_limbo
        sqlStates[336986171] = "00000"; //  59 fbsvcmgr_limbo_state
        sqlStates[336986172] = "00000"; //  60 fbsvcmgr_limbo_advise
        sqlStates[337051649] = "00000"; //   1 utl_trusted_switch
        sqlStates[337117213] = "00000"; //  29 nbackup_missing_param
        sqlStates[337117214] = "00000"; //  30 nbackup_allowed_switches
        sqlStates[337117215] = "00000"; //  31 nbackup_unknown_param
        sqlStates[337117216] = "00000"; //  32 nbackup_unknown_switch
        sqlStates[337117217] = "00000"; //  33 nbackup_nofetchpw_svc
        sqlStates[337117218] = "00000"; //  34 nbackup_pwfile_error
        sqlStates[337117219] = "00000"; //  35 nbackup_size_with_lock
        sqlStates[337117220] = "00000"; //  36 nbackup_no_switch
        sqlStates[337117223] = "00000"; //  39 nbackup_err_read
        sqlStates[337117224] = "00000"; //  40 nbackup_err_write
        sqlStates[337117225] = "00000"; //  41 nbackup_err_seek
        sqlStates[337117226] = "00000"; //  42 nbackup_err_opendb
        sqlStates[337117227] = "00000"; //  43 nbackup_err_fadvice
        sqlStates[337117228] = "00000"; //  44 nbackup_err_createdb
        sqlStates[337117229] = "00000"; //  45 nbackup_err_openbk
        sqlStates[337117230] = "00000"; //  46 nbackup_err_createbk
        sqlStates[337117231] = "00000"; //  47 nbackup_err_eofdb
        sqlStates[337117232] = "00000"; //  48 nbackup_fixup_wrongstate
        sqlStates[337117233] = "00000"; //  49 nbackup_err_db
        sqlStates[337117234] = "00000"; //  50 nbackup_userpw_toolong
        sqlStates[337117235] = "00000"; //  51 nbackup_lostrec_db
        sqlStates[337117236] = "00000"; //  52 nbackup_lostguid_db
        sqlStates[337117237] = "00000"; //  53 nbackup_err_eofhdrdb
        sqlStates[337117238] = "00000"; //  54 nbackup_db_notlock
        sqlStates[337117239] = "00000"; //  55 nbackup_lostguid_bk
        sqlStates[337117240] = "00000"; //  56 nbackup_page_changed
        sqlStates[337117241] = "00000"; //  57 nbackup_dbsize_inconsistent
        sqlStates[337117242] = "00000"; //  58 nbackup_failed_lzbk
        sqlStates[337117243] = "00000"; //  59 nbackup_err_eofhdrbk
        sqlStates[337117244] = "00000"; //  60 nbackup_invalid_incbk
        sqlStates[337117245] = "00000"; //  61 nbackup_unsupvers_incbk
        sqlStates[337117246] = "00000"; //  62 nbackup_invlevel_incbk
        sqlStates[337117247] = "00000"; //  63 nbackup_wrong_orderbk
        sqlStates[337117248] = "00000"; //  64 nbackup_err_eofbk
        sqlStates[337117249] = "00000"; //  65 nbackup_err_copy
        sqlStates[337117250] = "00000"; //  66 nbackup_err_eofhdr_restdb
        sqlStates[337117251] = "00000"; //  67 nbackup_lostguid_l0bk
        sqlStates[337117255] = "00000"; //  71 nbackup_switchd_parameter
        sqlStates[337117257] = "08006"; //  73 nbackup_user_stop
        sqlStates[337117259] = "54023"; //  75 nbackup_deco_parse
        sqlStates[337117261] = "00000"; //  77 nbackup_lostrec_guid_db
        sqlStates[337182750] = "00000"; //  30 trace_conflict_acts
        sqlStates[337182751] = "00000"; //  31 trace_act_notfound
        sqlStates[337182752] = "00000"; //  32 trace_switch_once
        sqlStates[337182753] = "00000"; //  33 trace_param_val_miss
        sqlStates[337182754] = "00000"; //  34 trace_param_invalid
        sqlStates[337182755] = "00000"; //  35 trace_switch_unknown
        sqlStates[337182756] = "00000"; //  36 trace_switch_svc_only
        sqlStates[337182757] = "00000"; //  37 trace_switch_user_only
        sqlStates[337182758] = "00000"; //  38 trace_switch_param_miss
        sqlStates[337182759] = "00000"; //  39 trace_param_act_notcompat
        sqlStates[337182760] = "00000"; //  40 trace_mandatory_switch_miss

        (() @trusted => sqlStates.rehash())();
    }

protected:
    string[int] sqlStates;

private:
    __gshared static FbSqlStates _instance;
}


// Any below codes are private
private:

@safe unittest // FbMessages
{
    import pham.utl.utl_test;
    traceUnitTest("unittest pham.db.fbmessage.FbMessages");

    assert(FbMessages.get(335544321).length != 0);
    assert(FbMessages.get(337182760).length != 0);
}
